<asdoc build="asd3_0_b2_1">
   <link rel="stylesheet" href="style.css" type="text/css"/>
   <packages>
      <asPackage name="org.si.cml">
         <classes>
            <asClass name="CMLObject" type="class" fullname="org.si.cml:CMLObject" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.cml" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ <b>Basic class for all objects.</b>
     ]]></description>
               <shortDescription><![CDATA[ <b>Basic class for all objects.</b>
     ]]></shortDescription>
               <versions/>
               <author/>
               <example><![CDATA[0) All classes of an object are an extension of CMLObject.<br/>
Override callback functions onCreate(), onDestroy(), onUpdate(), onNewObject() and onFireObject().
<listing version="3.0">
// Enemy class
class Enemy extends CMLObject
{
    ...
    
    // for initializing
    override public function onCreate() : void
    {
        _animationCounter = 0;
    }
    
    // for finalizing
    override public function onDestroy() : void
    {
        // destructionStatus=1 means destruction (as you like), create explosion particles.
        if (destructionStatus == 1) _createExplosion();
    }
    
    // for updating on each frame
    override public function onUpdate() : void
    {
        // Increase animation counter.
        if (++_animationCounter == 100) _animationCounter = 0;
        
        // Drawing
        _drawEnemy(this);
    }

    // for new object created by "n" command
    override public function onNewObject(args:Array) : CMLObject
    {
        return new Enemy();
    }
    
    // for new object created by "f" command
    override public function onFireObject(args:Array) : CMLObject
    {
        return new Bullet();
    }

    ...
}


class Bullet extends CMLObject
{
    ...
}


class Player extends CMLObject
{
    ...
}


class Shot extends CMLObject
{
    ...
}
</listing>
]]></example>
               <example><![CDATA[1) Call the CMLObject.initialize() function first of all. 
<listing version="3.0">
// 1st argument specifies scrolling direction (set true for vertical, false for horizontal).
CMLObject.initialize(true);
</listing>
]]></example>
               <example><![CDATA[2) Create player object and marking it as "default target".
<listing version="3.0">
var player:CMLObject = new Player();    // Player class is your extention of CMLObject.
player.setAsDefaultTarget();            // Default target is the object to fire.
</listing>
]]></example>
               <example><![CDATA[3) Create a new CMLSequence from cannonML or bulletML, and call create() and execute().
<listing version="3.0">
// Create stage sequence from "String of cannonML" or "XML of bulletML".
var stageSequence:CMLSequence = new CMLSequence(String or XML);

 ...

var root:Enemy = new Enemy();   // create one enemy as "root enemy" (usually transparent)
root.create(x, y);              // Create root enemy on the cml field.
root.execute(stageSequence);    // Execute stage sequence on root enemy.
</listing>
]]></example>
               <example><![CDATA[4) Call CMLObject.update() once for each frame.
<listing version="3.0">
addEventListener(Event.ENTER_FRAME, _onEnterFrame);

function _onEnterFrame(event:Event) : void {
    CMLObject.update();
}
</listing>
     ]]></example>
               <sees>
                  <see href="CMLObject.html#initialize()" label="CMLObject.initialize()"/>
                  <see href="CMLObject.html#update()" label="CMLObject.update()"/>
                  <see href="CMLObject.html#setAsDefaultTarget()" label="CMLObject.setAsDefaultTarget()"/>
                  <see href="CMLObject.html#execute()" label="CMLObject.execute()"/>
                  <see href="CMLObject.html#create()" label="CMLObject.create()"/>
                  <see href="CMLObject.html#root" label="CMLObject.root"/>
                  <see href="CMLSequence.html" label="CMLSequence"/>
                  <see href="CMLFiber.html" label="CMLFiber"/>
               </sees>
               <asDecendants>
                  <classRef name="ScopeLimitObject" fullName="org.si.cml.extensions:ScopeLimitObject" packageName="org.si.cml.extensions" relativePath="extensions/ScopeLimitObject.html"/>
               </asDecendants>
               <asAncestors>
                  <asAncestor>
                     <classRef name="org.si.cml.core.CMLListElem" fullName="org.si.cml.core.CMLListElem" relativePath="none"/>
                  </asAncestor>
               </asAncestors>
               <constructors>
                  <constructor name="CMLObject" fullname="org.si.cml:CMLObject/CMLObject" accessLevel="public" result_type="*" inheritDoc="false">
                     <description><![CDATA[ Constructor. ]]></description>
                     <shortDescription><![CDATA[ Constructor.]]></shortDescription>
                     <versions/>
                     <result type="*"/>
                  </constructor>
               </constructors>
               <methods>
                  <method name="calcAbsPosition" fullname="org.si.cml:CMLObject/protected:calcAbsPosition" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Calculate absolute position when the isPart is true. 
          The protected function _motion_parts() is a typical usage of this. 
         ]]></description>
                     <shortDescription><![CDATA[ Calculate absolute position when the isPart is true.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="calcRelatedPosition" fullname="org.si.cml:CMLObject/protected:calcRelatedPosition" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Calculate parent related position from absolute position.
         ]]></description>
                     <shortDescription><![CDATA[ Calculate parent related position from absolute position.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="changeParent" fullname="org.si.cml:CMLObject/changeParent" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Change parent. ]]></description>
                     <shortDescription><![CDATA[ Change parent.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="parent_" type="org.si.cml:CMLObject" default="null">
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="CMLObject.html"/>
                        </param>
                        <param name="isPart_" type="Boolean" default="false"/>
                        <param name="access_id_" type="int" default="unknown"/>
                     </params>
                  </method>
                  <method name="countAllIDedChildren" fullname="org.si.cml:CMLObject/countAllIDedChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Count all children with access id. 
          ]]></description>
                     <shortDescription><![CDATA[ Count all children with access id.]]></shortDescription>
                     <versions/>
                     <result type="int"><![CDATA[The count of child objects with access id.
          ]]></result>
                     <sees>
                        <see href="CMLObject.html#create()" label="CMLObject.create()"/>
                     </sees>
                  </method>
                  <method name="countIDedChildren" fullname="org.si.cml:CMLObject/countIDedChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Count children with specifyed id.
          ]]></description>
                     <shortDescription><![CDATA[ Count children with specifyed id.]]></shortDescription>
                     <versions/>
                     <result type="int"><![CDATA[The count of child objects with specifyed id.
          ]]></result>
                     <sees>
                        <see href="CMLObject.html#create()" label="CMLObject.create()"/>
                     </sees>
                     <params>
                        <param name="id" type="int">
                           <description><![CDATA[Access id specifyed in create() or "n command.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="create" fullname="org.si.cml:CMLObject/create" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Create new object on the CML stage.
          ]]></description>
                     <shortDescription><![CDATA[ Create new object on the CML stage.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this instance.
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="x_" type="Number">
                           <description><![CDATA[        X value of this object on a stage or parent(if its a part of parent).
          ]]></description>
                        </param>
                        <param name="y_" type="Number">
                           <description><![CDATA[        Y value of this object on a stage or parent(if its a part of parent).
          ]]></description>
                        </param>
                        <param name="parent_" type="org.si.cml:CMLObject" default="null">
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="CMLObject.html"/>
                           <description><![CDATA[   The instance of parent object. Pass null to set this object as a child of root.
          ]]></description>
                        </param>
                        <param name="isPart_" type="Boolean" default="false">
                           <description><![CDATA[   True to set this object as a part of parent.
          ]]></description>
                        </param>
                        <param name="access_id_" type="int" default="unknown">
                           <description><![CDATA[Access ID from parent.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="destroy" fullname="org.si.cml:CMLObject/destroy" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Destroy this object. The onDestroy() is called when the next CMLObject.update().
          ]]></description>
                     <shortDescription><![CDATA[ Destroy this object.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <sees>
                        <see href="CMLObject.html#destructionStatus" label="CMLObject.destructionStatus"/>
                        <see href="CMLObject.html#onDestroy()" label="CMLObject.onDestroy()"/>
                     </sees>
                     <params>
                        <param name="status" type="int">
                           <description><![CDATA[A value of the destruction status. This must be greater than or equal to 0. You can refer this by CMLObject.destructionStatus in onDestroy().
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="destroyAll" fullname="org.si.cml:CMLObject/destroyAll" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ Destroy all active objects except for root. This function <b>must not</b> be called from onDestroy().
          ]]></description>
                     <shortDescription><![CDATA[ Destroy all active objects except for root.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <sees>
                        <see href="CMLObject.html#destructionStatus" label="CMLObject.destructionStatus"/>
                        <see href="CMLObject.html#onDestroy()" label="CMLObject.onDestroy()"/>
                     </sees>
                     <params>
                        <param name="status" type="int">
                           <description><![CDATA[A value of the destruction status. This must be greater than or equal to 0. You can refer this by destructionStatus in onDestroy(). 
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="execute" fullname="org.si.cml:CMLObject/execute" accessLevel="public" result_type="org.si.cml:CMLFiber" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Execute a sequence and create a new fiber.
          ]]></description>
                     <shortDescription><![CDATA[ Execute a sequence and create a new fiber.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLFiber">
                        <![CDATA[Instance of fiber that execute the sequence.
         ]]>
                        <classRef name="CMLFiber" fullName="org.si.cml:CMLFiber" packageName="org.si.cml" relativePath="../cml/CMLFiber.html"/>
                     </result>
                     <params>
                        <param name="seq" type="org.si.cml:CMLSequence">
                           <classRef name="CMLSequence" fullName="org.si.cml:CMLSequence" packageName="org.si.cml" relativePath="CMLSequence.html"/>
                           <description><![CDATA[The sequence to execute.
          ]]></description>
                        </param>
                        <param name="args" type="Array" default="null">
                           <description><![CDATA[The array of arguments to execute sequence.
          ]]></description>
                        </param>
                        <param name="invertFlag" type="uint" default="0">
                           <description><![CDATA[The flag to invert execution same as 'm' command.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="findAllChildren" fullname="org.si.cml:CMLObject/findAllChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Find all child and callback. <br/>
          ]]></description>
                     <shortDescription><![CDATA[ Find all child and callback.]]></shortDescription>
                     <versions/>
                     <result type="int"><![CDATA[The count of the executions of call back function.
          ]]></result>
                     <sees>
                        <see href="CMLObject.html#create()" label="CMLObject.create()"/>
                     </sees>
                     <params>
                        <param name="id" type="int">
                           <description><![CDATA[Access id specifyed in create() or "n command.
          ]]></description>
                        </param>
                        <param name="func" type="Function">
                           <description><![CDATA[The call back function to operate objects. The type is function(obj:CMLObject):Boolean. Stop finding when this returns true.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="findAllParts" fullname="org.si.cml:CMLObject/findAllParts" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Find all parts and callback. <br/>
          ]]></description>
                     <shortDescription><![CDATA[ Find all parts and callback.]]></shortDescription>
                     <versions/>
                     <result type="int"><![CDATA[The count of the executions of call back function.
          ]]></result>
                     <sees>
                        <see href="CMLObject.html#create()" label="CMLObject.create()"/>
                     </sees>
                     <params>
                        <param name="func" type="Function">
                           <description><![CDATA[The call back function to operate objects. The type is function(obj:CMLObject):Boolean. Stop finding when this returns true.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="findChild" fullname="org.si.cml:CMLObject/findChild" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Find first child object with specifyed id. 
          ]]></description>
                     <shortDescription><![CDATA[ Find first child object with specifyed id.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[The first child object with specifyed id. Return null when the seach was failed.
          ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <sees>
                        <see href="CMLObject.html#create()" label="CMLObject.create()"/>
                     </sees>
                     <params>
                        <param name="id" type="int">
                           <description><![CDATA[Access id specifyed in create() or "n command.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="getAimingAngle" fullname="org.si.cml:CMLObject/getAimingAngle" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Calculate aiming angle to another object.
         ]]></description>
                     <shortDescription><![CDATA[ Calculate aiming angle to another object.]]></shortDescription>
                     <versions/>
                     <result type="Number"><![CDATA[Angle.
         ]]></result>
                     <params>
                        <param name="target_" type="org.si.cml:CMLObject">
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="CMLObject.html"/>
                           <description><![CDATA[Another object to calculate angle.
         ]]></description>
                        </param>
                        <param name="offx" type="Number" default="0">
                           <description><![CDATA[X position offset to calculate angle.
         ]]></description>
                        </param>
                        <param name="offy" type="Number" default="0">
                           <description><![CDATA[Y position offset to calculate angle.
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="getDistance" fullname="org.si.cml:CMLObject/getDistance" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Calculate distance from another object aproximately. The distance is calculated as an octagnal.
         ]]></description>
                     <shortDescription><![CDATA[ Calculate distance from another object aproximately.]]></shortDescription>
                     <versions/>
                     <result type="Number"><![CDATA[Rough distance.
         ]]></result>
                     <params>
                        <param name="tgt" type="org.si.cml:CMLObject">
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="CMLObject.html"/>
                           <description><![CDATA[Another object to calculate distance.
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="halt" fullname="org.si.cml:CMLObject/halt" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Destroy all fibers of this object. This function is slow.
          If you want to execute faster, keep returned CMLFiber of CMLObject.execute() and call CMLFiber.destroy() wherever possible.
          ]]></description>
                     <shortDescription><![CDATA[ Destroy all fibers of this object.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <sees>
                        <see href="CMLObject.html#execute()" label="CMLObject.execute()"/>
                        <see href="CMLFiber.html#destroy()" label="CMLFiber.destroy()"/>
                     </sees>
                  </method>
                  <method name="initialize" fullname="org.si.cml:CMLObject/initialize" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ <b>Call this function first of all</b>.
          ]]></description>
                     <shortDescription><![CDATA[ <b>Call this function first of all</b>.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[The root object.
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="vertical_" type="Boolean" default="true">
                           <description><![CDATA[Flag of scrolling direction
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="onCreate" fullname="org.si.cml:CMLObject/onCreate" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Callback function on create. Override this to initialize.]]></description>
                     <shortDescription><![CDATA[ Callback function on create.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="onDestroy" fullname="org.si.cml:CMLObject/onDestroy" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Callback function on destroy. Override this to finalize.
          ]]></description>
                     <shortDescription><![CDATA[ Callback function on destroy.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <sees>
                        <see href="CMLObject.html#destroy()" label="CMLObject.destroy()"/>
                        <see href="CMLObject.html#destroyAll()" label="CMLObject.destroyAll()"/>
                     </sees>
                  </method>
                  <method name="onFireObject" fullname="org.si.cml:CMLObject/onFireObject" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Statement "f" calls this when it needs. Override this to define the new CMLObject created by "f" command.
          ]]></description>
                     <shortDescription><![CDATA[ Statement "f" calls this when it needs.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="args" type="Array">
                           <description><![CDATA[The arguments of sequence.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="onNewObject" fullname="org.si.cml:CMLObject/onNewObject" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Statement "n" calls this when it needs. Override this to define the new CMLObject created by "n" command.
          ]]></description>
                     <shortDescription><![CDATA[ Statement "n" calls this when it needs.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="args" type="Array">
                           <description><![CDATA[The arguments of sequence.
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="onUpdate" fullname="org.si.cml:CMLObject/onUpdate" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Callback function from CMLObject.update(). This function is called after updating position. Override this to update own parameters.]]></description>
                     <shortDescription><![CDATA[ Callback function from CMLObject.update().]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="rand" fullname="org.si.cml:CMLObject/rand" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ The return value is from CMLObject.funcRand. Call CMLObject.funcRand internally.
          ]]></description>
                     <shortDescription><![CDATA[ The return value is from CMLObject.funcRand.]]></shortDescription>
                     <versions/>
                     <result type="Number"><![CDATA[The random number between 0-1. 
          ]]></result>
                     <sees>
                        <see href="CMLObject.html#funcRand" label="CMLObject.funcRand"/>
                     </sees>
                  </method>
                  <method name="reset" fullname="org.si.cml:CMLObject/reset" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Reset position, velocity, accelaration, interpolation, motion type and rotation.
         ]]></description>
                     <shortDescription><![CDATA[ Reset position, velocity, accelaration, interpolation, motion type and rotation.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="x_" type="Number"/>
                        <param name="y_" type="Number"/>
                     </params>
                  </method>
                  <method name="rotateHead" fullname="org.si.cml:CMLObject/protected:rotateHead" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Rotate haed in 1 frame, if rotd > 0. The _motion() is a typical usage exapmle. ]]></description>
                     <shortDescription><![CDATA[ Rotate haed in 1 frame, if rotd > 0.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <sees>
                        <see href="CMLObject.html#_motion()" label="CMLObject._motion()"/>
                     </sees>
                  </method>
                  <method name="setAccelaration" fullname="org.si.cml:CMLObject/setAccelaration" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Set accelaration.
          ]]></description>
                     <shortDescription><![CDATA[ Set accelaration.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this object
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="ax_" type="Number">
                           <description><![CDATA[X value of accelaration.
          ]]></description>
                        </param>
                        <param name="ay_" type="Number">
                           <description><![CDATA[Y value of accelaration.
          ]]></description>
                        </param>
                        <param name="time_" type="int" default="0">
                           <description><![CDATA[Frames to stop accelarate. 0 means not to stop.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="setAsDefaultTarget" fullname="org.si.cml:CMLObject/setAsDefaultTarget" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Set as a default target object. A default target is the object to target from all objects at default, usually player is as. 
          ]]></description>
                     <shortDescription><![CDATA[ Set as a default target object.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this object
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                  </method>
                  <method name="setChangeDirection" fullname="org.si.cml:CMLObject/setChangeDirection" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ &lt;changeDirection type='absolute'&gt; of bulletML.
          ]]></description>
                     <shortDescription><![CDATA[ &lt;changeDirection type='absolute'&gt; of bulletML.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this object
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="dir" type="Number">
                           <description><![CDATA[Direction to change.
          ]]></description>
                        </param>
                        <param name="term" type="int">
                           <description><![CDATA[Frames to change direction.
          ]]></description>
                        </param>
                        <param name="rmax" type="Number">
                           <description><![CDATA[Maxmum speed of rotation [degrees/frame].
          ]]></description>
                        </param>
                        <param name="shortest_rot" type="Boolean" default="true">
                           <description><![CDATA[Flag to rotate on shortest rotation.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="setChangeSpeed" fullname="org.si.cml:CMLObject/setChangeSpeed" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ &lt;changeSpeed type='absolute'&gt; of bulletML.
          ]]></description>
                     <shortDescription><![CDATA[ &lt;changeSpeed type='absolute'&gt; of bulletML.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this object
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="spd" type="Number">
                           <description><![CDATA[Speed to change.
          ]]></description>
                        </param>
                        <param name="term" type="int" default="0">
                           <description><![CDATA[Frames to change speed.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="setConstantRotation" fullname="org.si.cml:CMLObject/setConstantRotation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Set constant rotation. You can specify the maximum speed.
          ]]></description>
                     <shortDescription><![CDATA[ Set constant rotation.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this object
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="end_angle" type="Number">
                           <description><![CDATA[Final angle when the rotation finished, based on scrolling direction.
          ]]></description>
                        </param>
                        <param name="term" type="Number" default="0">
                           <description><![CDATA[Frames to rotate.
          ]]></description>
                        </param>
                        <param name="rmax" type="Number" default="1">
                           <description><![CDATA[Maximum speed of rotation [degrees/frame].
          ]]></description>
                        </param>
                        <param name="isShortestRotation" type="Boolean" default="true">
                           <description><![CDATA[Rotate with shortest rotation or not.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="setGlobalRankRange" fullname="org.si.cml:CMLObject/setGlobalRankRange" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ Set the range of globalRank. The global rank value is limited in this range. ]]></description>
                     <shortDescription><![CDATA[ Set the range of globalRank.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="min" type="Number"/>
                        <param name="max" type="Number"/>
                     </params>
                  </method>
                  <method name="setGravity" fullname="org.si.cml:CMLObject/setGravity" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Set gravity motion.
          <p>
          <b>This function is not available for a part of parent.</b>
          After this function, the CMLObject.setPosition() sets the gravity center.
          The calculation of the motion is below.<br/>
          [accelaration] = [distance] [atr_a] / 100 - [velocity] [atr_b] / 100<br/>
          </p>
          ]]></description>
                     <shortDescription><![CDATA[ Set gravity motion.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this object
          ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <sees>
                        <see href="CMLObject.html#setPosition" label="CMLObject.setPosition"/>
                     </sees>
                     <params>
                        <param name="atr_a" type="Number">
                           <description><![CDATA[Attracting parameter a[%]. Ratio of attracting force.
          ]]></description>
                        </param>
                        <param name="atr_b" type="Number">
                           <description><![CDATA[Attracting parameter b[%]. Ratio of air fliction.
          ]]></description>
                        </param>
                        <param name="term" type="int" default="0">
                           <description><![CDATA[Frames to enable attracting force.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="setInterpolation" fullname="org.si.cml:CMLObject/setInterpolation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Set interpolating motion.
          ]]></description>
                     <shortDescription><![CDATA[ Set interpolating motion.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this object
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="x_" type="Number">
                           <description><![CDATA[X value of position.
          ]]></description>
                        </param>
                        <param name="y_" type="Number">
                           <description><![CDATA[Y value of position.
          ]]></description>
                        </param>
                        <param name="vx_" type="Number">
                           <description><![CDATA[X value of velocity.
          ]]></description>
                        </param>
                        <param name="vy_" type="Number">
                           <description><![CDATA[Y value of velocity.
          ]]></description>
                        </param>
                        <param name="term_" type="int" default="0">
                           <description><![CDATA[Frames for tweening with bezier interpolation.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="setPosition" fullname="org.si.cml:CMLObject/setPosition" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Set position.
          ]]></description>
                     <shortDescription><![CDATA[ Set position.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this object
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="x_" type="Number">
                           <description><![CDATA[X value of position.
          ]]></description>
                        </param>
                        <param name="y_" type="Number">
                           <description><![CDATA[Y value of position.
          ]]></description>
                        </param>
                        <param name="term_" type="int" default="0">
                           <description><![CDATA[Frames for tweening with bezier interpolation.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="setRotation" fullname="org.si.cml:CMLObject/setRotation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Set rotation. You can specify the first and last speed.
          ]]></description>
                     <shortDescription><![CDATA[ Set rotation.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this object
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="end_angle" type="Number">
                           <description><![CDATA[Final angle when the rotation finished, based on scrolling direction.
          ]]></description>
                        </param>
                        <param name="term" type="Number" default="0">
                           <description><![CDATA[Frames to rotate.
          ]]></description>
                        </param>
                        <param name="start_t" type="Number" default="1">
                           <description><![CDATA[Ratio of first rotating speed. The value of 1 means the speed of a constant rotation.
          ]]></description>
                        </param>
                        <param name="end_t" type="Number" default="1">
                           <description><![CDATA[Ratio of last rotating speed. The value of 1 means the speed of a constant rotation.
          ]]></description>
                        </param>
                        <param name="isShortestRotation" type="Boolean" default="true">
                           <description><![CDATA[Rotate with shortest rotation or not.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="setVelocity" fullname="org.si.cml:CMLObject/setVelocity" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Set velocity.
          ]]></description>
                     <shortDescription><![CDATA[ Set velocity.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[this object
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="vx_" type="Number">
                           <description><![CDATA[X value of velocity.
          ]]></description>
                        </param>
                        <param name="vy_" type="Number">
                           <description><![CDATA[Y value of velocity.
          ]]></description>
                        </param>
                        <param name="term_" type="int" default="0">
                           <description><![CDATA[Frames for tweening with bezier interpolation.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="transformGlobalToLocal" fullname="org.si.cml:CMLObject/transformGlobalToLocal" accessLevel="public" result_type="flash.geom:Point" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ transform global coordinate to object local coordinate
          ]]></description>
                     <shortDescription><![CDATA[ transform global coordinate to object local coordinate
          ]]></shortDescription>
                     <versions/>
                     <result type="flash.geom:Point"><![CDATA[point on local coordinate. this instance is that you passed as argument.
         ]]></result>
                     <params>
                        <param name="global" type="flash.geom:Point">
                           <description><![CDATA[on global coordinate. this instance is overwritten inside.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="transformLocalToGlobal" fullname="org.si.cml:CMLObject/transformLocalToGlobal" accessLevel="public" result_type="flash.geom:Point" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ transform object local coordinate to global coordinate 
          ]]></description>
                     <shortDescription><![CDATA[ transform object local coordinate to global coordinate 
          ]]></shortDescription>
                     <versions/>
                     <result type="flash.geom:Point"><![CDATA[point on global coordinate. this instance is that you passed as argument.
         ]]></result>
                     <params>
                        <param name="local" type="flash.geom:Point">
                           <description><![CDATA[on local coordinate. this instance is overwritten inside.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="update" fullname="org.si.cml:CMLObject/update" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ <b>Call this function for each frame</b>. This function calls all CMLObject.onUpdate()s. ]]></description>
                     <shortDescription><![CDATA[ <b>Call this function for each frame</b>.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
               </methods>
               <fields>
                  <field name="MT_ACCEL" fullname="org.si.cml:CMLObject/MT_ACCEL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="1">
                     <description><![CDATA[ Number for CMLObject.motion_type, Accelarating motion. ]]></description>
                     <shortDescription><![CDATA[ Number for CMLObject.motion_type, Accelarating motion.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="MT_BULLETML" fullname="org.si.cml:CMLObject/MT_BULLETML" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="3">
                     <description><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion. ]]></description>
                     <shortDescription><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="MT_CONST" fullname="org.si.cml:CMLObject/MT_CONST" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="0">
                     <description><![CDATA[ Number for CMLObject.motion_type, Linear motion. ]]></description>
                     <shortDescription><![CDATA[ Number for CMLObject.motion_type, Linear motion.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="MT_GRAVITY" fullname="org.si.cml:CMLObject/MT_GRAVITY" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="4">
                     <description><![CDATA[ Number for CMLObject.motion_type, Gravity motion. ]]></description>
                     <shortDescription><![CDATA[ Number for CMLObject.motion_type, Gravity motion.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="MT_INTERPOL" fullname="org.si.cml:CMLObject/MT_INTERPOL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="2">
                     <description><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion. ]]></description>
                     <shortDescription><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="MT_PART_ACCEL" fullname="org.si.cml:CMLObject/MT_PART_ACCEL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                     <description><![CDATA[ Number for CMLObject.motion_type, Accelarating motion of parts. ]]></description>
                     <shortDescription><![CDATA[ Number for CMLObject.motion_type, Accelarating motion of parts.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="MT_PART_BULLETML" fullname="org.si.cml:CMLObject/MT_PART_BULLETML" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                     <description><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion of parts. ]]></description>
                     <shortDescription><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion of parts.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="MT_PART_CONST" fullname="org.si.cml:CMLObject/MT_PART_CONST" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                     <description><![CDATA[ Number for CMLObject.motion_type, Linear motion of parts. ]]></description>
                     <shortDescription><![CDATA[ Number for CMLObject.motion_type, Linear motion of parts.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="MT_PART_INTERPOL" fullname="org.si.cml:CMLObject/MT_PART_INTERPOL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                     <description><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion of parts. ]]></description>
                     <shortDescription><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion of parts.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="actor" fullname="org.si.cml:CMLObject/actor" accessLevel="public" type="" isConst="false" isStatic="false" defaultValue="unknown">
                     <description><![CDATA[ You can rewrite this for your own purpose. ]]></description>
                     <shortDescription><![CDATA[ You can rewrite this for your own purpose.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="vx" fullname="org.si.cml:CMLObject/vx" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                     <description><![CDATA[ X value of velocity. ]]></description>
                     <shortDescription><![CDATA[ X value of velocity.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="vy" fullname="org.si.cml:CMLObject/vy" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                     <description><![CDATA[ Y value of velocity. ]]></description>
                     <shortDescription><![CDATA[ Y value of velocity.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="x" fullname="org.si.cml:CMLObject/x" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                     <description><![CDATA[ X value of position. ]]></description>
                     <shortDescription><![CDATA[ X value of position.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="y" fullname="org.si.cml:CMLObject/y" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                     <description><![CDATA[ Y value of position. ]]></description>
                     <shortDescription><![CDATA[ Y value of position.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="angle" fullname="org.si.cml:CMLObject/angle/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Angle of this object, scrolling direction is 0 degree. ]]></description>
                     <shortDescription><![CDATA[ Angle of this object, scrolling direction is 0 degree.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="angleAccel" fullname="org.si.cml:CMLObject/angleAccel/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ Calculate direction of accelaration. ]]></description>
                     <shortDescription><![CDATA[ Calculate direction of accelaration.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="angleOnStage" fullname="org.si.cml:CMLObject/angleOnStage/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Angle of this object, The direction(1,0) is 0 degree. ]]></description>
                     <shortDescription><![CDATA[ Angle of this object, The direction(1,0) is 0 degree.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="angleParentOnStage" fullname="org.si.cml:CMLObject/angleParentOnStage/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ Angle of this parent object, scrolling direction is 0 degree. ]]></description>
                     <shortDescription><![CDATA[ Angle of this parent object, scrolling direction is 0 degree.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="anglePosition" fullname="org.si.cml:CMLObject/anglePosition/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ Calculate direction of position from origin. ]]></description>
                     <shortDescription><![CDATA[ Calculate direction of position from origin.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="angleVelocity" fullname="org.si.cml:CMLObject/angleVelocity/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ Calculate direction of velocity. ]]></description>
                     <shortDescription><![CDATA[ Calculate direction of velocity.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="destructionStatus" fullname="org.si.cml:CMLObject/destructionStatus/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read">
                     <description><![CDATA[ Destruction status. You can refer the argument of destroy() or the ']]></description>
                     <shortDescription><![CDATA[ Destruction status.]]></shortDescription>
                     <versions/>
                     <sees>
                        <see href="CMLObject.html#onDestroy()" label="CMLObject.onDestroy()"/>
                        <see href="CMLObject.html#destroy()" label="CMLObject.destroy()"/>
                        <see href="CMLObject.html#destroyAll()" label="CMLObject.destroyAll()"/>
                     </sees>
                     <customs/>
                  </field>
                  <field name="frameRateRatio" fullname="org.si.cml:CMLObject/frameRateRatio/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Value of (frame rate to calculate speed) / (screen frame rate). ]]></description>
                     <shortDescription><![CDATA[ Value of (frame rate to calculate speed) / (screen frame rate).]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="funcRand" fullname="org.si.cml:CMLObject/funcRand/get" accessLevel="public" isConst="false" isStatic="true" type="Function" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Function for "$?/$??" variable, The type is function():Number. ]]></description>
                     <shortDescription><![CDATA[ Function for "$?/$??" variable, The type is function():Number.]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[Math.random() ]]></default>
                     </customs>
                  </field>
                  <field name="globalRank" fullname="org.si.cml:CMLObject/globalRank/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Variable for "$r" ]]></description>
                     <shortDescription><![CDATA[ Variable for "$r" ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="hasParts" fullname="org.si.cml:CMLObject/hasParts/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read">
                     <description><![CDATA[ Does this object have another object as a part ? ]]></description>
                     <shortDescription><![CDATA[ Does this object have another object as a part ? ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="id" fullname="org.si.cml:CMLObject/id/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false" only="read">
                     <description><![CDATA[ Construction ID, this value changes when the object is destroyed.
         ]]></description>
                     <shortDescription><![CDATA[ Construction ID, this value changes when the object is destroyed.]]></shortDescription>
                     <versions/>
                     <example><![CDATA[If you want to know the object is available or not, check the id.
<listing version="3.0">
target_object_id = target_object.id;        // keep the target's id value.
...
if (target_object_id != target_object.id) { // if the id value is different,
    target_object = null;                   // target object was destroyed.
}
</listing>
         ]]></example>
                  </field>
                  <field name="isActive" fullname="org.si.cml:CMLObject/isActive/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read">
                     <description><![CDATA[ Is this object on stage ? ]]></description>
                     <shortDescription><![CDATA[ Is this object on stage ? ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="isPart" fullname="org.si.cml:CMLObject/isPart/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read">
                     <description><![CDATA[ Is this object a part of its parent ? The part object's position is relative to parent's position. ]]></description>
                     <shortDescription><![CDATA[ Is this object a part of its parent ? The part object's position is relative to parent's position.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="motion_type" fullname="org.si.cml:CMLObject/motion_type/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false" only="read">
                     <description><![CDATA[ Motion type. 
         ]]></description>
                     <shortDescription><![CDATA[ Motion type.]]></shortDescription>
                     <versions/>
                     <sees>
                        <see href="CMLObject.html#MT_CONST" label="CMLObject.MT_CONST"/>
                        <see href="CMLObject.html#MT_ACCEL" label="CMLObject.MT_ACCEL"/>
                        <see href="CMLObject.html#MT_INTERPOL" label="CMLObject.MT_INTERPOL"/>
                        <see href="CMLObject.html#MT_BULLETML" label="CMLObject.MT_BULLETML"/>
                        <see href="CMLObject.html#MT_GRAVITY" label="CMLObject.MT_GRAVITY"/>
                     </sees>
                  </field>
                  <field name="parent" fullname="org.si.cml:CMLObject/parent/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml:CMLObject" inheritDoc="false" only="read">
                     <description><![CDATA[ The CMLObject that creates this object. Returns root when the parent was destroyed. ]]></description>
                     <shortDescription><![CDATA[ The CMLObject that creates this object.]]></shortDescription>
                     <versions/>
                     <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                  </field>
                  <field name="rank" fullname="org.si.cml:CMLObject/rank/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ You can define the "$r" value for each object by overriding this property, Ussualy returns CMLObject.globalRank. ]]></description>
                     <shortDescription><![CDATA[ You can define the "$r" value for each object by overriding this property, Ussualy returns CMLObject.globalRank.]]></shortDescription>
                     <versions/>
                     <sees>
                        <see href="CMLObject.html#globalRank" label="CMLObject.globalRank"/>
                     </sees>
                  </field>
                  <field name="relatedX" fullname="org.si.cml:CMLObject/relatedX/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ The x value of position parent related ]]></description>
                     <shortDescription><![CDATA[ The x value of position parent related ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="relatedY" fullname="org.si.cml:CMLObject/relatedY/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ The y value of position parent related ]]></description>
                     <shortDescription><![CDATA[ The y value of position parent related ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="root" fullname="org.si.cml:CMLObject/root/get" accessLevel="public" isConst="false" isStatic="true" type="org.si.cml:CMLObject" inheritDoc="false" only="read">
                     <description><![CDATA[ root object is the default parent of all CMLObjects that are created with the argument of parent=null. ]]></description>
                     <shortDescription><![CDATA[ root object is the default parent of all CMLObjects that are created with the argument of parent=null.]]></shortDescription>
                     <versions/>
                     <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                  </field>
                  <field name="scrollAngle" fullname="org.si.cml:CMLObject/scrollAngle/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ Scrolling angle (vertical=-90, horizontal=180). ]]></description>
                     <shortDescription><![CDATA[ Scrolling angle (vertical=-90, horizontal=180).]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="velocity" fullname="org.si.cml:CMLObject/velocity/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Absolute value of velocity. ]]></description>
                     <shortDescription><![CDATA[ Absolute value of velocity.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="vertical" fullname="org.si.cml:CMLObject/vertical/get" accessLevel="public" isConst="false" isStatic="true" type="int" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Flag for scrolling direction (vertical=1, horizontal=0). ]]></description>
                     <shortDescription><![CDATA[ Flag for scrolling direction (vertical=1, horizontal=0).]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
            <asClass name="CMLSequence" type="class" fullname="org.si.cml:CMLSequence" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.cml" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ Class for the sequences created from the cannonML or the bulletML.
      <p>
      USAGE<br/>
      1) CMLSequence(cannonML_String or bulletML_XML); creates a new sequence from certain cannonML/bulletML.<br/>
      2) CMLObject.execute(CMLSequence); apply sequence to CMLObject.<br/>
      3) CMLSequence.global; makes it global. You can access the child sequences of global sequence from everywhere.<br/>
      4) CMLSequence.findSequence(); finds labeled sequence in cannonML/bulletML.<br/>
      5) CMLSequence.getParameter(); accesses parameters of sequence.<br/>
      6) CMLSequence.registerUserCommand(); registers the function called from cannonML.<br/>
      7) CMLSequence.registerUserVariable(); registers the function refered by cannonML.<br/>
      </p>
     ]]></description>
               <shortDescription><![CDATA[ Class for the sequences created from the cannonML or the bulletML.]]></shortDescription>
               <versions/>
               <author/>
               <example><![CDATA[Typical usage.
<listing version="3.0">
// Create enemys sequence from "String of cannonML" or "XML of bulletML".
var motion:CMLSequence = new CMLSequence(String or XML);

 ...

enemy.create(x, y);                                     // Create enemy on the stage.
enemy.execute(motion);                                  // Execute sequence.
</listing>
     ]]></example>
               <sees>
                  <see href="CMLObject.html#execute()" label="CMLObject.execute()"/>
                  <see href="CMLSequence.html#CMLSequence()" label="CMLSequence.CMLSequence()"/>
                  <see href="CMLSequence.html#global" label="CMLSequence.global"/>
                  <see href="CMLSequence.html#findSequence()" label="CMLSequence.findSequence()"/>
                  <see href="CMLSequence.html#getParameter()" label="CMLSequence.getParameter()"/>
                  <see href="CMLSequence.html#registerUserCommand()" label="CMLSequence.registerUserCommand()"/>
                  <see href="CMLSequence.html#registerUserVariable()" label="CMLSequence.registerUserVariable()"/>
               </sees>
               <asAncestors>
                  <asAncestor>
                     <classRef name="org.si.cml.core.CMLState" fullName="org.si.cml.core.CMLState" relativePath="none"/>
                  </asAncestor>
               </asAncestors>
               <constructors>
                  <constructor name="CMLSequence" fullname="org.si.cml:CMLSequence/org.si.cml:CMLSequence" accessLevel="public" result_type="*" inheritDoc="false">
                     <description><![CDATA[ Construct new sequence by a String of cannonML or an XML of bulletML.
          ]]></description>
                     <shortDescription><![CDATA[ Construct new sequence by a String of cannonML or an XML of bulletML.]]></shortDescription>
                     <versions/>
                     <result type="*"/>
                     <params>
                        <param name="data" type="" default="null">
                           <description><![CDATA[Sequence data. Intstance of String or XML is available. String data is for CannonML, and XML data is for BulletML.
          ]]></description>
                        </param>
                        <param name="globalSequence" type="Boolean" default="false">
                           <description><![CDATA[Flag of global sequence.
         ]]></description>
                        </param>
                     </params>
                  </constructor>
               </constructors>
               <methods>
                  <method name="clear" fullname="org.si.cml:CMLSequence/clear" accessLevel="public" result_type="void" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Make this sequence empty.
          <p>
          This function disconnects all statement chains and enable to be caught by GC.
          </p>
         ]]></description>
                     <shortDescription><![CDATA[ Make this sequence empty.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="findSequence" fullname="org.si.cml:CMLSequence/findSequence" accessLevel="public" result_type="org.si.cml:CMLSequence" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <example><![CDATA[<listing version="3.0">
// You can access the child sequence.
var seq:CMLSequence = new CMLSequence("#A{v0,2[w30f3]}");
var seqA:CMLSequence = seq.findSequence("A");       // seqA is "v0,2[w30f]".

// You can use the access operator.
var seq:CMLSequence = new CMLSequence("#A{ #B{v0,2[w30f4]} #C{v0,4[w10f2]} }");
var seqAB:CMLSequence = seq.findSequence("A.B");    // seqAB is "v0,2[w30f4]". Same as seq.findSequence("A").findSequence("B")
var seqAC:CMLSequence = seq.findSequence("A.C");    // seqAB is "v0,4[w10f2]". Same as seq.findSequence("A").findSequence("C")
</listing>
         ]]></example>
                     <description><![CDATA[ Find child sequence that has specifyed label.
          ]]></description>
                     <shortDescription><![CDATA[ Find child sequence that has specifyed label.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLSequence">
                        <![CDATA[Found sequence.
]]>
                        <classRef name="CMLSequence" fullName="org.si.cml:CMLSequence" packageName="org.si.cml" relativePath="../cml/CMLSequence.html"/>
                     </result>
                     <params>
                        <param name="label_" type="String">
                           <description><![CDATA[to find.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="getParameter" fullname="org.si.cml:CMLSequence/getParameter" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <example><![CDATA[<listing version='3.0'>
var seq:CMLSequence = new CMLSequence("#A{10,20 v0,2[w30f3]}");
var seqA:CMLSequence = seq.findSequence("A");
trace(seqA.getParameter(0), seqA.getParameter(1), seqA.getParameter(2));    // 10, 20, 0
</listing>
         ]]></example>
                     <description><![CDATA[ Get parameter of this sequence.
          <p>
          This function gives the parameters of this sequence.<br/>
          Parameters of a sequence are shown like "#LABEL{0,1,2 ... }" in cml-string.
          </p>
          ]]></description>
                     <shortDescription><![CDATA[ Get parameter of this sequence.]]></shortDescription>
                     <versions/>
                     <result type="Number"><![CDATA[Value of argument.
]]></result>
                     <params>
                        <param name="idx" type="uint">
                           <description><![CDATA[Index of argument.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="parse" fullname="org.si.cml:CMLSequence/parse" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Parse CannonML-String or BulletML-XML.
          ]]></description>
                     <shortDescription><![CDATA[ Parse CannonML-String or BulletML-XML.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="data" type="">
                           <description><![CDATA[or XML is avairable. String is for CannonML, and XML is for BulletML.
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="registerUserCommand" fullname="org.si.cml:CMLSequence/registerUserCommand" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <example><![CDATA[
<listing version="3.0">
// In the cml-string, you can use "&sound[sound_index],[volume]" that plays sound.
CMLSequence.registerUserCommand("sound", playSound, 2);

function playSound(fbr:CMLFiber, args:Array) : void
{
    // function _playSound(index, volume) plays sound.
    if (args.length >= 2) _playSound(args[0], args[1]);
}
</listing>
        ]]></example>
                     <description><![CDATA[ Register user defined command "&[a-z_]+".
          <p>
          This function registers the command that can use in CML string. <br/>
          </p>
          ]]></description>
                     <shortDescription><![CDATA[ Register user defined command "&[a-z_]+".]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <sees>
                        <see href="CMLFiber.html" label="CMLFiber"/>
                     </sees>
                     <params>
                        <param name="name" type="String">
                           <description><![CDATA[The name of command that appears like "&name" in CML string.
          ]]></description>
                        </param>
                        <param name="func" type="Function">
                           <description><![CDATA[The callback function when the command appears in sequence.<br/>
          The type of callback is <code>function(fbr:CMLFiber, args:Array):void</code>.
          The 1st argument gives a reference of the fiber that execute the sequence.
          And the 2nd argument gives the arguments of the command.
          ]]></description>
                        </param>
                        <param name="argc" type="int" default="0">
                           <description><![CDATA[The count of argument that this command requires.<br/>
          ]]></description>
                        </param>
                        <param name="requireSequence" type="Boolean" default="false">
                           <description><![CDATA[Specify true if this command require the sequence as the '&', ']]></description>
                        </param>
                     </params>
                     <customs/>
                  </method>
                  <method name="registerUserValiable" fullname="org.si.cml:CMLSequence/registerUserValiable" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <example><![CDATA[
<listing version="3.0">
// In the cml-string, you can use "$life" that returns Enemy's life.
CMLSequence.registerUserValiable("life", referLife);

function referLife(fbr:CMLFiber) : Number
{
    // Enemy class is your extention of CMLObject.
    return Enemy(fbr.object).life;
}
</listing>
         ]]></example>
                     <description><![CDATA[ Register user defined variable "$[a-z_]+".
          <p>
          This function registers the variables that can use in CML-string. <br/>
          </p>
          ]]></description>
                     <shortDescription><![CDATA[ Register user defined variable "$[a-z_]+".]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <sees>
                        <see href="CMLFiber.html" label="CMLFiber"/>
                     </sees>
                     <params>
                        <param name="name" type="String">
                           <description><![CDATA[The name of variable that appears like "$name" in CML-string.
          ]]></description>
                        </param>
                        <param name="func" type="Function">
                           <description><![CDATA[The callback function when the reference appears in sequence.<br/>
          The type of callback is <code>function(fbr:CMLFiber):Number</code>. The argument gives a fiber that execute the sequence.
          ]]></description>
                        </param>
                     </params>
                  </method>
               </methods>
               <fields>
                  <field name="childSequence" fullname="org.si.cml:CMLSequence/childSequence/get" accessLevel="public" isConst="false" isStatic="false" type="*" inheritDoc="false" only="read">
                     <description><![CDATA[ dictionary of child sequence, you can access by label ]]></description>
                     <shortDescription><![CDATA[ dictionary of child sequence, you can access by label ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="global" fullname="org.si.cml:CMLSequence/global/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Flag of global sequence.
          <p>
          Child sequences of a global sequence are accessable from other sequences.<br/>
          </p>
]]></description>
                     <shortDescription><![CDATA[ Flag of global sequence.]]></shortDescription>
                     <versions/>
                     <example><![CDATA[<listing version="3.0">
var seqG:CMLSequence = new CMLSequence("#LABEL_G{...}");

seqG.global = true;
var seqA:CMLSequence = new CMLSequence("&LABEL_G");    // Success; you can refer the LABEL_G.

seqG.global = false;
var seqB:CMLSequence = new CMLSequence("&LABEL_G");    // Error; you cannot refer the LABEL_G.
</listing>
         ]]></example>
                  </field>
                  <field name="isEmpty" fullname="org.si.cml:CMLSequence/isEmpty/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read">
                     <description><![CDATA[ Is this sequence empty ? ]]></description>
                     <shortDescription><![CDATA[ Is this sequence empty ? ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="label" fullname="org.si.cml:CMLSequence/label/get" accessLevel="public" isConst="false" isStatic="false" type="String" inheritDoc="false" only="read">
                     <description><![CDATA[ label of this sequence ]]></description>
                     <shortDescription><![CDATA[ label of this sequence ]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
            <asClass name="CannonML" type="class" fullname="org.si.cml:CannonML" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.cml" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ Cannon ML infomation ]]></description>
               <shortDescription><![CDATA[ Cannon ML infomation ]]></shortDescription>
               <versions/>
               <author/>
               <asAncestors/>
               <fields>
                  <field name="VERSION" fullname="org.si.cml:CannonML/VERSION" accessLevel="public" type="String" isConst="true" isStatic="true" defaultValue="0.3.1">
                     <description><![CDATA[ Version information ]]></description>
                     <shortDescription><![CDATA[ Version information ]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
            <asClass name="CMLFiber" type="class" fullname="org.si.cml:CMLFiber" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.cml" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ Class for the fiber (Fiber is called as "micro thread" in some other languages). 
      <p>
      USAGE<br/>
      1) Get the CMLFiber instance from CMLObject.execute().<br/>
      2) CMLFiber.destroy(); stops this fiber.<br/>
      3) CMLFiber.object; accesses to the CMLObject this fiber controls.<br/>
      4) CMLFiber.target; accesses to the CMLObject this fiber targets to.<br/>
      </p>
     ]]></description>
               <shortDescription><![CDATA[ Class for the fiber (Fiber is called as "micro thread" in some other languages).]]></shortDescription>
               <versions/>
               <author/>
               <sees>
                  <see href="CMLObject.html#execute()" label="CMLObject.execute()"/>
                  <see href="CMLFiber.html#destroy()" label="CMLFiber.destroy()"/>
                  <see href="CMLFiber.html#object" label="CMLFiber.object"/>
                  <see href="CMLFiber.html#target" label="CMLFiber.target"/>
               </sees>
               <asAncestors>
                  <asAncestor>
                     <classRef name="org.si.cml.core.CMLListElem" fullName="org.si.cml.core.CMLListElem" relativePath="none"/>
                  </asAncestor>
               </asAncestors>
               <constructors>
                  <constructor name="CMLFiber" fullname="org.si.cml:CMLFiber/org.si.cml:CMLFiber" accessLevel="public" result_type="*" inheritDoc="false">
                     <description><![CDATA[ <b>You cannot create new CMLFiber().</b> You can get CMLFiber instance only from CMLObject.execute().
          ]]></description>
                     <shortDescription><![CDATA[ <b>You cannot create new CMLFiber().</b> You can get CMLFiber instance only from CMLObject.execute().]]></shortDescription>
                     <versions/>
                     <result type="*"/>
                     <sees>
                        <see href="CMLObject.html#execute()" label="CMLObject.execute()"/>
                     </sees>
                  </constructor>
               </constructors>
               <methods>
                  <method name="destroy" fullname="org.si.cml:CMLFiber/destroy" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Stop the fiber.<br/>
          This function stops all child fibers also.
         ]]></description>
                     <shortDescription><![CDATA[ Stop the fiber.<br/>
          This function stops all child fibers also.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="destroyAllChildren" fullname="org.si.cml:CMLFiber/destroyAllChildren" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Stop all child fibers. ]]></description>
                     <shortDescription><![CDATA[ Stop all child fibers.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="destroyChild" fullname="org.si.cml:CMLFiber/destroyChild" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Stop child fiber with specifyed id. ]]></description>
                     <shortDescription><![CDATA[ Stop child fiber with specifyed id.]]></shortDescription>
                     <versions/>
                     <result type="Boolean"/>
                     <params>
                        <param name="child_id" type="int"/>
                     </params>
                  </method>
                  <method name="findChild" fullname="org.si.cml:CMLFiber/findChild" accessLevel="public" result_type="org.si.cml:CMLFiber" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Find child fiber with specifyed id. ]]></description>
                     <shortDescription><![CDATA[ Find child fiber with specifyed id.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLFiber">
                        <classRef name="CMLFiber" fullName="org.si.cml:CMLFiber" packageName="org.si.cml" relativePath="../cml/CMLFiber.html"/>
                     </result>
                     <params>
                        <param name="child_id" type="int"/>
                     </params>
                  </method>
                  <method name="getInterval" fullname="org.si.cml:CMLFiber/getInterval" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Get the interval value (specifyed by "i" command) of this fiber. 
          ]]></description>
                     <shortDescription><![CDATA[ Get the interval value (specifyed by "i" command) of this fiber.]]></shortDescription>
                     <versions/>
                     <result type="int"><![CDATA[Interval.
         ]]></result>
                  </method>
                  <method name="getLoopCounter" fullname="org.si.cml:CMLFiber/getLoopCounter" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Get the loop counter of this fiber. 
          ]]></description>
                     <shortDescription><![CDATA[ Get the loop counter of this fiber.]]></shortDescription>
                     <versions/>
                     <result type="int"><![CDATA[Loop count. Start at 0, and end at [loop_count]-1.
         ]]></result>
                     <params>
                        <param name="nest" type="int" default="0">
                           <description><![CDATA[loop index. The index of 0 means the most inner loop, and 1 means the loop 1 outside.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="getVeriable" fullname="org.si.cml:CMLFiber/getVeriable" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Get the variables of the sequence "$1...$9". 
          ]]></description>
                     <shortDescription><![CDATA[ Get the variables of the sequence "$1...$9".]]></shortDescription>
                     <versions/>
                     <result type="Number"><![CDATA[Value of variable.
         ]]></result>
                     <params>
                        <param name="idx" type="int">
                           <description><![CDATA[of variable.
          ]]></description>
                        </param>
                     </params>
                  </method>
               </methods>
               <fields>
                  <field name="angle" fullname="org.si.cml:CMLFiber/angle/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ Angle of this fiber. The value is set by "h commands. ]]></description>
                     <shortDescription><![CDATA[ Angle of this fiber.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="barrage" fullname="org.si.cml:CMLFiber/barrage/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml.core:CMLBarrage" inheritDoc="false" only="read">
                     <description><![CDATA[ CMLBarrage that this fiber uses. ]]></description>
                     <shortDescription><![CDATA[ CMLBarrage that this fiber uses.]]></shortDescription>
                     <versions/>
                     <classRef name="CMLBarrage" fullName="org.si.cml.core:CMLBarrage" packageName="org.si.cml.core" relativePath="core/CMLBarrage.html"/>
                  </field>
                  <field name="hasDestFiber" fullname="org.si.cml:CMLFiber/hasDestFiber/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read">
                     <description><![CDATA[ Does this fiber have any destruction fiber ? ]]></description>
                     <shortDescription><![CDATA[ Does this fiber have any destruction fiber ? ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="isActive" fullname="org.si.cml:CMLFiber/isActive/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read">
                     <description><![CDATA[ Is active ? When this property shows false, this fiber is already destroyed. ]]></description>
                     <shortDescription><![CDATA[ Is active ? When this property shows false, this fiber is already destroyed.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="isParent" fullname="org.si.cml:CMLFiber/isParent/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read">
                     <description><![CDATA[ Does this fiber have any children ? ]]></description>
                     <shortDescription><![CDATA[ Does this fiber have any children ? ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="object" fullname="org.si.cml:CMLFiber/object/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml:CMLObject" inheritDoc="false" only="read">
                     <description><![CDATA[ CMLObject that this fiber controls. ]]></description>
                     <shortDescription><![CDATA[ CMLObject that this fiber controls.]]></shortDescription>
                     <versions/>
                     <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                  </field>
                  <field name="sequence" fullname="org.si.cml:CMLFiber/sequence/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml:CMLSequence" inheritDoc="false" only="read">
                     <description><![CDATA[ Sequence argument. <br/>
          This property is used in callback function of CMLSequence.registerUserCommand() with the option 'requireSequence' is true.<br/>
          When the next statement of user command is not sequence. outputs parsing error. Or, when the next statement is '{.}', returns null.
         ]]></description>
                     <shortDescription><![CDATA[ Sequence argument.]]></shortDescription>
                     <versions/>
                     <classRef name="CMLSequence" fullName="org.si.cml:CMLSequence" packageName="org.si.cml" relativePath="../cml/CMLSequence.html"/>
                  </field>
                  <field name="string" fullname="org.si.cml:CMLFiber/string/get" accessLevel="public" isConst="false" isStatic="false" type="String" inheritDoc="false" only="read">
                     <description><![CDATA[ String argument. <br/>
          This property is used in callback function of CMLSequence.registerUserCommand().<br/>
          When the next statement of user command is not '...', this property shows null.
          ]]></description>
                     <shortDescription><![CDATA[ String argument.]]></shortDescription>
                     <versions/>
                     <example><![CDATA[<listing version="3.0">
    // Register the user command
    CMLSequence.registerUserCommand("print", callbackPrint);

    function callbackPrint(fbr:CMLFiber) {
        // You can refer the string after user command.
        _drawText(fbr.string);
    }

    // String comment after the user command in sequence.
    // In this sequence, you call _drawText('Hello World !!').
    var seq:CMLSequence = new CMLSequence("&print'Hello World !!'");
</listing>
         ]]></example>
                  </field>
                  <field name="target" fullname="org.si.cml:CMLFiber/target/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml:CMLObject" inheritDoc="false" only="read-write">
                     <description><![CDATA[ CMLObject that this fiber targets to. ]]></description>
                     <shortDescription><![CDATA[ CMLObject that this fiber targets to.]]></shortDescription>
                     <versions/>
                     <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                  </field>
                  <field name="maxLoopInFrame" fullname="org.si.cml:CMLFiber/maxLoopInFrame/set" accessLevel="public" isConst="false" isStatic="true" type="int" inheritDoc="false" only="write">
                     <description><![CDATA[ Maximum limitation of the executable looping count in 1 frame. ]]></description>
                     <shortDescription><![CDATA[ Maximum limitation of the executable looping count in 1 frame.]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[1024]]></default>
                     </customs>
                  </field>
                  <field name="maxStacCount" fullname="org.si.cml:CMLFiber/maxStacCount/set" accessLevel="public" isConst="false" isStatic="true" type="int" inheritDoc="false" only="write">
                     <description><![CDATA[ Maximum limitation of the executable gosub nest count. ]]></description>
                     <shortDescription><![CDATA[ Maximum limitation of the executable gosub nest count.]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[64]]></default>
                     </customs>
                  </field>
               </fields>
            </asClass>
         </classes>
      </asPackage>
      <asPackage name="org.si.b3.modules">
         <classes>
            <asClass name="CMLMovieClipKeyLogger" type="class" fullname="org.si.b3.modules:CMLMovieClipKeyLogger" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.b3.modules" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ Key logger ]]></description>
               <shortDescription><![CDATA[ Key logger ]]></shortDescription>
               <versions/>
               <author/>
               <asAncestors/>
               <methods>
                  <method name="initialize" fullname="org.si.b3.modules:CMLMovieClipKeyLogger/initialize" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ initialize 
         ]]></description>
                     <shortDescription><![CDATA[ initialize 
         ]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="reset" fullname="org.si.b3.modules:CMLMovieClipKeyLogger/reset" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ reset 
          ]]></description>
                     <shortDescription><![CDATA[ reset 
          ]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="status" type="uint" default="0">
                           <description><![CDATA[
         ]]></description>
                        </param>
                     </params>
                  </method>
               </methods>
               <fields>
                  <field name="RECORD" fullname="org.si.b3.modules:CMLMovieClipKeyLogger/RECORD" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="0">
                     <versions/>
                  </field>
                  <field name="REPLAY" fullname="org.si.b3.modules:CMLMovieClipKeyLogger/REPLAY" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="1">
                     <versions/>
                  </field>
                  <field name="status" fullname="org.si.b3.modules:CMLMovieClipKeyLogger/status/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read">
                     <description><![CDATA[ recording status, CMLMovieClip.RECORD or CMLMovieClip.REPLAY ]]></description>
                     <shortDescription><![CDATA[ recording status, CMLMovieClip.RECORD or CMLMovieClip.REPLAY ]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
            <asClass name="CMLMovieClipScene" type="class" fullname="org.si.b3.modules:CMLMovieClipScene" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.b3.modules" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ CMLMovieClipScene manages scene transition. ]]></description>
               <shortDescription><![CDATA[ CMLMovieClipScene manages scene transition.]]></shortDescription>
               <versions/>
               <author/>
               <asAncestors/>
               <methods>
                  <method name="initialize" fullname="org.si.b3.modules:CMLMovieClipScene/initialize" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipScene" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ initialize ]]></description>
                     <shortDescription><![CDATA[ initialize ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipScene">
                        <classRef name="CMLMovieClipScene" fullName="org.si.b3.modules:CMLMovieClipScene" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipScene.html"/>
                     </result>
                  </method>
                  <method name="register" fullname="org.si.b3.modules:CMLMovieClipScene/register" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipScene" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ register scene ]]></description>
                     <shortDescription><![CDATA[ register scene ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipScene">
                        <classRef name="CMLMovieClipScene" fullName="org.si.b3.modules:CMLMovieClipScene" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipScene.html"/>
                     </result>
                     <params>
                        <param name="sceneID" type="String"/>
                        <param name="scene" type=""/>
                     </params>
                  </method>
                  <method name="reset" fullname="org.si.b3.modules:CMLMovieClipScene/reset" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipScene" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ reset ]]></description>
                     <shortDescription><![CDATA[ reset ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipScene">
                        <classRef name="CMLMovieClipScene" fullName="org.si.b3.modules:CMLMovieClipScene" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipScene.html"/>
                     </result>
                  </method>
               </methods>
               <fields>
                  <field name="id" fullname="org.si.b3.modules:CMLMovieClipScene/id/get" accessLevel="public" isConst="false" isStatic="false" type="String" inheritDoc="false" only="read-write">
                     <description><![CDATA[ current scene id. if you set this property the sceneID is changed at the head of next frame. ]]></description>
                     <shortDescription><![CDATA[ current scene id.]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
            <asClass name="CMLMovieClipControl" type="class" fullname="org.si.b3.modules:CMLMovieClipControl" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.b3.modules" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ Controler operating module ]]></description>
               <shortDescription><![CDATA[ Controler operating module ]]></shortDescription>
               <versions/>
               <author/>
               <asAncestors/>
               <methods>
                  <method name="getPressedFrame" fullname="org.si.b3.modules:CMLMovieClipControl/getPressedFrame" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Get pressed frames 
          ]]></description>
                     <shortDescription><![CDATA[ Get pressed frames 
          ]]></shortDescription>
                     <versions/>
                     <result type="int"><![CDATA[frame count the key pressed.
         ]]></result>
                     <params>
                        <param name="buttonNumber" type="uint">
                           <description><![CDATA[button number
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="initialize" fullname="org.si.b3.modules:CMLMovieClipControl/initialize" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipControl" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ initialize all assigned keys
          ]]></description>
                     <shortDescription><![CDATA[ initialize all assigned keys
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipControl">
                        <![CDATA[this instance
         ]]>
                        <classRef name="CMLMovieClipControl" fullName="org.si.b3.modules:CMLMovieClipControl" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipControl.html"/>
                     </result>
                  </method>
                  <method name="isHitted" fullname="org.si.b3.modules:CMLMovieClipControl/isHitted" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Check button state, this property returns true only at the first frame of pressing key.
          ]]></description>
                     <shortDescription><![CDATA[ Check button state, this property returns true only at the first frame of pressing key.]]></shortDescription>
                     <versions/>
                     <result type="Boolean"><![CDATA[key pressing status
         ]]></result>
                     <params>
                        <param name="buttonNumber" type="uint">
                           <description><![CDATA[button number
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="isPressed" fullname="org.si.b3.modules:CMLMovieClipControl/isPressed" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Check button state, this property returns true while the key pressed.
          ]]></description>
                     <shortDescription><![CDATA[ Check button state, this property returns true while the key pressed.]]></shortDescription>
                     <versions/>
                     <result type="Boolean"><![CDATA[key pressing status
         ]]></result>
                     <params>
                        <param name="buttonNumber" type="uint">
                           <description><![CDATA[button number
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="map" fullname="org.si.b3.modules:CMLMovieClipControl/map" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipControl" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ assign keycode to the BUTTON_NUMBER 
          ]]></description>
                     <shortDescription><![CDATA[ assign keycode to the BUTTON_NUMBER 
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipControl">
                        <![CDATA[this instance
         ]]>
                        <classRef name="CMLMovieClipControl" fullName="org.si.b3.modules:CMLMovieClipControl" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipControl.html"/>
                     </result>
                     <params>
                        <param name="buttonNumber" type="int">
                           <description><![CDATA[button number to assign
          ]]></description>
                        </param>
                        <param name="args" type="restParam">
                           <description><![CDATA[keycodes of assigning buttons
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="mapArrowKeys" fullname="org.si.b3.modules:CMLMovieClipControl/mapArrowKeys" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipControl" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ assign arrow keys as moving button
          ]]></description>
                     <shortDescription><![CDATA[ assign arrow keys as moving button
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipControl">
                        <![CDATA[this instance
         ]]>
                        <classRef name="CMLMovieClipControl" fullName="org.si.b3.modules:CMLMovieClipControl" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipControl.html"/>
                     </result>
                     <params>
                        <param name="button0" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button0
          ]]></description>
                        </param>
                        <param name="button1" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button1
          ]]></description>
                        </param>
                        <param name="button2" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button2
          ]]></description>
                        </param>
                        <param name="button3" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button3
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="mapButtons" fullname="org.si.b3.modules:CMLMovieClipControl/mapButtons" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipControl" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ assign all buttons
          ]]></description>
                     <shortDescription><![CDATA[ assign all buttons
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipControl">
                        <![CDATA[this instance
         ]]>
                        <classRef name="CMLMovieClipControl" fullName="org.si.b3.modules:CMLMovieClipControl" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipControl.html"/>
                     </result>
                     <params>
                        <param name="button0" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button0
          ]]></description>
                        </param>
                        <param name="button1" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button1
          ]]></description>
                        </param>
                        <param name="button2" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button2
          ]]></description>
                        </param>
                        <param name="button3" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button3
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="mapNumKeys" fullname="org.si.b3.modules:CMLMovieClipControl/mapNumKeys" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipControl" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ assign number keys (8246) as moving button
          ]]></description>
                     <shortDescription><![CDATA[ assign number keys (8246) as moving button
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipControl">
                        <![CDATA[this instance
         ]]>
                        <classRef name="CMLMovieClipControl" fullName="org.si.b3.modules:CMLMovieClipControl" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipControl.html"/>
                     </result>
                     <params>
                        <param name="button0" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button0
          ]]></description>
                        </param>
                        <param name="button1" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button1
          ]]></description>
                        </param>
                        <param name="button2" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button2
          ]]></description>
                        </param>
                        <param name="button3" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button3
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="mapWSAD" fullname="org.si.b3.modules:CMLMovieClipControl/mapWSAD" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipControl" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ assign "WSAD" keys as moving button
          ]]></description>
                     <shortDescription><![CDATA[ assign "WSAD" keys as moving button
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipControl">
                        <![CDATA[this instance
         ]]>
                        <classRef name="CMLMovieClipControl" fullName="org.si.b3.modules:CMLMovieClipControl" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipControl.html"/>
                     </result>
                     <params>
                        <param name="button0" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button0
          ]]></description>
                        </param>
                        <param name="button1" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button1
          ]]></description>
                        </param>
                        <param name="button2" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button2
          ]]></description>
                        </param>
                        <param name="button3" type="Array" default="null">
                           <description><![CDATA[Array, String or int for button3
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="reset" fullname="org.si.b3.modules:CMLMovieClipControl/reset" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipControl" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ reset all flags
          ]]></description>
                     <shortDescription><![CDATA[ reset all flags
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipControl">
                        <![CDATA[this instance
         ]]>
                        <classRef name="CMLMovieClipControl" fullName="org.si.b3.modules:CMLMovieClipControl" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipControl.html"/>
                     </result>
                  </method>
               </methods>
               <fields>
                  <field name="KEY_BUTTON0" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON0" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="4">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON1" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON1" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="5">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON2" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON2" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="6">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON3" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON3" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="7">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON4" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON4" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="8">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON5" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON5" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="9">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON6" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON6" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="10">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON7" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON7" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="11">
                     <versions/>
                  </field>
                  <field name="KEY_DOWN" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_DOWN" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="1">
                     <versions/>
                  </field>
                  <field name="KEY_ESCAPE" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_ESCAPE" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="14">
                     <versions/>
                  </field>
                  <field name="KEY_LEFT" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_LEFT" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="2">
                     <versions/>
                  </field>
                  <field name="KEY_MAX" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_MAX" accessLevel="public" type="int" isConst="true" isStatic="true" defaultValue="16">
                     <versions/>
                  </field>
                  <field name="KEY_RESET" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_RESET" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="13">
                     <versions/>
                  </field>
                  <field name="KEY_RIGHT" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_RIGHT" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="3">
                     <versions/>
                  </field>
                  <field name="KEY_START" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_START" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="12">
                     <versions/>
                  </field>
                  <field name="KEY_SYSTEM" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_SYSTEM" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="15">
                     <versions/>
                  </field>
                  <field name="KEY_UP" fullname="org.si.b3.modules:CMLMovieClipControl/KEY_UP" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="0">
                     <versions/>
                  </field>
                  <field name="flag" fullname="org.si.b3.modules:CMLMovieClipControl/flag/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false" only="read">
                     <description><![CDATA[ get button status flag. you can get the pressing status by (flag >> [key enum]) & 1 for each key. ]]></description>
                     <shortDescription><![CDATA[ get button status flag.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="x" fullname="org.si.b3.modules:CMLMovieClipControl/x/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ get x input (-1 <-> +1).
          ]]></description>
                     <shortDescription><![CDATA[ get x input (-1 <-> +1).]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="y" fullname="org.si.b3.modules:CMLMovieClipControl/y/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ get y input (-1 <-> +1).
          ]]></description>
                     <shortDescription><![CDATA[ get y input (-1 <-> +1).]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
            <asClass name="CMLMovieClipFPS" type="class" fullname="org.si.b3.modules:CMLMovieClipFPS" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.b3.modules" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ FPS controling module ]]></description>
               <shortDescription><![CDATA[ FPS controling module ]]></shortDescription>
               <versions/>
               <author/>
               <asAncestors/>
               <constructors>
                  <constructor name="CMLMovieClipFPS" fullname="org.si.b3.modules:CMLMovieClipFPS/CMLMovieClipFPS" accessLevel="public" result_type="*" inheritDoc="false">
                     <description><![CDATA[ constructor ]]></description>
                     <shortDescription><![CDATA[ constructor ]]></shortDescription>
                     <versions/>
                     <result type="*"/>
                  </constructor>
               </constructors>
               <methods>
                  <method name="initialize" fullname="org.si.b3.modules:CMLMovieClipFPS/initialize" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipFPS" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ initialize FPS setting ]]></description>
                     <shortDescription><![CDATA[ initialize FPS setting ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipFPS">
                        <classRef name="CMLMovieClipFPS" fullName="org.si.b3.modules:CMLMovieClipFPS" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipFPS.html"/>
                     </result>
                  </method>
                  <method name="reset" fullname="org.si.b3.modules:CMLMovieClipFPS/reset" accessLevel="public" result_type="org.si.b3.modules:CMLMovieClipFPS" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ reset counters ]]></description>
                     <shortDescription><![CDATA[ reset counters ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3.modules:CMLMovieClipFPS">
                        <classRef name="CMLMovieClipFPS" fullName="org.si.b3.modules:CMLMovieClipFPS" packageName="org.si.b3.modules" relativePath="../modules/CMLMovieClipFPS.html"/>
                     </result>
                  </method>
               </methods>
               <fields>
                  <field name="delayedFrames" fullname="org.si.b3.modules:CMLMovieClipFPS/delayedFrames/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read">
                     <description><![CDATA[ delayed frame count ]]></description>
                     <shortDescription><![CDATA[ delayed frame count ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="frameSkipLevel" fullname="org.si.b3.modules:CMLMovieClipFPS/frameSkipLevel/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read">
                     <description><![CDATA[ frame skip level ]]></description>
                     <shortDescription><![CDATA[ frame skip level ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="totalFrame" fullname="org.si.b3.modules:CMLMovieClipFPS/totalFrame/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read">
                     <description><![CDATA[ total frame count ]]></description>
                     <shortDescription><![CDATA[ total frame count ]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
         </classes>
      </asPackage>
      <asPackage name="org.si.b3">
         <classes>
            <asClass name="CMLMovieClipSprite" type="class" fullname="org.si.b3:CMLMovieClipSprite" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.b3" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ CMLMovieClipSprite is a sprite class on CMLMovieClip. ]]></description>
               <shortDescription><![CDATA[ CMLMovieClipSprite is a sprite class on CMLMovieClip.]]></shortDescription>
               <versions/>
               <author/>
               <asAncestors>
                  <asAncestor>
                     <classRef name="Actor" fullName="org.si.cml.extensions:Actor" packageName="org.si.cml.extensions" relativePath="../cml/extensions/Actor.html"/>
                     <fields>
                        <field name="life" fullname="org.si.cml.extensions:Actor/life" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="1">
                           <shortDescription><![CDATA[ Life, you can use this as you like.]]></shortDescription>
                        </field>
                        <field name="size" fullname="org.si.cml.extensions:Actor/size" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ Size to use in hit test ]]></shortDescription>
                        </field>
                        <field name="actorFactory" fullname="org.si.cml.extensions:Actor/actorFactory/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml.extensions:ActorFactory" inheritDoc="false">
                           <shortDescription><![CDATA[ Factory class ]]></shortDescription>
                           <classRef name="ActorFactory" fullName="org.si.cml.extensions:ActorFactory" packageName="org.si.cml.extensions" relativePath="../cml/extensions/ActorFactory.html"/>
                        </field>
                        <field name="drawPriority" fullname="org.si.cml.extensions:Actor/drawPriority/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false">
                           <shortDescription><![CDATA[ Set the drawing priority.]]></shortDescription>
                        </field>
                        <field name="evalEnabled" fullname="org.si.cml.extensions:Actor/evalEnabled/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Enable/disable the hit test.]]></shortDescription>
                        </field>
                        <field name="evalIDNumber" fullname="org.si.cml.extensions:Actor/evalIDNumber/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false">
                           <shortDescription><![CDATA[ Set the devaluation ID number.]]></shortDescription>
                        </field>
                     </fields>
                     <methods>
                        <method name="_register" fullname="org.si.cml.extensions:Actor/protected:_register" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Register this object on the actor list.]]></shortDescription>
                        </method>
                        <method name="_unregister" fullname="org.si.cml.extensions:Actor/protected:_unregister" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Unregister this object from the actor list.]]></shortDescription>
                        </method>
                        <method name="draw" fullname="org.si.cml.extensions:Actor/draw" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ <b>Call this function for each frame</b> to call all onDraw()s.]]></shortDescription>
                        </method>
                        <method name="initialize" fullname="org.si.cml.extensions:Actor/initialize" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ <b>Call this function first of all</b> instead of CMLObject.initialize().]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="vertical_" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="onDraw" fullname="org.si.cml.extensions:Actor/onDraw" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Callback function to draw.]]></shortDescription>
                        </method>
                        <method name="onHit" fullname="org.si.cml.extensions:Actor/onHit" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Callback function from Actor.test() when the hit test is true.]]></shortDescription>
                           <params>
                              <param name="act" type="org.si.cml.extensions:Actor">
                                 <classRef name="Actor" fullName="org.si.cml.extensions:Actor" packageName="org.si.cml.extensions" relativePath="../cml/extensions/Actor.html"/>
                              </param>
                           </params>
                        </method>
                        <method name="test" fullname="org.si.cml.extensions:Actor/test" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ Hit test of 2 instances.]]></shortDescription>
                           <params>
                              <param name="evalID0" type="int"/>
                              <param name="evalID1" type="int"/>
                           </params>
                        </method>
                        <method name="testf" fullname="org.si.cml.extensions:Actor/testf" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ Hit test of 2 instances, lazyer and faster.]]></shortDescription>
                           <params>
                              <param name="evalID0" type="int"/>
                              <param name="evalID1" type="int"/>
                           </params>
                        </method>
                     </methods>
                  </asAncestor>
                  <asAncestor>
                     <classRef name="ScopeLimitObject" fullName="org.si.cml.extensions:ScopeLimitObject" packageName="org.si.cml.extensions" relativePath="../cml/extensions/ScopeLimitObject.html"/>
                     <fields>
                        <field name="defaultScopeXmax" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeXmax" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="160">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="defaultScopeXmin" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeXmin" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="-160">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="defaultScopeYmax" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeYmax" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="240">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="defaultScopeYmin" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeYmin" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="-240">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="scopeEnabled" fullname="org.si.cml.extensions:ScopeLimitObject/scopeEnabled" accessLevel="public" type="Boolean" isConst="false" isStatic="false" defaultValue="true">
                           <shortDescription><![CDATA[ The availabirity of scope check ]]></shortDescription>
                        </field>
                        <field name="scopeXmax" fullname="org.si.cml.extensions:ScopeLimitObject/scopeXmax" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Maxmum x value of the available scope.]]></shortDescription>
                        </field>
                        <field name="scopeXmin" fullname="org.si.cml.extensions:ScopeLimitObject/scopeXmin" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Minimum x value of the available scope.]]></shortDescription>
                        </field>
                        <field name="scopeYmax" fullname="org.si.cml.extensions:ScopeLimitObject/scopeYmax" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Maximum y value of the available scope.]]></shortDescription>
                        </field>
                        <field name="scopeYmin" fullname="org.si.cml.extensions:ScopeLimitObject/scopeYmin" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Minimum y value of the available scope.]]></shortDescription>
                        </field>
                        <field name="defaultScopeHeight" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeHeight/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ default scope height.]]></shortDescription>
                        </field>
                        <field name="defaultScopeWidth" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeWidth/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ default scope width.]]></shortDescription>
                        </field>
                        <field name="isEscaped" fullname="org.si.cml.extensions:ScopeLimitObject/isEscaped/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Did this object escape from the scope ? ]]></shortDescription>
                        </field>
                        <field name="scopeHeight" fullname="org.si.cml.extensions:ScopeLimitObject/scopeHeight/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Scope height ]]></shortDescription>
                        </field>
                        <field name="scopeWidth" fullname="org.si.cml.extensions:ScopeLimitObject/scopeWidth/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Scope width ]]></shortDescription>
                        </field>
                     </fields>
                     <methods>
                        <method name="checkScope" fullname="org.si.cml.extensions:ScopeLimitObject/checkScope" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Check scope and call destroy(0) when escaped.]]></shortDescription>
                        </method>
                        <method name="expandScope" fullname="org.si.cml.extensions:ScopeLimitObject/expandScope" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Expand scope size from defaultScope.]]></shortDescription>
                           <params>
                              <param name="x" type="Number"/>
                              <param name="y" type="Number"/>
                           </params>
                        </method>
                        <method name="limitScope" fullname="org.si.cml.extensions:ScopeLimitObject/limitScope" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Check scope and stay inside of scope.]]></shortDescription>
                        </method>
                        <method name="setDefaultScope" fullname="org.si.cml.extensions:ScopeLimitObject/setDefaultScope" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ set default scope rectangle.]]></shortDescription>
                           <params>
                              <param name="x" type="Number"/>
                              <param name="y" type="Number"/>
                              <param name="width" type="Number"/>
                              <param name="height" type="Number"/>
                           </params>
                        </method>
                     </methods>
                  </asAncestor>
                  <asAncestor>
                     <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     <fields>
                        <field name="MT_ACCEL" fullname="org.si.cml:CMLObject/MT_ACCEL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="1">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Accelarating motion.]]></shortDescription>
                        </field>
                        <field name="MT_BULLETML" fullname="org.si.cml:CMLObject/MT_BULLETML" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="3">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion.]]></shortDescription>
                        </field>
                        <field name="MT_CONST" fullname="org.si.cml:CMLObject/MT_CONST" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="0">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Linear motion.]]></shortDescription>
                        </field>
                        <field name="MT_GRAVITY" fullname="org.si.cml:CMLObject/MT_GRAVITY" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="4">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Gravity motion.]]></shortDescription>
                        </field>
                        <field name="MT_INTERPOL" fullname="org.si.cml:CMLObject/MT_INTERPOL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="2">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion.]]></shortDescription>
                        </field>
                        <field name="MT_PART_ACCEL" fullname="org.si.cml:CMLObject/MT_PART_ACCEL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Accelarating motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_BULLETML" fullname="org.si.cml:CMLObject/MT_PART_BULLETML" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_CONST" fullname="org.si.cml:CMLObject/MT_PART_CONST" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Linear motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_INTERPOL" fullname="org.si.cml:CMLObject/MT_PART_INTERPOL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion of parts.]]></shortDescription>
                        </field>
                        <field name="actor" fullname="org.si.cml:CMLObject/actor" accessLevel="public" type="" isConst="false" isStatic="false" defaultValue="unknown">
                           <shortDescription><![CDATA[ You can rewrite this for your own purpose.]]></shortDescription>
                        </field>
                        <field name="vx" fullname="org.si.cml:CMLObject/vx" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ X value of velocity.]]></shortDescription>
                        </field>
                        <field name="vy" fullname="org.si.cml:CMLObject/vy" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ Y value of velocity.]]></shortDescription>
                        </field>
                        <field name="x" fullname="org.si.cml:CMLObject/x" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ X value of position.]]></shortDescription>
                        </field>
                        <field name="y" fullname="org.si.cml:CMLObject/y" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ Y value of position.]]></shortDescription>
                        </field>
                        <field name="angle" fullname="org.si.cml:CMLObject/angle/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this object, scrolling direction is 0 degree.]]></shortDescription>
                        </field>
                        <field name="angleAccel" fullname="org.si.cml:CMLObject/angleAccel/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of accelaration.]]></shortDescription>
                        </field>
                        <field name="angleOnStage" fullname="org.si.cml:CMLObject/angleOnStage/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this object, The direction(1,0) is 0 degree.]]></shortDescription>
                        </field>
                        <field name="angleParentOnStage" fullname="org.si.cml:CMLObject/angleParentOnStage/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this parent object, scrolling direction is 0 degree.]]></shortDescription>
                        </field>
                        <field name="anglePosition" fullname="org.si.cml:CMLObject/anglePosition/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of position from origin.]]></shortDescription>
                        </field>
                        <field name="angleVelocity" fullname="org.si.cml:CMLObject/angleVelocity/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of velocity.]]></shortDescription>
                        </field>
                        <field name="destructionStatus" fullname="org.si.cml:CMLObject/destructionStatus/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false">
                           <shortDescription><![CDATA[ Destruction status.]]></shortDescription>
                        </field>
                        <field name="frameRateRatio" fullname="org.si.cml:CMLObject/frameRateRatio/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Value of (frame rate to calculate speed) / (screen frame rate).]]></shortDescription>
                        </field>
                        <field name="funcRand" fullname="org.si.cml:CMLObject/funcRand/get" accessLevel="public" isConst="false" isStatic="true" type="Function" inheritDoc="false">
                           <shortDescription><![CDATA[ Function for "$?/$??" variable, The type is function():Number.]]></shortDescription>
                        </field>
                        <field name="globalRank" fullname="org.si.cml:CMLObject/globalRank/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Variable for "$r" ]]></shortDescription>
                        </field>
                        <field name="hasParts" fullname="org.si.cml:CMLObject/hasParts/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Does this object have another object as a part ? ]]></shortDescription>
                        </field>
                        <field name="id" fullname="org.si.cml:CMLObject/id/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false">
                           <shortDescription><![CDATA[ Construction ID, this value changes when the object is destroyed.]]></shortDescription>
                        </field>
                        <field name="isActive" fullname="org.si.cml:CMLObject/isActive/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Is this object on stage ? ]]></shortDescription>
                        </field>
                        <field name="isPart" fullname="org.si.cml:CMLObject/isPart/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Is this object a part of its parent ? The part object's position is relative to parent's position.]]></shortDescription>
                        </field>
                        <field name="motion_type" fullname="org.si.cml:CMLObject/motion_type/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false">
                           <shortDescription><![CDATA[ Motion type.]]></shortDescription>
                        </field>
                        <field name="parent" fullname="org.si.cml:CMLObject/parent/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml:CMLObject" inheritDoc="false">
                           <shortDescription><![CDATA[ The CMLObject that creates this object.]]></shortDescription>
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                        </field>
                        <field name="rank" fullname="org.si.cml:CMLObject/rank/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ You can define the "$r" value for each object by overriding this property, Ussualy returns CMLObject.globalRank.]]></shortDescription>
                        </field>
                        <field name="relatedX" fullname="org.si.cml:CMLObject/relatedX/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ The x value of position parent related ]]></shortDescription>
                        </field>
                        <field name="relatedY" fullname="org.si.cml:CMLObject/relatedY/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ The y value of position parent related ]]></shortDescription>
                        </field>
                        <field name="root" fullname="org.si.cml:CMLObject/root/get" accessLevel="public" isConst="false" isStatic="true" type="org.si.cml:CMLObject" inheritDoc="false">
                           <shortDescription><![CDATA[ root object is the default parent of all CMLObjects that are created with the argument of parent=null.]]></shortDescription>
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                        </field>
                        <field name="scrollAngle" fullname="org.si.cml:CMLObject/scrollAngle/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Scrolling angle (vertical=-90, horizontal=180).]]></shortDescription>
                        </field>
                        <field name="velocity" fullname="org.si.cml:CMLObject/velocity/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Absolute value of velocity.]]></shortDescription>
                        </field>
                        <field name="vertical" fullname="org.si.cml:CMLObject/vertical/get" accessLevel="public" isConst="false" isStatic="true" type="int" inheritDoc="false">
                           <shortDescription><![CDATA[ Flag for scrolling direction (vertical=1, horizontal=0).]]></shortDescription>
                        </field>
                     </fields>
                     <methods>
                        <method name="calcAbsPosition" fullname="org.si.cml:CMLObject/protected:calcAbsPosition" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate absolute position when the isPart is true.]]></shortDescription>
                        </method>
                        <method name="calcRelatedPosition" fullname="org.si.cml:CMLObject/protected:calcRelatedPosition" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate parent related position from absolute position.]]></shortDescription>
                        </method>
                        <method name="changeParent" fullname="org.si.cml:CMLObject/changeParent" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Change parent.]]></shortDescription>
                           <params>
                              <param name="parent_" type="org.si.cml:CMLObject" default="null">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                              </param>
                              <param name="isPart_" type="Boolean" default="false"/>
                              <param name="access_id_" type="int" default="unknown"/>
                           </params>
                        </method>
                        <method name="countAllIDedChildren" fullname="org.si.cml:CMLObject/countAllIDedChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Count all children with access id.]]></shortDescription>
                        </method>
                        <method name="countIDedChildren" fullname="org.si.cml:CMLObject/countIDedChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Count children with specifyed id.]]></shortDescription>
                           <params>
                              <param name="id" type="int"/>
                           </params>
                        </method>
                        <method name="create" fullname="org.si.cml:CMLObject/create" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Create new object on the CML stage.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="parent_" type="org.si.cml:CMLObject" default="null">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                              </param>
                              <param name="isPart_" type="Boolean" default="false"/>
                              <param name="access_id_" type="int" default="unknown"/>
                           </params>
                        </method>
                        <method name="destroy" fullname="org.si.cml:CMLObject/destroy" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy this object.]]></shortDescription>
                           <params>
                              <param name="status" type="int"/>
                           </params>
                        </method>
                        <method name="destroyAll" fullname="org.si.cml:CMLObject/destroyAll" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy all active objects except for root.]]></shortDescription>
                           <params>
                              <param name="status" type="int"/>
                           </params>
                        </method>
                        <method name="execute" fullname="org.si.cml:CMLObject/execute" accessLevel="public" result_type="org.si.cml:CMLFiber" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Execute a sequence and create a new fiber.]]></shortDescription>
                           <result type="org.si.cml:CMLFiber">
                              <classRef name="CMLFiber" fullName="org.si.cml:CMLFiber" packageName="org.si.cml" relativePath="../cml/CMLFiber.html"/>
                           </result>
                           <params>
                              <param name="seq" type="org.si.cml:CMLSequence">
                                 <classRef name="CMLSequence" fullName="org.si.cml:CMLSequence" packageName="org.si.cml" relativePath="../cml/CMLSequence.html"/>
                              </param>
                              <param name="args" type="Array" default="null"/>
                              <param name="invertFlag" type="uint" default="0"/>
                           </params>
                        </method>
                        <method name="findAllChildren" fullname="org.si.cml:CMLObject/findAllChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find all child and callback.]]></shortDescription>
                           <params>
                              <param name="id" type="int"/>
                              <param name="func" type="Function"/>
                           </params>
                        </method>
                        <method name="findAllParts" fullname="org.si.cml:CMLObject/findAllParts" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find all parts and callback.]]></shortDescription>
                           <params>
                              <param name="func" type="Function"/>
                           </params>
                        </method>
                        <method name="findChild" fullname="org.si.cml:CMLObject/findChild" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find first child object with specifyed id.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="id" type="int"/>
                           </params>
                        </method>
                        <method name="getAimingAngle" fullname="org.si.cml:CMLObject/getAimingAngle" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate aiming angle to another object.]]></shortDescription>
                           <params>
                              <param name="target_" type="org.si.cml:CMLObject">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                              </param>
                              <param name="offx" type="Number" default="0"/>
                              <param name="offy" type="Number" default="0"/>
                           </params>
                        </method>
                        <method name="getDistance" fullname="org.si.cml:CMLObject/getDistance" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate distance from another object aproximately.]]></shortDescription>
                           <params>
                              <param name="tgt" type="org.si.cml:CMLObject">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                              </param>
                           </params>
                        </method>
                        <method name="halt" fullname="org.si.cml:CMLObject/halt" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy all fibers of this object.]]></shortDescription>
                        </method>
                        <method name="rand" fullname="org.si.cml:CMLObject/rand" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ The return value is from CMLObject.funcRand.]]></shortDescription>
                        </method>
                        <method name="reset" fullname="org.si.cml:CMLObject/reset" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Reset position, velocity, accelaration, interpolation, motion type and rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                           </params>
                        </method>
                        <method name="rotateHead" fullname="org.si.cml:CMLObject/protected:rotateHead" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Rotate haed in 1 frame, if rotd > 0.]]></shortDescription>
                        </method>
                        <method name="setAccelaration" fullname="org.si.cml:CMLObject/setAccelaration" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set accelaration.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="ax_" type="Number"/>
                              <param name="ay_" type="Number"/>
                              <param name="time_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setAsDefaultTarget" fullname="org.si.cml:CMLObject/setAsDefaultTarget" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set as a default target object.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                        </method>
                        <method name="setChangeDirection" fullname="org.si.cml:CMLObject/setChangeDirection" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ &lt;changeDirection type='absolute'&gt; of bulletML.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="dir" type="Number"/>
                              <param name="term" type="int"/>
                              <param name="rmax" type="Number"/>
                              <param name="shortest_rot" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setChangeSpeed" fullname="org.si.cml:CMLObject/setChangeSpeed" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ &lt;changeSpeed type='absolute'&gt; of bulletML.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="spd" type="Number"/>
                              <param name="term" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setConstantRotation" fullname="org.si.cml:CMLObject/setConstantRotation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set constant rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="end_angle" type="Number"/>
                              <param name="term" type="Number" default="0"/>
                              <param name="rmax" type="Number" default="1"/>
                              <param name="isShortestRotation" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setGlobalRankRange" fullname="org.si.cml:CMLObject/setGlobalRankRange" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ Set the range of globalRank.]]></shortDescription>
                           <params>
                              <param name="min" type="Number"/>
                              <param name="max" type="Number"/>
                           </params>
                        </method>
                        <method name="setGravity" fullname="org.si.cml:CMLObject/setGravity" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set gravity motion.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="atr_a" type="Number"/>
                              <param name="atr_b" type="Number"/>
                              <param name="term" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setInterpolation" fullname="org.si.cml:CMLObject/setInterpolation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set interpolating motion.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="vx_" type="Number"/>
                              <param name="vy_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setPosition" fullname="org.si.cml:CMLObject/setPosition" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set position.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setRotation" fullname="org.si.cml:CMLObject/setRotation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="end_angle" type="Number"/>
                              <param name="term" type="Number" default="0"/>
                              <param name="start_t" type="Number" default="1"/>
                              <param name="end_t" type="Number" default="1"/>
                              <param name="isShortestRotation" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setVelocity" fullname="org.si.cml:CMLObject/setVelocity" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set velocity.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="vx_" type="Number"/>
                              <param name="vy_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="transformGlobalToLocal" fullname="org.si.cml:CMLObject/transformGlobalToLocal" accessLevel="public" result_type="flash.geom:Point" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ transform global coordinate to object local coordinate
          ]]></shortDescription>
                           <params>
                              <param name="global" type="flash.geom:Point"/>
                           </params>
                        </method>
                        <method name="transformLocalToGlobal" fullname="org.si.cml:CMLObject/transformLocalToGlobal" accessLevel="public" result_type="flash.geom:Point" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ transform object local coordinate to global coordinate 
          ]]></shortDescription>
                           <params>
                              <param name="local" type="flash.geom:Point"/>
                           </params>
                        </method>
                        <method name="update" fullname="org.si.cml:CMLObject/update" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ <b>Call this function for each frame</b>.]]></shortDescription>
                        </method>
                     </methods>
                  </asAncestor>
                  <asAncestor>
                     <classRef name="org.si.cml.core.CMLListElem" fullName="org.si.cml.core.CMLListElem" relativePath="none"/>
                  </asAncestor>
               </asAncestors>
               <constructors>
                  <constructor name="CMLMovieClipSprite" fullname="org.si.b3:CMLMovieClipSprite/org.si.b3:CMLMovieClipSprite" accessLevel="public" result_type="*" inheritDoc="false">
                     <description><![CDATA[ constructor ]]></description>
                     <shortDescription><![CDATA[ constructor ]]></shortDescription>
                     <versions/>
                     <result type="*"/>
                  </constructor>
               </constructors>
               <methods>
                  <method name="onCreate" fullname="org.si.b3:CMLMovieClipSprite/onCreate" accessLevel="public" result_type="void" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[   Callback function on create. Override this to initialize.]]></description>
                     <shortDescription><![CDATA[   Callback function on create.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="onDestroy" fullname="org.si.b3:CMLMovieClipSprite/onDestroy" accessLevel="public" result_type="void" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[   Callback function on destroy. Override this to finalize.
          ]]></description>
                     <shortDescription><![CDATA[   Callback function on destroy.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="onFireObject" fullname="org.si.b3:CMLMovieClipSprite/onFireObject" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[   Statement "f" calls this when it needs. Override this to define the new CMLObject created by "f" command.
          ]]></description>
                     <shortDescription><![CDATA[   Statement "f" calls this when it needs.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="args" type="Array">
                           <description><![CDATA[The arguments of sequence.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="onNewObject" fullname="org.si.b3:CMLMovieClipSprite/onNewObject" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[   Statement "n" calls this when it needs. Override this to define the new CMLObject created by "n" command.
          ]]></description>
                     <shortDescription><![CDATA[   Statement "n" calls this when it needs.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="args" type="Array">
                           <description><![CDATA[The arguments of sequence.
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="onUpdate" fullname="org.si.b3:CMLMovieClipSprite/onUpdate" accessLevel="public" result_type="void" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[    Callback function from CMLObject.update(). This function is called after updating position. Override this to update own parameters.]]></description>
                     <shortDescription><![CDATA[    Callback function from CMLObject.update().]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
               </methods>
            </asClass>
            <asClass name="CMLMovieClip" type="class" fullname="org.si.b3:CMLMovieClip" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.b3" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ CMLMovieClip is a very simple framework for shmups ! <br/> 
      This class manages scenes, controler, fps, screen and basic cannonML operations.
     ]]></description>
               <shortDescription><![CDATA[ CMLMovieClip is a very simple framework for shmups ! <br/> 
      This class manages scenes, controler, fps, screen and basic cannonML operations.]]></shortDescription>
               <versions/>
               <author/>
               <asAncestors>
                  <asAncestor>
                     <classRef name="flash.display.Bitmap" fullName="flash.display.Bitmap" relativePath="none"/>
                  </asAncestor>
               </asAncestors>
               <constructors>
                  <constructor name="CMLMovieClip" fullname="org.si.b3:CMLMovieClip/org.si.b3:CMLMovieClip" accessLevel="public" result_type="void" inheritDoc="false">
                     <description><![CDATA[ constructor.
          ]]></description>
                     <shortDescription><![CDATA[ constructor.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="parent" type="flash.display:DisplayObjectContainer">
                           <description><![CDATA[parent DisplayObjectContainer
          ]]></description>
                        </param>
                        <param name="xpos" type="int">
                           <description><![CDATA[position x
          ]]></description>
                        </param>
                        <param name="ypos" type="int">
                           <description><![CDATA[position y
          ]]></description>
                        </param>
                        <param name="width" type="int">
                           <description><![CDATA[screen width
          ]]></description>
                        </param>
                        <param name="height" type="int">
                           <description><![CDATA[screen height
          ]]></description>
                        </param>
                        <param name="clearColor" type="int" default="0x000000">
                           <description><![CDATA[clear color
          ]]></description>
                        </param>
                        <param name="addEnterFrameListener" type="Boolean" default="true">
                           <description><![CDATA[add Event.ENTER_FRAME event listener.
          ]]></description>
                        </param>
                        <param name="onFirstEnterFrame" type="Function" default="null">
                           <description><![CDATA[margin of object's moving range.
          ]]></description>
                        </param>
                        <param name="scopeMargin" type="Number" default="32">
                           <description><![CDATA[scrolling direction CMLMovieClip.VERTICAL or CMLMovieClip.HORIZONTAL is available.
         ]]></description>
                        </param>
                        <param name="scrollDirecition" type="String" default="vertical"/>
                     </params>
                  </constructor>
               </constructors>
               <methods>
                  <method name="clearScreen" fullname="org.si.b3:CMLMovieClip/clearScreen" accessLevel="public" result_type="org.si.b3:CMLMovieClip" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ clear screen. fill all of screen by clearColor ]]></description>
                     <shortDescription><![CDATA[ clear screen.]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClip">
                        <classRef name="CMLMovieClip" fullName="org.si.b3:CMLMovieClip" packageName="org.si.b3" relativePath="../b3/CMLMovieClip.html"/>
                     </result>
                  </method>
                  <method name="copyPixels" fullname="org.si.b3:CMLMovieClip/copyPixels" accessLevel="public" result_type="org.si.b3:CMLMovieClip" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ call screen.copyPixels without Rectangle instance. 
          ]]></description>
                     <shortDescription><![CDATA[ call screen.copyPixels without Rectangle instance.]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClip">
                        <classRef name="CMLMovieClip" fullName="org.si.b3:CMLMovieClip" packageName="org.si.b3" relativePath="../b3/CMLMovieClip.html"/>
                     </result>
                     <params>
                        <param name="src" type="flash.display:BitmapData">
                           <description><![CDATA[source BitmapData
          ]]></description>
                        </param>
                        <param name="srcX" type="int">
                           <description><![CDATA[x of copying area's left edge
          ]]></description>
                        </param>
                        <param name="srcY" type="int">
                           <description><![CDATA[y of copying area's top edge
          ]]></description>
                        </param>
                        <param name="srcWidth" type="int">
                           <description><![CDATA[width of copying area
          ]]></description>
                        </param>
                        <param name="srcHeight" type="int">
                           <description><![CDATA[height of copying area
          ]]></description>
                        </param>
                        <param name="dstX" type="int">
                           <description><![CDATA[paste x
          ]]></description>
                        </param>
                        <param name="dstY" type="int">
                           <description><![CDATA[paste y
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="copyTexture" fullname="org.si.b3:CMLMovieClip/copyTexture" accessLevel="public" result_type="org.si.b3:CMLMovieClip" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ copy CMLMovieClipTexture to the screen
          ]]></description>
                     <shortDescription><![CDATA[ copy CMLMovieClipTexture to the screen
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClip">
                        <classRef name="CMLMovieClip" fullName="org.si.b3:CMLMovieClip" packageName="org.si.b3" relativePath="../b3/CMLMovieClip.html"/>
                     </result>
                     <params>
                        <param name="texture" type="org.si.b3:CMLMovieClipTexture">
                           <classRef name="CMLMovieClipTexture" fullName="org.si.b3:CMLMovieClipTexture" packageName="org.si.b3" relativePath="CMLMovieClipTexture.html"/>
                           <description><![CDATA[CMLMovieClipTexture instance
          ]]></description>
                        </param>
                        <param name="x" type="int">
                           <description><![CDATA[x of texture center
          ]]></description>
                        </param>
                        <param name="y" type="int">
                           <description><![CDATA[y of texture center
          ]]></description>
                        </param>
                        <param name="animIndex" type="int" default="0">
                           <description><![CDATA[animation index
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="draw" fullname="org.si.b3:CMLMovieClip/draw" accessLevel="public" result_type="org.si.b3:CMLMovieClip" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ call screen.draw without Matrix
          ]]></description>
                     <shortDescription><![CDATA[ call screen.draw without Matrix
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClip">
                        <classRef name="CMLMovieClip" fullName="org.si.b3:CMLMovieClip" packageName="org.si.b3" relativePath="../b3/CMLMovieClip.html"/>
                     </result>
                     <params>
                        <param name="src" type="flash.display:IBitmapDrawable">
                           <description><![CDATA[source IBitmapDrawable
          ]]></description>
                        </param>
                        <param name="xpos" type="Number">
                           <description><![CDATA[left position x of source
          ]]></description>
                        </param>
                        <param name="ypos" type="Number">
                           <description><![CDATA[top position y of source
          ]]></description>
                        </param>
                        <param name="scaleX" type="Number" default="1">
                           <description><![CDATA[horizontal scaling factor
          ]]></description>
                        </param>
                        <param name="scaleY" type="Number" default="1">
                           <description><![CDATA[vertical scaling factor
          ]]></description>
                        </param>
                        <param name="angle" type="Number" default="0">
                           <description><![CDATA[rotating angle in degree
          ]]></description>
                        </param>
                        <param name="blendMode" type="String" default="null">
                           <description><![CDATA[blend mode
          ]]></description>
                        </param>
                        <param name="colorTransform" type="flash.geom:ColorTransform" default="null">
                           <description><![CDATA[color transform
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="drawTexture" fullname="org.si.b3:CMLMovieClip/drawTexture" accessLevel="public" result_type="org.si.b3:CMLMovieClip" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ draw CMLMovieClipTexture to the screen, you have to set CMLMovieClipTexture.drawable = true.
          ]]></description>
                     <shortDescription><![CDATA[ draw CMLMovieClipTexture to the screen, you have to set CMLMovieClipTexture.drawable = true.]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClip">
                        <classRef name="CMLMovieClip" fullName="org.si.b3:CMLMovieClip" packageName="org.si.b3" relativePath="../b3/CMLMovieClip.html"/>
                     </result>
                     <params>
                        <param name="texture" type="org.si.b3:CMLMovieClipTexture">
                           <classRef name="CMLMovieClipTexture" fullName="org.si.b3:CMLMovieClipTexture" packageName="org.si.b3" relativePath="CMLMovieClipTexture.html"/>
                           <description><![CDATA[source IBitmapDrawable
          ]]></description>
                        </param>
                        <param name="xpos" type="Number">
                           <description><![CDATA[center position x of source
          ]]></description>
                        </param>
                        <param name="ypos" type="Number">
                           <description><![CDATA[center position y of source
          ]]></description>
                        </param>
                        <param name="scaleX" type="Number" default="1">
                           <description><![CDATA[horizontal scaling factor
          ]]></description>
                        </param>
                        <param name="scaleY" type="Number" default="1">
                           <description><![CDATA[vertical scaling factor
          ]]></description>
                        </param>
                        <param name="angle" type="Number" default="0">
                           <description><![CDATA[rotating angle in degree
          ]]></description>
                        </param>
                        <param name="blendMode" type="String" default="null">
                           <description><![CDATA[blend mode
          ]]></description>
                        </param>
                        <param name="colorTransform" type="flash.geom:ColorTransform" default="null">
                           <description><![CDATA[color transform
          ]]></description>
                        </param>
                        <param name="animIndex" type="int" default="0">
                           <description><![CDATA[animation index
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="fillRect" fullname="org.si.b3:CMLMovieClip/fillRect" accessLevel="public" result_type="org.si.b3:CMLMovieClip" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ call screen.fillRect without Rectangle instance. 
          ]]></description>
                     <shortDescription><![CDATA[ call screen.fillRect without Rectangle instance.]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClip">
                        <classRef name="CMLMovieClip" fullName="org.si.b3:CMLMovieClip" packageName="org.si.b3" relativePath="../b3/CMLMovieClip.html"/>
                     </result>
                     <params>
                        <param name="color" type="uint">
                           <description><![CDATA[fill color
          ]]></description>
                        </param>
                        <param name="x" type="int">
                           <description><![CDATA[x of left edge
          ]]></description>
                        </param>
                        <param name="y" type="int">
                           <description><![CDATA[y of top edge
          ]]></description>
                        </param>
                        <param name="width" type="int">
                           <description><![CDATA[rectangle width
          ]]></description>
                        </param>
                        <param name="height" type="int">
                           <description><![CDATA[rectangle height
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="setSize" fullname="org.si.b3:CMLMovieClip/setSize" accessLevel="public" result_type="org.si.b3:CMLMovieClip" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Set screen size
          ]]></description>
                     <shortDescription><![CDATA[ Set screen size
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClip">
                        <![CDATA[this instance
         ]]>
                        <classRef name="CMLMovieClip" fullName="org.si.b3:CMLMovieClip" packageName="org.si.b3" relativePath="../b3/CMLMovieClip.html"/>
                     </result>
                     <params>
                        <param name="width" type="int">
                           <description><![CDATA[screen width
          ]]></description>
                        </param>
                        <param name="height" type="int">
                           <description><![CDATA[screen height
          ]]></description>
                        </param>
                        <param name="clearColor" type="int" default="0x000000">
                           <description><![CDATA[clear color
          ]]></description>
                        </param>
                        <param name="scopeMargin" type="Number" default="32">
                           <description><![CDATA[margin of object's moving range.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="update" fullname="org.si.b3:CMLMovieClip/update" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ update for one frame ]]></description>
                     <shortDescription><![CDATA[ update for one frame ]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="e" type="flash.events:Event" default="null"/>
                     </params>
                  </method>
               </methods>
               <fields>
                  <field name="HORIZONTAL" fullname="org.si.b3:CMLMovieClip/HORIZONTAL" accessLevel="public" type="String" isConst="true" isStatic="true" defaultValue="horizontal">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON0" fullname="org.si.b3:CMLMovieClip/KEY_BUTTON0" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="4">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON1" fullname="org.si.b3:CMLMovieClip/KEY_BUTTON1" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="5">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON2" fullname="org.si.b3:CMLMovieClip/KEY_BUTTON2" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="6">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON3" fullname="org.si.b3:CMLMovieClip/KEY_BUTTON3" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="7">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON4" fullname="org.si.b3:CMLMovieClip/KEY_BUTTON4" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="8">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON5" fullname="org.si.b3:CMLMovieClip/KEY_BUTTON5" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="9">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON6" fullname="org.si.b3:CMLMovieClip/KEY_BUTTON6" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="10">
                     <versions/>
                  </field>
                  <field name="KEY_BUTTON7" fullname="org.si.b3:CMLMovieClip/KEY_BUTTON7" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="11">
                     <versions/>
                  </field>
                  <field name="KEY_DOWN" fullname="org.si.b3:CMLMovieClip/KEY_DOWN" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="1">
                     <versions/>
                  </field>
                  <field name="KEY_ESCAPE" fullname="org.si.b3:CMLMovieClip/KEY_ESCAPE" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="14">
                     <versions/>
                  </field>
                  <field name="KEY_LEFT" fullname="org.si.b3:CMLMovieClip/KEY_LEFT" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="2">
                     <versions/>
                  </field>
                  <field name="KEY_RESET" fullname="org.si.b3:CMLMovieClip/KEY_RESET" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="13">
                     <versions/>
                  </field>
                  <field name="KEY_RIGHT" fullname="org.si.b3:CMLMovieClip/KEY_RIGHT" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="3">
                     <versions/>
                  </field>
                  <field name="KEY_START" fullname="org.si.b3:CMLMovieClip/KEY_START" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="12">
                     <versions/>
                  </field>
                  <field name="KEY_SYSTEM" fullname="org.si.b3:CMLMovieClip/KEY_SYSTEM" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="15">
                     <versions/>
                  </field>
                  <field name="KEY_UP" fullname="org.si.b3:CMLMovieClip/KEY_UP" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="0">
                     <versions/>
                  </field>
                  <field name="VERTICAL" fullname="org.si.b3:CMLMovieClip/VERTICAL" accessLevel="public" type="String" isConst="true" isStatic="true" defaultValue="vertical">
                     <versions/>
                  </field>
                  <field name="control" fullname="org.si.b3:CMLMovieClip/control" accessLevel="public" type="org.si.b3.modules:CMLMovieClipControl" isConst="false" isStatic="false">
                     <classRef name="CMLMovieClipControl" fullName="org.si.b3.modules:CMLMovieClipControl" packageName="org.si.b3.modules" relativePath="modules/CMLMovieClipControl.html"/>
                     <description><![CDATA[ Controler management module ]]></description>
                     <shortDescription><![CDATA[ Controler management module ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="fps" fullname="org.si.b3:CMLMovieClip/fps" accessLevel="public" type="org.si.b3.modules:CMLMovieClipFPS" isConst="false" isStatic="false">
                     <classRef name="CMLMovieClipFPS" fullName="org.si.b3.modules:CMLMovieClipFPS" packageName="org.si.b3.modules" relativePath="modules/CMLMovieClipFPS.html"/>
                     <description><![CDATA[ FPS management module ]]></description>
                     <shortDescription><![CDATA[ FPS management module ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="pause" fullname="org.si.b3:CMLMovieClip/pause" accessLevel="public" type="Boolean" isConst="false" isStatic="false" defaultValue="false">
                     <description><![CDATA[ Pause flag ]]></description>
                     <shortDescription><![CDATA[ Pause flag ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="scene" fullname="org.si.b3:CMLMovieClip/scene" accessLevel="public" type="org.si.b3.modules:CMLMovieClipScene" isConst="false" isStatic="false">
                     <classRef name="CMLMovieClipScene" fullName="org.si.b3.modules:CMLMovieClipScene" packageName="org.si.b3.modules" relativePath="modules/CMLMovieClipScene.html"/>
                     <description><![CDATA[ Scene management module ]]></description>
                     <shortDescription><![CDATA[ Scene management module ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="screen" fullname="org.si.b3:CMLMovieClip/screen" accessLevel="public" type="flash.display:BitmapData" isConst="false" isStatic="false" defaultValue="null">
                     <description><![CDATA[ Screen ]]></description>
                     <shortDescription><![CDATA[ Screen ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="clearColor" fullname="org.si.b3:CMLMovieClip/clearColor/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false" only="read-write">
                     <description><![CDATA[ clear color ]]></description>
                     <shortDescription><![CDATA[ clear color ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="scopeMargin" fullname="org.si.b3:CMLMovieClip/scopeMargin/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ margin of object's moving range. ]]></description>
                     <shortDescription><![CDATA[ margin of object's moving range.]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
            <asClass name="CMLMovieClipTexture" type="class" fullname="org.si.b3:CMLMovieClipTexture" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.b3" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ CMLMovieClipTexture provides BitmapData for CMLMovieClip. ]]></description>
               <shortDescription><![CDATA[ CMLMovieClipTexture provides BitmapData for CMLMovieClip.]]></shortDescription>
               <versions/>
               <author/>
               <asAncestors/>
               <constructors>
                  <constructor name="CMLMovieClipTexture" fullname="org.si.b3:CMLMovieClipTexture/org.si.b3:CMLMovieClipTexture" accessLevel="public" result_type="*" inheritDoc="false">
                     <description><![CDATA[ constructor 
          ]]></description>
                     <shortDescription><![CDATA[ constructor 
          ]]></shortDescription>
                     <versions/>
                     <result type="*"/>
                     <params>
                        <param name="bitmapData" type="flash.display:BitmapData">
                           <description><![CDATA[source texture
          ]]></description>
                        </param>
                        <param name="texX" type="int" default="0">
                           <description><![CDATA[x coordinate of left edge on source texture
          ]]></description>
                        </param>
                        <param name="texY" type="int" default="0">
                           <description><![CDATA[y coordinate of top edge on source texture
          ]]></description>
                        </param>
                        <param name="texWidth" type="int" default="0">
                           <description><![CDATA[texture width
          ]]></description>
                        </param>
                        <param name="texHeight" type="int" default="0">
                           <description><![CDATA[texture height
          ]]></description>
                        </param>
                        <param name="drawable" type="Boolean" default="false">
                           <description><![CDATA[true to use CMLMovieClip.drawTexture()
          ]]></description>
                        </param>
                        <param name="animationCount" type="int" default="1">
                           <description><![CDATA[animation count
          ]]></description>
                        </param>
                        <param name="areaWidth" type="int" default="0">
                           <description><![CDATA[area width of animation sequence
          ]]></description>
                        </param>
                        <param name="areaHeight" type="int" default="0">
                           <description><![CDATA[area height of animation sequence
          ]]></description>
                        </param>
                        <param name="columnPriority" type="Boolean" default="true">
                           <description><![CDATA[scanning direction of animation sequence, true for horizontal
         ]]></description>
                        </param>
                     </params>
                  </constructor>
               </constructors>
               <methods>
                  <method name="clone" fullname="org.si.b3:CMLMovieClipTexture/clone" accessLevel="public" result_type="org.si.b3:CMLMovieClipTexture" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ cloning ]]></description>
                     <shortDescription><![CDATA[ cloning ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClipTexture">
                        <classRef name="CMLMovieClipTexture" fullName="org.si.b3:CMLMovieClipTexture" packageName="org.si.b3" relativePath="../b3/CMLMovieClipTexture.html"/>
                     </result>
                  </method>
                  <method name="createAlphaMap" fullname="org.si.b3:CMLMovieClipTexture/createAlphaMap" accessLevel="public" result_type="org.si.b3:CMLMovieClipTexture" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ create alpha map 
          ]]></description>
                     <shortDescription><![CDATA[ create alpha map 
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClipTexture">
                        <classRef name="CMLMovieClipTexture" fullName="org.si.b3:CMLMovieClipTexture" packageName="org.si.b3" relativePath="../b3/CMLMovieClipTexture.html"/>
                     </result>
                     <params>
                        <param name="fillColor" type="uint" default="0xffffffff">
                           <description><![CDATA[filling color
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="createRotateAnimation" fullname="org.si.b3:CMLMovieClipTexture/createRotateAnimation" accessLevel="public" result_type="org.si.b3:CMLMovieClipTexture" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ create rotate animation
          ]]></description>
                     <shortDescription><![CDATA[ create rotate animation
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClipTexture">
                        <![CDATA[animation sequence of cut out textures. property "drawable" is true.
         ]]>
                        <classRef name="CMLMovieClipTexture" fullName="org.si.b3:CMLMovieClipTexture" packageName="org.si.b3" relativePath="../b3/CMLMovieClipTexture.html"/>
                     </result>
                     <params>
                        <param name="scaleX" type="Number" default="1">
                           <description><![CDATA[horizontal scaling factor
          ]]></description>
                        </param>
                        <param name="scaleY" type="Number" default="1">
                           <description><![CDATA[vertical scaling factor
          ]]></description>
                        </param>
                        <param name="minAngle" type="Number" default="-180">
                           <description><![CDATA[start angle in degree
          ]]></description>
                        </param>
                        <param name="maxAngle" type="Number" default="180">
                           <description><![CDATA[end angle in degree
          ]]></description>
                        </param>
                        <param name="animationCount" type="int" default="32">
                           <description><![CDATA[animation count 
          ]]></description>
                        </param>
                        <param name="colorTransform" type="flash.geom:ColorTransform" default="null">
                           <description><![CDATA[color transform
          ]]></description>
                        </param>
                        <param name="backgroundColor" type="uint" default="0">
                           <description><![CDATA[bacground color
          ]]></description>
                        </param>
                        <param name="margin" type="int" default="0">
                           <description><![CDATA[margin around the result texture
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="cutout" fullname="org.si.b3:CMLMovieClipTexture/cutout" accessLevel="public" result_type="org.si.b3:CMLMovieClipTexture" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ cut out texture with scaling and rotation
          ]]></description>
                     <shortDescription><![CDATA[ cut out texture with scaling and rotation
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.b3:CMLMovieClipTexture">
                        <![CDATA[cut out texture. property "drawable" is true.
         ]]>
                        <classRef name="CMLMovieClipTexture" fullName="org.si.b3:CMLMovieClipTexture" packageName="org.si.b3" relativePath="../b3/CMLMovieClipTexture.html"/>
                     </result>
                     <params>
                        <param name="scaleX" type="Number" default="1">
                           <description><![CDATA[horizontal scaling factor
          ]]></description>
                        </param>
                        <param name="scaleY" type="Number" default="1">
                           <description><![CDATA[vertical scaling factor
          ]]></description>
                        </param>
                        <param name="angle" type="Number" default="0">
                           <description><![CDATA[rotation angle in degree
          ]]></description>
                        </param>
                        <param name="colorTransform" type="flash.geom:ColorTransform" default="null">
                           <description><![CDATA[color transform
          ]]></description>
                        </param>
                        <param name="backgroundColor" type="uint" default="0">
                           <description><![CDATA[bacground color
          ]]></description>
                        </param>
                        <param name="margin" type="int" default="0">
                           <description><![CDATA[margin around the result texture
          ]]></description>
                        </param>
                     </params>
                  </method>
               </methods>
               <fields>
                  <field name="alphaMap" fullname="org.si.b3:CMLMovieClipTexture/alphaMap" accessLevel="public" type="org.si.b3:CMLMovieClipTexture" isConst="false" isStatic="false" defaultValue="null">
                     <classRef name="CMLMovieClipTexture" fullName="org.si.b3:CMLMovieClipTexture" packageName="org.si.b3" relativePath="../b3/CMLMovieClipTexture.html"/>
                     <description><![CDATA[ alpha map ]]></description>
                     <shortDescription><![CDATA[ alpha map ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="animationPattern" fullname="org.si.b3:CMLMovieClipTexture/animationPattern" accessLevel="public" type="Vector" isConst="false" isStatic="false" defaultValue="null">
                     <description><![CDATA[ animation pattern ]]></description>
                     <shortDescription><![CDATA[ animation pattern ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="bitmapData" fullname="org.si.b3:CMLMovieClipTexture/bitmapData" accessLevel="public" type="flash.display:BitmapData" isConst="false" isStatic="false">
                     <description><![CDATA[ source bitmap data ]]></description>
                     <shortDescription><![CDATA[ source bitmap data ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="center" fullname="org.si.b3:CMLMovieClipTexture/center" accessLevel="public" type="flash.geom:Point" isConst="false" isStatic="false">
                     <description><![CDATA[ texture center ]]></description>
                     <shortDescription><![CDATA[ texture center ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="cutoutBitmapData" fullname="org.si.b3:CMLMovieClipTexture/cutoutBitmapData" accessLevel="public" type="flash.display:BitmapData" isConst="false" isStatic="false" defaultValue="null">
                     <description><![CDATA[ cutout bitmap data ]]></description>
                     <shortDescription><![CDATA[ cutout bitmap data ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="rect" fullname="org.si.b3:CMLMovieClipTexture/rect" accessLevel="public" type="flash.geom:Rectangle" isConst="false" isStatic="false">
                     <description><![CDATA[ cutout rectangle ]]></description>
                     <shortDescription><![CDATA[ cutout rectangle ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="animationCount" fullname="org.si.b3:CMLMovieClipTexture/animationCount/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read">
                     <description><![CDATA[ animation count ]]></description>
                     <shortDescription><![CDATA[ animation count ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="drawable" fullname="org.si.b3:CMLMovieClipTexture/drawable/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read-write">
                     <description><![CDATA[ true if you want to use CMLMovieClip.draw() ]]></description>
                     <shortDescription><![CDATA[ true if you want to use CMLMovieClip.draw() ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="height" fullname="org.si.b3:CMLMovieClipTexture/height/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read">
                     <description><![CDATA[ texture height ]]></description>
                     <shortDescription><![CDATA[ texture height ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="width" fullname="org.si.b3:CMLMovieClipTexture/width/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read">
                     <description><![CDATA[ texture width ]]></description>
                     <shortDescription><![CDATA[ texture width ]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
         </classes>
      </asPackage>
      <asPackage name="org.si.cml.extensions">
         <classes>
            <asClass name="BulletRunner" type="class" fullname="org.si.cml.extensions:BulletRunner" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.cml.extensions" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ The BulletRunner is simple class to apply CannonML. 
]]></description>
               <shortDescription><![CDATA[ The BulletRunner is simple class to apply CannonML.]]></shortDescription>
               <versions/>
               <author/>
               <example><![CDATA[basic usage.
<listing version="3.0">
// apply bullet runner to your own instance with callback functions
var br:BulletRunner = BulletRunner.apply(yourInstance, {"onCreate":onCreate...})
// and run sequence on bullet runner
br.runSequence("cml text", bml_xml or CMLSequence);
</listing>
     ]]></example>
               <asAncestors>
                  <asAncestor>
                     <classRef name="ScopeLimitObject" fullName="org.si.cml.extensions:ScopeLimitObject" packageName="org.si.cml.extensions" relativePath="ScopeLimitObject.html"/>
                     <fields>
                        <field name="defaultScopeXmax" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeXmax" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="160">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="defaultScopeXmin" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeXmin" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="-160">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="defaultScopeYmax" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeYmax" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="240">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="defaultScopeYmin" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeYmin" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="-240">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="scopeEnabled" fullname="org.si.cml.extensions:ScopeLimitObject/scopeEnabled" accessLevel="public" type="Boolean" isConst="false" isStatic="false" defaultValue="true">
                           <shortDescription><![CDATA[ The availabirity of scope check ]]></shortDescription>
                        </field>
                        <field name="scopeXmax" fullname="org.si.cml.extensions:ScopeLimitObject/scopeXmax" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Maxmum x value of the available scope.]]></shortDescription>
                        </field>
                        <field name="scopeXmin" fullname="org.si.cml.extensions:ScopeLimitObject/scopeXmin" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Minimum x value of the available scope.]]></shortDescription>
                        </field>
                        <field name="scopeYmax" fullname="org.si.cml.extensions:ScopeLimitObject/scopeYmax" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Maximum y value of the available scope.]]></shortDescription>
                        </field>
                        <field name="scopeYmin" fullname="org.si.cml.extensions:ScopeLimitObject/scopeYmin" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Minimum y value of the available scope.]]></shortDescription>
                        </field>
                        <field name="defaultScopeHeight" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeHeight/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ default scope height.]]></shortDescription>
                        </field>
                        <field name="defaultScopeWidth" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeWidth/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ default scope width.]]></shortDescription>
                        </field>
                        <field name="isEscaped" fullname="org.si.cml.extensions:ScopeLimitObject/isEscaped/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Did this object escape from the scope ? ]]></shortDescription>
                        </field>
                        <field name="scopeHeight" fullname="org.si.cml.extensions:ScopeLimitObject/scopeHeight/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Scope height ]]></shortDescription>
                        </field>
                        <field name="scopeWidth" fullname="org.si.cml.extensions:ScopeLimitObject/scopeWidth/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Scope width ]]></shortDescription>
                        </field>
                     </fields>
                     <methods>
                        <method name="checkScope" fullname="org.si.cml.extensions:ScopeLimitObject/checkScope" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Check scope and call destroy(0) when escaped.]]></shortDescription>
                        </method>
                        <method name="expandScope" fullname="org.si.cml.extensions:ScopeLimitObject/expandScope" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Expand scope size from defaultScope.]]></shortDescription>
                           <params>
                              <param name="x" type="Number"/>
                              <param name="y" type="Number"/>
                           </params>
                        </method>
                        <method name="initialize" fullname="org.si.cml.extensions:ScopeLimitObject/initialize" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ <b>Call this function first of all</b> instead of CMLObject.initialize().]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="vertical_" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="limitScope" fullname="org.si.cml.extensions:ScopeLimitObject/limitScope" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Check scope and stay inside of scope.]]></shortDescription>
                        </method>
                        <method name="onUpdate" fullname="org.si.cml.extensions:ScopeLimitObject/onUpdate" accessLevel="public" result_type="void" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[  Callback function from CMLObject.update().]]></shortDescription>
                        </method>
                     </methods>
                  </asAncestor>
                  <asAncestor>
                     <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../CMLObject.html"/>
                     <fields>
                        <field name="MT_ACCEL" fullname="org.si.cml:CMLObject/MT_ACCEL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="1">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Accelarating motion.]]></shortDescription>
                        </field>
                        <field name="MT_BULLETML" fullname="org.si.cml:CMLObject/MT_BULLETML" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="3">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion.]]></shortDescription>
                        </field>
                        <field name="MT_CONST" fullname="org.si.cml:CMLObject/MT_CONST" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="0">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Linear motion.]]></shortDescription>
                        </field>
                        <field name="MT_GRAVITY" fullname="org.si.cml:CMLObject/MT_GRAVITY" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="4">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Gravity motion.]]></shortDescription>
                        </field>
                        <field name="MT_INTERPOL" fullname="org.si.cml:CMLObject/MT_INTERPOL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="2">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion.]]></shortDescription>
                        </field>
                        <field name="MT_PART_ACCEL" fullname="org.si.cml:CMLObject/MT_PART_ACCEL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Accelarating motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_BULLETML" fullname="org.si.cml:CMLObject/MT_PART_BULLETML" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_CONST" fullname="org.si.cml:CMLObject/MT_PART_CONST" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Linear motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_INTERPOL" fullname="org.si.cml:CMLObject/MT_PART_INTERPOL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion of parts.]]></shortDescription>
                        </field>
                        <field name="actor" fullname="org.si.cml:CMLObject/actor" accessLevel="public" type="" isConst="false" isStatic="false" defaultValue="unknown">
                           <shortDescription><![CDATA[ You can rewrite this for your own purpose.]]></shortDescription>
                        </field>
                        <field name="vx" fullname="org.si.cml:CMLObject/vx" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ X value of velocity.]]></shortDescription>
                        </field>
                        <field name="vy" fullname="org.si.cml:CMLObject/vy" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ Y value of velocity.]]></shortDescription>
                        </field>
                        <field name="x" fullname="org.si.cml:CMLObject/x" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ X value of position.]]></shortDescription>
                        </field>
                        <field name="y" fullname="org.si.cml:CMLObject/y" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ Y value of position.]]></shortDescription>
                        </field>
                        <field name="angle" fullname="org.si.cml:CMLObject/angle/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this object, scrolling direction is 0 degree.]]></shortDescription>
                        </field>
                        <field name="angleAccel" fullname="org.si.cml:CMLObject/angleAccel/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of accelaration.]]></shortDescription>
                        </field>
                        <field name="angleOnStage" fullname="org.si.cml:CMLObject/angleOnStage/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this object, The direction(1,0) is 0 degree.]]></shortDescription>
                        </field>
                        <field name="angleParentOnStage" fullname="org.si.cml:CMLObject/angleParentOnStage/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this parent object, scrolling direction is 0 degree.]]></shortDescription>
                        </field>
                        <field name="anglePosition" fullname="org.si.cml:CMLObject/anglePosition/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of position from origin.]]></shortDescription>
                        </field>
                        <field name="angleVelocity" fullname="org.si.cml:CMLObject/angleVelocity/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of velocity.]]></shortDescription>
                        </field>
                        <field name="destructionStatus" fullname="org.si.cml:CMLObject/destructionStatus/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false">
                           <shortDescription><![CDATA[ Destruction status.]]></shortDescription>
                        </field>
                        <field name="frameRateRatio" fullname="org.si.cml:CMLObject/frameRateRatio/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Value of (frame rate to calculate speed) / (screen frame rate).]]></shortDescription>
                        </field>
                        <field name="funcRand" fullname="org.si.cml:CMLObject/funcRand/get" accessLevel="public" isConst="false" isStatic="true" type="Function" inheritDoc="false">
                           <shortDescription><![CDATA[ Function for "$?/$??" variable, The type is function():Number.]]></shortDescription>
                        </field>
                        <field name="globalRank" fullname="org.si.cml:CMLObject/globalRank/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Variable for "$r" ]]></shortDescription>
                        </field>
                        <field name="hasParts" fullname="org.si.cml:CMLObject/hasParts/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Does this object have another object as a part ? ]]></shortDescription>
                        </field>
                        <field name="id" fullname="org.si.cml:CMLObject/id/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false">
                           <shortDescription><![CDATA[ Construction ID, this value changes when the object is destroyed.]]></shortDescription>
                        </field>
                        <field name="isActive" fullname="org.si.cml:CMLObject/isActive/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Is this object on stage ? ]]></shortDescription>
                        </field>
                        <field name="isPart" fullname="org.si.cml:CMLObject/isPart/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Is this object a part of its parent ? The part object's position is relative to parent's position.]]></shortDescription>
                        </field>
                        <field name="motion_type" fullname="org.si.cml:CMLObject/motion_type/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false">
                           <shortDescription><![CDATA[ Motion type.]]></shortDescription>
                        </field>
                        <field name="parent" fullname="org.si.cml:CMLObject/parent/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml:CMLObject" inheritDoc="false">
                           <shortDescription><![CDATA[ The CMLObject that creates this object.]]></shortDescription>
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                        </field>
                        <field name="rank" fullname="org.si.cml:CMLObject/rank/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ You can define the "$r" value for each object by overriding this property, Ussualy returns CMLObject.globalRank.]]></shortDescription>
                        </field>
                        <field name="relatedX" fullname="org.si.cml:CMLObject/relatedX/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ The x value of position parent related ]]></shortDescription>
                        </field>
                        <field name="relatedY" fullname="org.si.cml:CMLObject/relatedY/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ The y value of position parent related ]]></shortDescription>
                        </field>
                        <field name="root" fullname="org.si.cml:CMLObject/root/get" accessLevel="public" isConst="false" isStatic="true" type="org.si.cml:CMLObject" inheritDoc="false">
                           <shortDescription><![CDATA[ root object is the default parent of all CMLObjects that are created with the argument of parent=null.]]></shortDescription>
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                        </field>
                        <field name="scrollAngle" fullname="org.si.cml:CMLObject/scrollAngle/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Scrolling angle (vertical=-90, horizontal=180).]]></shortDescription>
                        </field>
                        <field name="velocity" fullname="org.si.cml:CMLObject/velocity/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Absolute value of velocity.]]></shortDescription>
                        </field>
                        <field name="vertical" fullname="org.si.cml:CMLObject/vertical/get" accessLevel="public" isConst="false" isStatic="true" type="int" inheritDoc="false">
                           <shortDescription><![CDATA[ Flag for scrolling direction (vertical=1, horizontal=0).]]></shortDescription>
                        </field>
                     </fields>
                     <methods>
                        <method name="calcAbsPosition" fullname="org.si.cml:CMLObject/protected:calcAbsPosition" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate absolute position when the isPart is true.]]></shortDescription>
                        </method>
                        <method name="calcRelatedPosition" fullname="org.si.cml:CMLObject/protected:calcRelatedPosition" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate parent related position from absolute position.]]></shortDescription>
                        </method>
                        <method name="changeParent" fullname="org.si.cml:CMLObject/changeParent" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Change parent.]]></shortDescription>
                           <params>
                              <param name="parent_" type="org.si.cml:CMLObject" default="null">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                              <param name="isPart_" type="Boolean" default="false"/>
                              <param name="access_id_" type="int" default="unknown"/>
                           </params>
                        </method>
                        <method name="countAllIDedChildren" fullname="org.si.cml:CMLObject/countAllIDedChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Count all children with access id.]]></shortDescription>
                        </method>
                        <method name="countIDedChildren" fullname="org.si.cml:CMLObject/countIDedChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Count children with specifyed id.]]></shortDescription>
                           <params>
                              <param name="id" type="int"/>
                           </params>
                        </method>
                        <method name="create" fullname="org.si.cml:CMLObject/create" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Create new object on the CML stage.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="parent_" type="org.si.cml:CMLObject" default="null">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                              <param name="isPart_" type="Boolean" default="false"/>
                              <param name="access_id_" type="int" default="unknown"/>
                           </params>
                        </method>
                        <method name="destroy" fullname="org.si.cml:CMLObject/destroy" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy this object.]]></shortDescription>
                           <params>
                              <param name="status" type="int"/>
                           </params>
                        </method>
                        <method name="destroyAll" fullname="org.si.cml:CMLObject/destroyAll" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy all active objects except for root.]]></shortDescription>
                           <params>
                              <param name="status" type="int"/>
                           </params>
                        </method>
                        <method name="execute" fullname="org.si.cml:CMLObject/execute" accessLevel="public" result_type="org.si.cml:CMLFiber" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Execute a sequence and create a new fiber.]]></shortDescription>
                           <result type="org.si.cml:CMLFiber">
                              <classRef name="CMLFiber" fullName="org.si.cml:CMLFiber" packageName="org.si.cml" relativePath="../../cml/CMLFiber.html"/>
                           </result>
                           <params>
                              <param name="seq" type="org.si.cml:CMLSequence">
                                 <classRef name="CMLSequence" fullName="org.si.cml:CMLSequence" packageName="org.si.cml" relativePath="../../cml/CMLSequence.html"/>
                              </param>
                              <param name="args" type="Array" default="null"/>
                              <param name="invertFlag" type="uint" default="0"/>
                           </params>
                        </method>
                        <method name="findAllChildren" fullname="org.si.cml:CMLObject/findAllChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find all child and callback.]]></shortDescription>
                           <params>
                              <param name="id" type="int"/>
                              <param name="func" type="Function"/>
                           </params>
                        </method>
                        <method name="findAllParts" fullname="org.si.cml:CMLObject/findAllParts" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find all parts and callback.]]></shortDescription>
                           <params>
                              <param name="func" type="Function"/>
                           </params>
                        </method>
                        <method name="findChild" fullname="org.si.cml:CMLObject/findChild" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find first child object with specifyed id.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="id" type="int"/>
                           </params>
                        </method>
                        <method name="getAimingAngle" fullname="org.si.cml:CMLObject/getAimingAngle" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate aiming angle to another object.]]></shortDescription>
                           <params>
                              <param name="target_" type="org.si.cml:CMLObject">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                              <param name="offx" type="Number" default="0"/>
                              <param name="offy" type="Number" default="0"/>
                           </params>
                        </method>
                        <method name="getDistance" fullname="org.si.cml:CMLObject/getDistance" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate distance from another object aproximately.]]></shortDescription>
                           <params>
                              <param name="tgt" type="org.si.cml:CMLObject">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                           </params>
                        </method>
                        <method name="halt" fullname="org.si.cml:CMLObject/halt" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy all fibers of this object.]]></shortDescription>
                        </method>
                        <method name="onCreate" fullname="org.si.cml:CMLObject/onCreate" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Callback function on create.]]></shortDescription>
                        </method>
                        <method name="onDestroy" fullname="org.si.cml:CMLObject/onDestroy" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Callback function on destroy.]]></shortDescription>
                        </method>
                        <method name="onFireObject" fullname="org.si.cml:CMLObject/onFireObject" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Statement "f" calls this when it needs.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="args" type="Array"/>
                           </params>
                        </method>
                        <method name="onNewObject" fullname="org.si.cml:CMLObject/onNewObject" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Statement "n" calls this when it needs.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="args" type="Array"/>
                           </params>
                        </method>
                        <method name="rand" fullname="org.si.cml:CMLObject/rand" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ The return value is from CMLObject.funcRand.]]></shortDescription>
                        </method>
                        <method name="reset" fullname="org.si.cml:CMLObject/reset" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Reset position, velocity, accelaration, interpolation, motion type and rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                           </params>
                        </method>
                        <method name="rotateHead" fullname="org.si.cml:CMLObject/protected:rotateHead" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Rotate haed in 1 frame, if rotd > 0.]]></shortDescription>
                        </method>
                        <method name="setAccelaration" fullname="org.si.cml:CMLObject/setAccelaration" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set accelaration.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="ax_" type="Number"/>
                              <param name="ay_" type="Number"/>
                              <param name="time_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setAsDefaultTarget" fullname="org.si.cml:CMLObject/setAsDefaultTarget" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set as a default target object.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                        </method>
                        <method name="setChangeDirection" fullname="org.si.cml:CMLObject/setChangeDirection" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ &lt;changeDirection type='absolute'&gt; of bulletML.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="dir" type="Number"/>
                              <param name="term" type="int"/>
                              <param name="rmax" type="Number"/>
                              <param name="shortest_rot" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setChangeSpeed" fullname="org.si.cml:CMLObject/setChangeSpeed" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ &lt;changeSpeed type='absolute'&gt; of bulletML.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="spd" type="Number"/>
                              <param name="term" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setConstantRotation" fullname="org.si.cml:CMLObject/setConstantRotation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set constant rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="end_angle" type="Number"/>
                              <param name="term" type="Number" default="0"/>
                              <param name="rmax" type="Number" default="1"/>
                              <param name="isShortestRotation" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setGlobalRankRange" fullname="org.si.cml:CMLObject/setGlobalRankRange" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ Set the range of globalRank.]]></shortDescription>
                           <params>
                              <param name="min" type="Number"/>
                              <param name="max" type="Number"/>
                           </params>
                        </method>
                        <method name="setGravity" fullname="org.si.cml:CMLObject/setGravity" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set gravity motion.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="atr_a" type="Number"/>
                              <param name="atr_b" type="Number"/>
                              <param name="term" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setInterpolation" fullname="org.si.cml:CMLObject/setInterpolation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set interpolating motion.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="vx_" type="Number"/>
                              <param name="vy_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setPosition" fullname="org.si.cml:CMLObject/setPosition" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set position.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setRotation" fullname="org.si.cml:CMLObject/setRotation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="end_angle" type="Number"/>
                              <param name="term" type="Number" default="0"/>
                              <param name="start_t" type="Number" default="1"/>
                              <param name="end_t" type="Number" default="1"/>
                              <param name="isShortestRotation" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setVelocity" fullname="org.si.cml:CMLObject/setVelocity" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set velocity.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="vx_" type="Number"/>
                              <param name="vy_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="transformGlobalToLocal" fullname="org.si.cml:CMLObject/transformGlobalToLocal" accessLevel="public" result_type="flash.geom:Point" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ transform global coordinate to object local coordinate
          ]]></shortDescription>
                           <params>
                              <param name="global" type="flash.geom:Point"/>
                           </params>
                        </method>
                        <method name="transformLocalToGlobal" fullname="org.si.cml:CMLObject/transformLocalToGlobal" accessLevel="public" result_type="flash.geom:Point" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ transform object local coordinate to global coordinate 
          ]]></shortDescription>
                           <params>
                              <param name="local" type="flash.geom:Point"/>
                           </params>
                        </method>
                        <method name="update" fullname="org.si.cml:CMLObject/update" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ <b>Call this function for each frame</b>.]]></shortDescription>
                        </method>
                     </methods>
                  </asAncestor>
                  <asAncestor>
                     <classRef name="org.si.cml.core.CMLListElem" fullName="org.si.cml.core.CMLListElem" relativePath="none"/>
                  </asAncestor>
               </asAncestors>
               <methods>
                  <method name="apply" fullname="org.si.cml.extensions:BulletRunner/apply" accessLevel="public" result_type="org.si.cml.extensions:BulletRunner" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ apply BulletRunner to the object
          ]]></description>
                     <shortDescription><![CDATA[ apply BulletRunner to the object
          ]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml.extensions:BulletRunner">
                        <![CDATA[BulletRunner instance
         ]]>
                        <classRef name="BulletRunner" fullName="org.si.cml.extensions:BulletRunner" packageName="org.si.cml.extensions" relativePath="../extensions/BulletRunner.html"/>
                     </result>
                     <params>
                        <param name="actor" type="">
                           <description><![CDATA[The object controlled by BulletRunner.
          ]]></description>
                        </param>
                        <param name="callbacks" type="" default="null">
                           <description><![CDATA[set Callback functions by object. The key of "onCreate", "onUpdate", "onDestroy", "onNew" and "onFire" are available.
          ]]></description>
                        </param>
                        <param name="propertyNames" type="" default="null">
                           <description><![CDATA[target property name to control. The key of "x", "y" and "angle" are available.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="isPaused" fullname="org.si.cml.extensions:BulletRunner/isPaused" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ Is paused ? ]]></description>
                     <shortDescription><![CDATA[ Is paused ? ]]></shortDescription>
                     <versions/>
                     <result type="Boolean"/>
                  </method>
                  <method name="pause" fullname="org.si.cml.extensions:BulletRunner/pause" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ pause all bullet runner runnings ]]></description>
                     <shortDescription><![CDATA[ pause all bullet runner runnings ]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="resume" fullname="org.si.cml.extensions:BulletRunner/resume" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ resume all bullet runner runnings pause ]]></description>
                     <shortDescription><![CDATA[ resume all bullet runner runnings pause ]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="runSequence" fullname="org.si.cml.extensions:BulletRunner/runSequence" accessLevel="public" result_type="org.si.cml:CMLFiber" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ run sequence. call CMLObject::create and CMLObject::execute inside.
          ]]></description>
                     <shortDescription><![CDATA[ run sequence.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLFiber">
                        <![CDATA[Instance of fiber that execute the sequence.
         ]]>
                        <classRef name="CMLFiber" fullName="org.si.cml:CMLFiber" packageName="org.si.cml" relativePath="../../cml/CMLFiber.html"/>
                     </result>
                     <params>
                        <param name="seq" type="">
                           <description><![CDATA[sequence. CMLSequence instance, String in CannonML or XML in BulletML is available.
          ]]></description>
                        </param>
                        <param name="args" type="Array" default="null">
                           <description><![CDATA[The array of arguments to execute sequence.
          ]]></description>
                        </param>
                        <param name="invertFlag" type="uint" default="0">
                           <description><![CDATA[The flag to invert execution, same as 'm' command.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="setDefaultScope" fullname="org.si.cml.extensions:BulletRunner/setDefaultScope" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ default scope rectangle. ]]></description>
                     <shortDescription><![CDATA[ default scope rectangle.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="x" type="Number"/>
                        <param name="y" type="Number"/>
                        <param name="width" type="Number"/>
                        <param name="height" type="Number"/>
                     </params>
                     <customs>
                        <default><![CDATA[Rectangle(-160, -240, 320, 480)  ]]></default>
                     </customs>
                  </method>
                  <method name="updateTargetPosition" fullname="org.si.cml.extensions:BulletRunner/updateTargetPosition" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ update position that all bullets target to. 
          ]]></description>
                     <shortDescription><![CDATA[ update position that all bullets target to.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="xpos" type="Number">
                           <description><![CDATA[x number.
          ]]></description>
                        </param>
                        <param name="ypos" type="Number">
                           <description><![CDATA[y number.
         ]]></description>
                        </param>
                     </params>
                  </method>
               </methods>
               <fields>
                  <field name="anglePropertyName" fullname="org.si.cml.extensions:BulletRunner/anglePropertyName" accessLevel="public" type="String" isConst="false" isStatic="false">
                     <description><![CDATA[ target property name of angle ]]></description>
                     <shortDescription><![CDATA[ target property name of angle ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="atCreate" fullname="org.si.cml.extensions:BulletRunner/atCreate" accessLevel="public" type="Function" isConst="false" isStatic="false" defaultValue="null">
                     <description><![CDATA[ callback when the CML object is created on CML stage ]]></description>
                     <shortDescription><![CDATA[ callback when the CML object is created on CML stage ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="atDestroy" fullname="org.si.cml.extensions:BulletRunner/atDestroy" accessLevel="public" type="Function" isConst="false" isStatic="false" defaultValue="null">
                     <description><![CDATA[ callback when the CML object is destroyed on CML stage ]]></description>
                     <shortDescription><![CDATA[ callback when the CML object is destroyed on CML stage ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="atFireObject" fullname="org.si.cml.extensions:BulletRunner/atFireObject" accessLevel="public" type="Function" isConst="false" isStatic="false" defaultValue="null">
                     <description><![CDATA[ callback when the CML object is required by "f commands  ]]></description>
                     <shortDescription><![CDATA[ callback when the CML object is required by "f commands  ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="atNewObject" fullname="org.si.cml.extensions:BulletRunner/atNewObject" accessLevel="public" type="Function" isConst="false" isStatic="false" defaultValue="null">
                     <description><![CDATA[ callback when the CML object is required by "n commands ]]></description>
                     <shortDescription><![CDATA[ callback when the CML object is required by "n commands ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="atUpdate" fullname="org.si.cml.extensions:BulletRunner/atUpdate" accessLevel="public" type="Function" isConst="false" isStatic="false" defaultValue="null">
                     <description><![CDATA[ callback when the CML object is updated ]]></description>
                     <shortDescription><![CDATA[ callback when the CML object is updated ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="defaultAnglePropertyName" fullname="org.si.cml.extensions:BulletRunner/defaultAnglePropertyName" accessLevel="public" type="String" isConst="false" isStatic="true" defaultValue="rotation">
                     <description><![CDATA[ target property name of angle ]]></description>
                     <shortDescription><![CDATA[ target property name of angle ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="defaultXPropertyName" fullname="org.si.cml.extensions:BulletRunner/defaultXPropertyName" accessLevel="public" type="String" isConst="false" isStatic="true" defaultValue="x">
                     <description><![CDATA[ target property name of x ]]></description>
                     <shortDescription><![CDATA[ target property name of x ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="defaultYPropertyName" fullname="org.si.cml.extensions:BulletRunner/defaultYPropertyName" accessLevel="public" type="String" isConst="false" isStatic="true" defaultValue="y">
                     <description><![CDATA[ target property name of y ]]></description>
                     <shortDescription><![CDATA[ target property name of y ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="xPropertyName" fullname="org.si.cml.extensions:BulletRunner/xPropertyName" accessLevel="public" type="String" isConst="false" isStatic="false">
                     <description><![CDATA[ target property name of x ]]></description>
                     <shortDescription><![CDATA[ target property name of x ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="yPropertyName" fullname="org.si.cml.extensions:BulletRunner/yPropertyName" accessLevel="public" type="String" isConst="false" isStatic="false">
                     <description><![CDATA[ target property name of y ]]></description>
                     <shortDescription><![CDATA[ target property name of y ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="callbacks" fullname="org.si.cml.extensions:BulletRunner/callbacks/get" accessLevel="public" isConst="false" isStatic="false" type="*" inheritDoc="false" only="read-write">
                     <description><![CDATA[ set callback functions. The key of "onCreate", "onUpdate", "onDestroy", "onNew" and "onFire" are available.<br/>
          The function format of onCreate, onUpdate and onDestroy are function(br:BulletRunner) : Boolean. <br/>
          The function format of onNew and onFire are function(args:Array) : BulletRunner. You have to return your new actor by "n" or "f" command. The sequrence parameters are passed by arguments.<br/>
         ]]></description>
                     <shortDescription><![CDATA[ set callback functions.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="defaultPropertyNames" fullname="org.si.cml.extensions:BulletRunner/defaultPropertyNames/get" accessLevel="public" isConst="false" isStatic="true" type="*" inheritDoc="false" only="read-write">
                     <description><![CDATA[ default actor property name to control. "x", "y" and "angle" is available. ]]></description>
                     <shortDescription><![CDATA[ default actor property name to control.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="parentActor" fullname="org.si.cml.extensions:BulletRunner/parentActor/get" accessLevel="public" isConst="false" isStatic="false" type="*" inheritDoc="false" only="read">
                     <description><![CDATA[ parent object, returns null when this BulletRunner is created by aplly() or the parent is destructed. ]]></description>
                     <shortDescription><![CDATA[ parent object, returns null when this BulletRunner is created by aplly() or the parent is destructed.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="propertyNames" fullname="org.si.cml.extensions:BulletRunner/propertyNames/get" accessLevel="public" isConst="false" isStatic="false" type="*" inheritDoc="false" only="read-write">
                     <description><![CDATA[ actor property name to control. "x", "y" and "angle" is available. ]]></description>
                     <shortDescription><![CDATA[ actor property name to control.]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
            <asClass name="ActorFactory" type="class" fullname="org.si.cml.extensions:ActorFactory" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.cml.extensions" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ Factory class of Actors.
]]></description>
               <shortDescription><![CDATA[ Factory class of Actors.]]></shortDescription>
               <versions/>
               <author/>
               <example><![CDATA[basic usage.
<listing version="3.0">
public class Bullet extends Actor {
}
    ...
    
var bulletFactory:ActorFactory = new ActorFactory(Bullet);

    ...
    
var newBullet:Bullet = bulletFactory.newInstance();
</listing>
     ]]></example>
               <asAncestors/>
               <constructors>
                  <constructor name="ActorFactory" fullname="org.si.cml.extensions:ActorFactory/org.si.cml.extensions:ActorFactory" accessLevel="public" result_type="*" inheritDoc="false">
                     <description><![CDATA[ create new Actor factory. 
          ]]></description>
                     <shortDescription><![CDATA[ create new Actor factory.]]></shortDescription>
                     <versions/>
                     <result type="*"/>
                     <params>
                        <param name="actorClass" type="Class" default="null">
                           <description><![CDATA[class to create new instance
          ]]></description>
                        </param>
                        <param name="countMaxLimit" type="int" default="0">
                           <description><![CDATA[maximum limit of instance count
          ]]></description>
                        </param>
                        <param name="evalIDNumber" type="int" default="-1">
                           <description><![CDATA[id nubmer for hitting evaluation. Must be >= 0. Negative value to apply number automatically.
          ]]></description>
                        </param>
                        <param name="drawPriority" type="int" default="-1">
                           <description><![CDATA[drawing priority number, young number drawing first. Must be >= 0. Negative value to apply number automatically.
         ]]></description>
                        </param>
                     </params>
                  </constructor>
               </constructors>
               <methods>
                  <method name="newInstance" fullname="org.si.cml.extensions:ActorFactory/newInstance" accessLevel="public" result_type="*" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ <b>Get new instance from free list. You CANNOT create the new instance of registered class by "new" operator. </b> 
          ]]></description>
                     <shortDescription><![CDATA[ <b>Get new instance from free list.]]></shortDescription>
                     <versions/>
                     <result type="*"><![CDATA[new instance
         ]]></result>
                  </method>
               </methods>
               <fields>
                  <field name="drawPriority" fullname="org.si.cml.extensions:ActorFactory/drawPriority/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read">
                     <description><![CDATA[ drawing priority, young number drawing first. ]]></description>
                     <shortDescription><![CDATA[ drawing priority, young number drawing first.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="evalIDNumber" fullname="org.si.cml.extensions:ActorFactory/evalIDNumber/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read">
                     <description><![CDATA[ id number for hitting evaluation. ]]></description>
                     <shortDescription><![CDATA[ id number for hitting evaluation.]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
            <asClass name="ScopeLimitObject" type="class" fullname="org.si.cml.extensions:ScopeLimitObject" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.cml.extensions" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ Extension of CMLObject that implements scope limitation. <br/>
      You have to call ScopeLimitObject.initialize() first, and you have to call CMLObject.update() for each frame.<br/>
      ScopeLimitObject.initialize() registers some user define commands as below,
      <ul>
      <li>&scon; Enables the available scope.</li>
      <li>&scoff; Disables the available scope.</li>
      </ul>
     ]]></description>
               <shortDescription><![CDATA[ Extension of CMLObject that implements scope limitation.]]></shortDescription>
               <versions/>
               <author/>
               <asDecendants>
                  <classRef name="Actor" fullName="org.si.cml.extensions:Actor" packageName="org.si.cml.extensions" relativePath="../extensions/Actor.html"/>
                  <classRef name="BulletRunner" fullName="org.si.cml.extensions:BulletRunner" packageName="org.si.cml.extensions" relativePath="../extensions/BulletRunner.html"/>
               </asDecendants>
               <asAncestors>
                  <asAncestor>
                     <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../CMLObject.html"/>
                     <fields>
                        <field name="MT_ACCEL" fullname="org.si.cml:CMLObject/MT_ACCEL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="1">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Accelarating motion.]]></shortDescription>
                        </field>
                        <field name="MT_BULLETML" fullname="org.si.cml:CMLObject/MT_BULLETML" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="3">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion.]]></shortDescription>
                        </field>
                        <field name="MT_CONST" fullname="org.si.cml:CMLObject/MT_CONST" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="0">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Linear motion.]]></shortDescription>
                        </field>
                        <field name="MT_GRAVITY" fullname="org.si.cml:CMLObject/MT_GRAVITY" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="4">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Gravity motion.]]></shortDescription>
                        </field>
                        <field name="MT_INTERPOL" fullname="org.si.cml:CMLObject/MT_INTERPOL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="2">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion.]]></shortDescription>
                        </field>
                        <field name="MT_PART_ACCEL" fullname="org.si.cml:CMLObject/MT_PART_ACCEL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Accelarating motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_BULLETML" fullname="org.si.cml:CMLObject/MT_PART_BULLETML" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_CONST" fullname="org.si.cml:CMLObject/MT_PART_CONST" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Linear motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_INTERPOL" fullname="org.si.cml:CMLObject/MT_PART_INTERPOL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion of parts.]]></shortDescription>
                        </field>
                        <field name="actor" fullname="org.si.cml:CMLObject/actor" accessLevel="public" type="" isConst="false" isStatic="false" defaultValue="unknown">
                           <shortDescription><![CDATA[ You can rewrite this for your own purpose.]]></shortDescription>
                        </field>
                        <field name="vx" fullname="org.si.cml:CMLObject/vx" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ X value of velocity.]]></shortDescription>
                        </field>
                        <field name="vy" fullname="org.si.cml:CMLObject/vy" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ Y value of velocity.]]></shortDescription>
                        </field>
                        <field name="x" fullname="org.si.cml:CMLObject/x" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ X value of position.]]></shortDescription>
                        </field>
                        <field name="y" fullname="org.si.cml:CMLObject/y" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ Y value of position.]]></shortDescription>
                        </field>
                        <field name="angle" fullname="org.si.cml:CMLObject/angle/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this object, scrolling direction is 0 degree.]]></shortDescription>
                        </field>
                        <field name="angleAccel" fullname="org.si.cml:CMLObject/angleAccel/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of accelaration.]]></shortDescription>
                        </field>
                        <field name="angleOnStage" fullname="org.si.cml:CMLObject/angleOnStage/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this object, The direction(1,0) is 0 degree.]]></shortDescription>
                        </field>
                        <field name="angleParentOnStage" fullname="org.si.cml:CMLObject/angleParentOnStage/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this parent object, scrolling direction is 0 degree.]]></shortDescription>
                        </field>
                        <field name="anglePosition" fullname="org.si.cml:CMLObject/anglePosition/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of position from origin.]]></shortDescription>
                        </field>
                        <field name="angleVelocity" fullname="org.si.cml:CMLObject/angleVelocity/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of velocity.]]></shortDescription>
                        </field>
                        <field name="destructionStatus" fullname="org.si.cml:CMLObject/destructionStatus/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false">
                           <shortDescription><![CDATA[ Destruction status.]]></shortDescription>
                        </field>
                        <field name="frameRateRatio" fullname="org.si.cml:CMLObject/frameRateRatio/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Value of (frame rate to calculate speed) / (screen frame rate).]]></shortDescription>
                        </field>
                        <field name="funcRand" fullname="org.si.cml:CMLObject/funcRand/get" accessLevel="public" isConst="false" isStatic="true" type="Function" inheritDoc="false">
                           <shortDescription><![CDATA[ Function for "$?/$??" variable, The type is function():Number.]]></shortDescription>
                        </field>
                        <field name="globalRank" fullname="org.si.cml:CMLObject/globalRank/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Variable for "$r" ]]></shortDescription>
                        </field>
                        <field name="hasParts" fullname="org.si.cml:CMLObject/hasParts/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Does this object have another object as a part ? ]]></shortDescription>
                        </field>
                        <field name="id" fullname="org.si.cml:CMLObject/id/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false">
                           <shortDescription><![CDATA[ Construction ID, this value changes when the object is destroyed.]]></shortDescription>
                        </field>
                        <field name="isActive" fullname="org.si.cml:CMLObject/isActive/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Is this object on stage ? ]]></shortDescription>
                        </field>
                        <field name="isPart" fullname="org.si.cml:CMLObject/isPart/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Is this object a part of its parent ? The part object's position is relative to parent's position.]]></shortDescription>
                        </field>
                        <field name="motion_type" fullname="org.si.cml:CMLObject/motion_type/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false">
                           <shortDescription><![CDATA[ Motion type.]]></shortDescription>
                        </field>
                        <field name="parent" fullname="org.si.cml:CMLObject/parent/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml:CMLObject" inheritDoc="false">
                           <shortDescription><![CDATA[ The CMLObject that creates this object.]]></shortDescription>
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                        </field>
                        <field name="rank" fullname="org.si.cml:CMLObject/rank/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ You can define the "$r" value for each object by overriding this property, Ussualy returns CMLObject.globalRank.]]></shortDescription>
                        </field>
                        <field name="relatedX" fullname="org.si.cml:CMLObject/relatedX/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ The x value of position parent related ]]></shortDescription>
                        </field>
                        <field name="relatedY" fullname="org.si.cml:CMLObject/relatedY/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ The y value of position parent related ]]></shortDescription>
                        </field>
                        <field name="root" fullname="org.si.cml:CMLObject/root/get" accessLevel="public" isConst="false" isStatic="true" type="org.si.cml:CMLObject" inheritDoc="false">
                           <shortDescription><![CDATA[ root object is the default parent of all CMLObjects that are created with the argument of parent=null.]]></shortDescription>
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                        </field>
                        <field name="scrollAngle" fullname="org.si.cml:CMLObject/scrollAngle/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Scrolling angle (vertical=-90, horizontal=180).]]></shortDescription>
                        </field>
                        <field name="velocity" fullname="org.si.cml:CMLObject/velocity/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Absolute value of velocity.]]></shortDescription>
                        </field>
                        <field name="vertical" fullname="org.si.cml:CMLObject/vertical/get" accessLevel="public" isConst="false" isStatic="true" type="int" inheritDoc="false">
                           <shortDescription><![CDATA[ Flag for scrolling direction (vertical=1, horizontal=0).]]></shortDescription>
                        </field>
                     </fields>
                     <methods>
                        <method name="calcAbsPosition" fullname="org.si.cml:CMLObject/protected:calcAbsPosition" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate absolute position when the isPart is true.]]></shortDescription>
                        </method>
                        <method name="calcRelatedPosition" fullname="org.si.cml:CMLObject/protected:calcRelatedPosition" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate parent related position from absolute position.]]></shortDescription>
                        </method>
                        <method name="changeParent" fullname="org.si.cml:CMLObject/changeParent" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Change parent.]]></shortDescription>
                           <params>
                              <param name="parent_" type="org.si.cml:CMLObject" default="null">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                              <param name="isPart_" type="Boolean" default="false"/>
                              <param name="access_id_" type="int" default="unknown"/>
                           </params>
                        </method>
                        <method name="countAllIDedChildren" fullname="org.si.cml:CMLObject/countAllIDedChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Count all children with access id.]]></shortDescription>
                        </method>
                        <method name="countIDedChildren" fullname="org.si.cml:CMLObject/countIDedChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Count children with specifyed id.]]></shortDescription>
                           <params>
                              <param name="id" type="int"/>
                           </params>
                        </method>
                        <method name="create" fullname="org.si.cml:CMLObject/create" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Create new object on the CML stage.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="parent_" type="org.si.cml:CMLObject" default="null">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                              <param name="isPart_" type="Boolean" default="false"/>
                              <param name="access_id_" type="int" default="unknown"/>
                           </params>
                        </method>
                        <method name="destroy" fullname="org.si.cml:CMLObject/destroy" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy this object.]]></shortDescription>
                           <params>
                              <param name="status" type="int"/>
                           </params>
                        </method>
                        <method name="destroyAll" fullname="org.si.cml:CMLObject/destroyAll" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy all active objects except for root.]]></shortDescription>
                           <params>
                              <param name="status" type="int"/>
                           </params>
                        </method>
                        <method name="execute" fullname="org.si.cml:CMLObject/execute" accessLevel="public" result_type="org.si.cml:CMLFiber" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Execute a sequence and create a new fiber.]]></shortDescription>
                           <result type="org.si.cml:CMLFiber">
                              <classRef name="CMLFiber" fullName="org.si.cml:CMLFiber" packageName="org.si.cml" relativePath="../../cml/CMLFiber.html"/>
                           </result>
                           <params>
                              <param name="seq" type="org.si.cml:CMLSequence">
                                 <classRef name="CMLSequence" fullName="org.si.cml:CMLSequence" packageName="org.si.cml" relativePath="../../cml/CMLSequence.html"/>
                              </param>
                              <param name="args" type="Array" default="null"/>
                              <param name="invertFlag" type="uint" default="0"/>
                           </params>
                        </method>
                        <method name="findAllChildren" fullname="org.si.cml:CMLObject/findAllChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find all child and callback.]]></shortDescription>
                           <params>
                              <param name="id" type="int"/>
                              <param name="func" type="Function"/>
                           </params>
                        </method>
                        <method name="findAllParts" fullname="org.si.cml:CMLObject/findAllParts" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find all parts and callback.]]></shortDescription>
                           <params>
                              <param name="func" type="Function"/>
                           </params>
                        </method>
                        <method name="findChild" fullname="org.si.cml:CMLObject/findChild" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find first child object with specifyed id.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="id" type="int"/>
                           </params>
                        </method>
                        <method name="getAimingAngle" fullname="org.si.cml:CMLObject/getAimingAngle" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate aiming angle to another object.]]></shortDescription>
                           <params>
                              <param name="target_" type="org.si.cml:CMLObject">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                              <param name="offx" type="Number" default="0"/>
                              <param name="offy" type="Number" default="0"/>
                           </params>
                        </method>
                        <method name="getDistance" fullname="org.si.cml:CMLObject/getDistance" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate distance from another object aproximately.]]></shortDescription>
                           <params>
                              <param name="tgt" type="org.si.cml:CMLObject">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                           </params>
                        </method>
                        <method name="halt" fullname="org.si.cml:CMLObject/halt" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy all fibers of this object.]]></shortDescription>
                        </method>
                        <method name="onCreate" fullname="org.si.cml:CMLObject/onCreate" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Callback function on create.]]></shortDescription>
                        </method>
                        <method name="onDestroy" fullname="org.si.cml:CMLObject/onDestroy" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Callback function on destroy.]]></shortDescription>
                        </method>
                        <method name="onFireObject" fullname="org.si.cml:CMLObject/onFireObject" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Statement "f" calls this when it needs.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="args" type="Array"/>
                           </params>
                        </method>
                        <method name="onNewObject" fullname="org.si.cml:CMLObject/onNewObject" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Statement "n" calls this when it needs.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="args" type="Array"/>
                           </params>
                        </method>
                        <method name="rand" fullname="org.si.cml:CMLObject/rand" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ The return value is from CMLObject.funcRand.]]></shortDescription>
                        </method>
                        <method name="reset" fullname="org.si.cml:CMLObject/reset" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Reset position, velocity, accelaration, interpolation, motion type and rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                           </params>
                        </method>
                        <method name="rotateHead" fullname="org.si.cml:CMLObject/protected:rotateHead" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Rotate haed in 1 frame, if rotd > 0.]]></shortDescription>
                        </method>
                        <method name="setAccelaration" fullname="org.si.cml:CMLObject/setAccelaration" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set accelaration.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="ax_" type="Number"/>
                              <param name="ay_" type="Number"/>
                              <param name="time_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setAsDefaultTarget" fullname="org.si.cml:CMLObject/setAsDefaultTarget" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set as a default target object.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                        </method>
                        <method name="setChangeDirection" fullname="org.si.cml:CMLObject/setChangeDirection" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ &lt;changeDirection type='absolute'&gt; of bulletML.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="dir" type="Number"/>
                              <param name="term" type="int"/>
                              <param name="rmax" type="Number"/>
                              <param name="shortest_rot" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setChangeSpeed" fullname="org.si.cml:CMLObject/setChangeSpeed" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ &lt;changeSpeed type='absolute'&gt; of bulletML.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="spd" type="Number"/>
                              <param name="term" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setConstantRotation" fullname="org.si.cml:CMLObject/setConstantRotation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set constant rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="end_angle" type="Number"/>
                              <param name="term" type="Number" default="0"/>
                              <param name="rmax" type="Number" default="1"/>
                              <param name="isShortestRotation" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setGlobalRankRange" fullname="org.si.cml:CMLObject/setGlobalRankRange" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ Set the range of globalRank.]]></shortDescription>
                           <params>
                              <param name="min" type="Number"/>
                              <param name="max" type="Number"/>
                           </params>
                        </method>
                        <method name="setGravity" fullname="org.si.cml:CMLObject/setGravity" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set gravity motion.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="atr_a" type="Number"/>
                              <param name="atr_b" type="Number"/>
                              <param name="term" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setInterpolation" fullname="org.si.cml:CMLObject/setInterpolation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set interpolating motion.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="vx_" type="Number"/>
                              <param name="vy_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setPosition" fullname="org.si.cml:CMLObject/setPosition" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set position.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setRotation" fullname="org.si.cml:CMLObject/setRotation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="end_angle" type="Number"/>
                              <param name="term" type="Number" default="0"/>
                              <param name="start_t" type="Number" default="1"/>
                              <param name="end_t" type="Number" default="1"/>
                              <param name="isShortestRotation" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setVelocity" fullname="org.si.cml:CMLObject/setVelocity" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set velocity.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="vx_" type="Number"/>
                              <param name="vy_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="transformGlobalToLocal" fullname="org.si.cml:CMLObject/transformGlobalToLocal" accessLevel="public" result_type="flash.geom:Point" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ transform global coordinate to object local coordinate
          ]]></shortDescription>
                           <params>
                              <param name="global" type="flash.geom:Point"/>
                           </params>
                        </method>
                        <method name="transformLocalToGlobal" fullname="org.si.cml:CMLObject/transformLocalToGlobal" accessLevel="public" result_type="flash.geom:Point" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ transform object local coordinate to global coordinate 
          ]]></shortDescription>
                           <params>
                              <param name="local" type="flash.geom:Point"/>
                           </params>
                        </method>
                        <method name="update" fullname="org.si.cml:CMLObject/update" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ <b>Call this function for each frame</b>.]]></shortDescription>
                        </method>
                     </methods>
                  </asAncestor>
                  <asAncestor>
                     <classRef name="org.si.cml.core.CMLListElem" fullName="org.si.cml.core.CMLListElem" relativePath="none"/>
                  </asAncestor>
               </asAncestors>
               <constructors>
                  <constructor name="ScopeLimitObject" fullname="org.si.cml.extensions:ScopeLimitObject/ScopeLimitObject" accessLevel="public" result_type="*" inheritDoc="false">
                     <description><![CDATA[ Constructor ]]></description>
                     <shortDescription><![CDATA[ Constructor ]]></shortDescription>
                     <versions/>
                     <result type="*"/>
                  </constructor>
               </constructors>
               <methods>
                  <method name="checkScope" fullname="org.si.cml.extensions:ScopeLimitObject/checkScope" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Check scope and call destroy(0) when escaped. 
          ]]></description>
                     <shortDescription><![CDATA[ Check scope and call destroy(0) when escaped.]]></shortDescription>
                     <versions/>
                     <result type="Boolean"><![CDATA[flag escaped
         ]]></result>
                  </method>
                  <method name="expandScope" fullname="org.si.cml.extensions:ScopeLimitObject/expandScope" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Expand scope size from defaultScope. ]]></description>
                     <shortDescription><![CDATA[ Expand scope size from defaultScope.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="x" type="Number"/>
                        <param name="y" type="Number"/>
                     </params>
                  </method>
                  <method name="initialize" fullname="org.si.cml.extensions:ScopeLimitObject/initialize" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ <b>Call this function first of all</b> instead of CMLObject.initialize(). 
          ]]></description>
                     <shortDescription><![CDATA[ <b>Call this function first of all</b> instead of CMLObject.initialize().]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[The root object.
          ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                     </result>
                     <sees>
                        <see href="Actor.html#onPreCreate()" label="Actor.onPreCreate()"/>
                     </sees>
                     <params>
                        <param name="vertical_" type="Boolean" default="true">
                           <description><![CDATA[Flag of scrolling direction
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="limitScope" fullname="org.si.cml.extensions:ScopeLimitObject/limitScope" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Check scope and stay inside of scope.
          ]]></description>
                     <shortDescription><![CDATA[ Check scope and stay inside of scope.]]></shortDescription>
                     <versions/>
                     <result type="Boolean"><![CDATA[flag limited
         ]]></result>
                  </method>
                  <method name="onUpdate" fullname="org.si.cml.extensions:ScopeLimitObject/onUpdate" accessLevel="public" result_type="void" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[  Callback function from CMLObject.update(). This function is called after updating position. Override this to update own parameters.]]></description>
                     <shortDescription><![CDATA[  Callback function from CMLObject.update().]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="setDefaultScope" fullname="org.si.cml.extensions:ScopeLimitObject/setDefaultScope" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ set default scope rectangle. ]]></description>
                     <shortDescription><![CDATA[ set default scope rectangle.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="x" type="Number"/>
                        <param name="y" type="Number"/>
                        <param name="width" type="Number"/>
                        <param name="height" type="Number"/>
                     </params>
                     <customs>
                        <default><![CDATA[Rectangle(-160, -240, 320, 480)  ]]></default>
                     </customs>
                  </method>
               </methods>
               <fields>
                  <field name="defaultScopeXmax" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeXmax" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="160">
                     <description><![CDATA[ default value of the available scopes range ]]></description>
                     <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="defaultScopeXmin" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeXmin" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="-160">
                     <description><![CDATA[ default value of the available scopes range ]]></description>
                     <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="defaultScopeYmax" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeYmax" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="240">
                     <description><![CDATA[ default value of the available scopes range ]]></description>
                     <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="defaultScopeYmin" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeYmin" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="-240">
                     <description><![CDATA[ default value of the available scopes range ]]></description>
                     <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="scopeEnabled" fullname="org.si.cml.extensions:ScopeLimitObject/scopeEnabled" accessLevel="public" type="Boolean" isConst="false" isStatic="false" defaultValue="true">
                     <description><![CDATA[ The availabirity of scope check ]]></description>
                     <shortDescription><![CDATA[ The availabirity of scope check ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="scopeXmax" fullname="org.si.cml.extensions:ScopeLimitObject/scopeXmax" accessLevel="public" type="Number" isConst="false" isStatic="false">
                     <description><![CDATA[ Maxmum x value of the available scope. ]]></description>
                     <shortDescription><![CDATA[ Maxmum x value of the available scope.]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[Actor.defaultScopeXmax ]]></default>
                     </customs>
                  </field>
                  <field name="scopeXmin" fullname="org.si.cml.extensions:ScopeLimitObject/scopeXmin" accessLevel="public" type="Number" isConst="false" isStatic="false">
                     <description><![CDATA[ Minimum x value of the available scope. ]]></description>
                     <shortDescription><![CDATA[ Minimum x value of the available scope.]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[Actor.defaultScopeXmin ]]></default>
                     </customs>
                  </field>
                  <field name="scopeYmax" fullname="org.si.cml.extensions:ScopeLimitObject/scopeYmax" accessLevel="public" type="Number" isConst="false" isStatic="false">
                     <description><![CDATA[ Maximum y value of the available scope. ]]></description>
                     <shortDescription><![CDATA[ Maximum y value of the available scope.]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[Actor.defaultScopeYmax ]]></default>
                     </customs>
                  </field>
                  <field name="scopeYmin" fullname="org.si.cml.extensions:ScopeLimitObject/scopeYmin" accessLevel="public" type="Number" isConst="false" isStatic="false">
                     <description><![CDATA[ Minimum y value of the available scope. ]]></description>
                     <shortDescription><![CDATA[ Minimum y value of the available scope.]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[Actor.defaultScopeYmin ]]></default>
                     </customs>
                  </field>
                  <field name="defaultScopeHeight" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeHeight/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ default scope height. ]]></description>
                     <shortDescription><![CDATA[ default scope height.]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[480  ]]></default>
                     </customs>
                  </field>
                  <field name="defaultScopeWidth" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeWidth/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ default scope width. ]]></description>
                     <shortDescription><![CDATA[ default scope width.]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[320 ]]></default>
                     </customs>
                  </field>
                  <field name="isEscaped" fullname="org.si.cml.extensions:ScopeLimitObject/isEscaped/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read">
                     <description><![CDATA[ Did this object escape from the scope ? ]]></description>
                     <shortDescription><![CDATA[ Did this object escape from the scope ? ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="scopeHeight" fullname="org.si.cml.extensions:ScopeLimitObject/scopeHeight/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Scope height ]]></description>
                     <shortDescription><![CDATA[ Scope height ]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[Actor.defaultScopeHeight ]]></default>
                     </customs>
                  </field>
                  <field name="scopeWidth" fullname="org.si.cml.extensions:ScopeLimitObject/scopeWidth/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Scope width ]]></description>
                     <shortDescription><![CDATA[ Scope width ]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[ScopeLimitObject.defaultScopeWidth ]]></default>
                     </customs>
                  </field>
               </fields>
            </asClass>
            <asClass name="Actor" type="class" fullname="org.si.cml.extensions:Actor" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.cml.extensions" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ Extension of CMLObject that implements scope, life, hit test, drawing priority and management of instances. <br/>
      You have to call Actor.initialize() first, and you have to call CMLObject.update() and Actor.draw() for each frame.<br/>
      Actor.initialize() registers some user define commands as below,
      <ul>
      <li>$life; Refers the value of Actor.life.</li>
      <li>&scon; Enables the available scope.</li>
      <li>&scoff; Disables the available scope.</li>
      <li>&prior; Changes the drawing priority. Specify the priority (posi/nega value) in argument.</li>
      </ul>
     ]]></description>
               <shortDescription><![CDATA[ Extension of CMLObject that implements scope, life, hit test, drawing priority and management of instances.]]></shortDescription>
               <versions/>
               <author/>
               <asDecendants>
                  <classRef name="CMLMovieClipSprite" fullName="org.si.b3:CMLMovieClipSprite" packageName="org.si.b3" relativePath="../../b3/CMLMovieClipSprite.html"/>
               </asDecendants>
               <asAncestors>
                  <asAncestor>
                     <classRef name="ScopeLimitObject" fullName="org.si.cml.extensions:ScopeLimitObject" packageName="org.si.cml.extensions" relativePath="ScopeLimitObject.html"/>
                     <fields>
                        <field name="defaultScopeXmax" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeXmax" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="160">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="defaultScopeXmin" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeXmin" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="-160">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="defaultScopeYmax" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeYmax" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="240">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="defaultScopeYmin" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeYmin" accessLevel="public" type="Number" isConst="false" isStatic="true" defaultValue="-240">
                           <shortDescription><![CDATA[ default value of the available scopes range ]]></shortDescription>
                        </field>
                        <field name="scopeEnabled" fullname="org.si.cml.extensions:ScopeLimitObject/scopeEnabled" accessLevel="public" type="Boolean" isConst="false" isStatic="false" defaultValue="true">
                           <shortDescription><![CDATA[ The availabirity of scope check ]]></shortDescription>
                        </field>
                        <field name="scopeXmax" fullname="org.si.cml.extensions:ScopeLimitObject/scopeXmax" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Maxmum x value of the available scope.]]></shortDescription>
                        </field>
                        <field name="scopeXmin" fullname="org.si.cml.extensions:ScopeLimitObject/scopeXmin" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Minimum x value of the available scope.]]></shortDescription>
                        </field>
                        <field name="scopeYmax" fullname="org.si.cml.extensions:ScopeLimitObject/scopeYmax" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Maximum y value of the available scope.]]></shortDescription>
                        </field>
                        <field name="scopeYmin" fullname="org.si.cml.extensions:ScopeLimitObject/scopeYmin" accessLevel="public" type="Number" isConst="false" isStatic="false">
                           <shortDescription><![CDATA[ Minimum y value of the available scope.]]></shortDescription>
                        </field>
                        <field name="defaultScopeHeight" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeHeight/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ default scope height.]]></shortDescription>
                        </field>
                        <field name="defaultScopeWidth" fullname="org.si.cml.extensions:ScopeLimitObject/defaultScopeWidth/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ default scope width.]]></shortDescription>
                        </field>
                        <field name="isEscaped" fullname="org.si.cml.extensions:ScopeLimitObject/isEscaped/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Did this object escape from the scope ? ]]></shortDescription>
                        </field>
                        <field name="scopeHeight" fullname="org.si.cml.extensions:ScopeLimitObject/scopeHeight/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Scope height ]]></shortDescription>
                        </field>
                        <field name="scopeWidth" fullname="org.si.cml.extensions:ScopeLimitObject/scopeWidth/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Scope width ]]></shortDescription>
                        </field>
                     </fields>
                     <methods>
                        <method name="checkScope" fullname="org.si.cml.extensions:ScopeLimitObject/checkScope" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Check scope and call destroy(0) when escaped.]]></shortDescription>
                        </method>
                        <method name="expandScope" fullname="org.si.cml.extensions:ScopeLimitObject/expandScope" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Expand scope size from defaultScope.]]></shortDescription>
                           <params>
                              <param name="x" type="Number"/>
                              <param name="y" type="Number"/>
                           </params>
                        </method>
                        <method name="limitScope" fullname="org.si.cml.extensions:ScopeLimitObject/limitScope" accessLevel="public" result_type="Boolean" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Check scope and stay inside of scope.]]></shortDescription>
                        </method>
                        <method name="setDefaultScope" fullname="org.si.cml.extensions:ScopeLimitObject/setDefaultScope" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ set default scope rectangle.]]></shortDescription>
                           <params>
                              <param name="x" type="Number"/>
                              <param name="y" type="Number"/>
                              <param name="width" type="Number"/>
                              <param name="height" type="Number"/>
                           </params>
                        </method>
                     </methods>
                  </asAncestor>
                  <asAncestor>
                     <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../CMLObject.html"/>
                     <fields>
                        <field name="MT_ACCEL" fullname="org.si.cml:CMLObject/MT_ACCEL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="1">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Accelarating motion.]]></shortDescription>
                        </field>
                        <field name="MT_BULLETML" fullname="org.si.cml:CMLObject/MT_BULLETML" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="3">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion.]]></shortDescription>
                        </field>
                        <field name="MT_CONST" fullname="org.si.cml:CMLObject/MT_CONST" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="0">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Linear motion.]]></shortDescription>
                        </field>
                        <field name="MT_GRAVITY" fullname="org.si.cml:CMLObject/MT_GRAVITY" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="4">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Gravity motion.]]></shortDescription>
                        </field>
                        <field name="MT_INTERPOL" fullname="org.si.cml:CMLObject/MT_INTERPOL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="2">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion.]]></shortDescription>
                        </field>
                        <field name="MT_PART_ACCEL" fullname="org.si.cml:CMLObject/MT_PART_ACCEL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Accelarating motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_BULLETML" fullname="org.si.cml:CMLObject/MT_PART_BULLETML" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_CONST" fullname="org.si.cml:CMLObject/MT_PART_CONST" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, Linear motion of parts.]]></shortDescription>
                        </field>
                        <field name="MT_PART_INTERPOL" fullname="org.si.cml:CMLObject/MT_PART_INTERPOL" accessLevel="public" type="uint" isConst="true" isStatic="true" defaultValue="unknown">
                           <shortDescription><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion of parts.]]></shortDescription>
                        </field>
                        <field name="actor" fullname="org.si.cml:CMLObject/actor" accessLevel="public" type="" isConst="false" isStatic="false" defaultValue="unknown">
                           <shortDescription><![CDATA[ You can rewrite this for your own purpose.]]></shortDescription>
                        </field>
                        <field name="vx" fullname="org.si.cml:CMLObject/vx" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ X value of velocity.]]></shortDescription>
                        </field>
                        <field name="vy" fullname="org.si.cml:CMLObject/vy" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ Y value of velocity.]]></shortDescription>
                        </field>
                        <field name="x" fullname="org.si.cml:CMLObject/x" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ X value of position.]]></shortDescription>
                        </field>
                        <field name="y" fullname="org.si.cml:CMLObject/y" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                           <shortDescription><![CDATA[ Y value of position.]]></shortDescription>
                        </field>
                        <field name="angle" fullname="org.si.cml:CMLObject/angle/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this object, scrolling direction is 0 degree.]]></shortDescription>
                        </field>
                        <field name="angleAccel" fullname="org.si.cml:CMLObject/angleAccel/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of accelaration.]]></shortDescription>
                        </field>
                        <field name="angleOnStage" fullname="org.si.cml:CMLObject/angleOnStage/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this object, The direction(1,0) is 0 degree.]]></shortDescription>
                        </field>
                        <field name="angleParentOnStage" fullname="org.si.cml:CMLObject/angleParentOnStage/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Angle of this parent object, scrolling direction is 0 degree.]]></shortDescription>
                        </field>
                        <field name="anglePosition" fullname="org.si.cml:CMLObject/anglePosition/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of position from origin.]]></shortDescription>
                        </field>
                        <field name="angleVelocity" fullname="org.si.cml:CMLObject/angleVelocity/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate direction of velocity.]]></shortDescription>
                        </field>
                        <field name="destructionStatus" fullname="org.si.cml:CMLObject/destructionStatus/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false">
                           <shortDescription><![CDATA[ Destruction status.]]></shortDescription>
                        </field>
                        <field name="frameRateRatio" fullname="org.si.cml:CMLObject/frameRateRatio/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Value of (frame rate to calculate speed) / (screen frame rate).]]></shortDescription>
                        </field>
                        <field name="funcRand" fullname="org.si.cml:CMLObject/funcRand/get" accessLevel="public" isConst="false" isStatic="true" type="Function" inheritDoc="false">
                           <shortDescription><![CDATA[ Function for "$?/$??" variable, The type is function():Number.]]></shortDescription>
                        </field>
                        <field name="globalRank" fullname="org.si.cml:CMLObject/globalRank/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Variable for "$r" ]]></shortDescription>
                        </field>
                        <field name="hasParts" fullname="org.si.cml:CMLObject/hasParts/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Does this object have another object as a part ? ]]></shortDescription>
                        </field>
                        <field name="id" fullname="org.si.cml:CMLObject/id/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false">
                           <shortDescription><![CDATA[ Construction ID, this value changes when the object is destroyed.]]></shortDescription>
                        </field>
                        <field name="isActive" fullname="org.si.cml:CMLObject/isActive/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Is this object on stage ? ]]></shortDescription>
                        </field>
                        <field name="isPart" fullname="org.si.cml:CMLObject/isPart/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false">
                           <shortDescription><![CDATA[ Is this object a part of its parent ? The part object's position is relative to parent's position.]]></shortDescription>
                        </field>
                        <field name="motion_type" fullname="org.si.cml:CMLObject/motion_type/get" accessLevel="public" isConst="false" isStatic="false" type="uint" inheritDoc="false">
                           <shortDescription><![CDATA[ Motion type.]]></shortDescription>
                        </field>
                        <field name="parent" fullname="org.si.cml:CMLObject/parent/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml:CMLObject" inheritDoc="false">
                           <shortDescription><![CDATA[ The CMLObject that creates this object.]]></shortDescription>
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                        </field>
                        <field name="rank" fullname="org.si.cml:CMLObject/rank/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ You can define the "$r" value for each object by overriding this property, Ussualy returns CMLObject.globalRank.]]></shortDescription>
                        </field>
                        <field name="relatedX" fullname="org.si.cml:CMLObject/relatedX/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ The x value of position parent related ]]></shortDescription>
                        </field>
                        <field name="relatedY" fullname="org.si.cml:CMLObject/relatedY/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ The y value of position parent related ]]></shortDescription>
                        </field>
                        <field name="root" fullname="org.si.cml:CMLObject/root/get" accessLevel="public" isConst="false" isStatic="true" type="org.si.cml:CMLObject" inheritDoc="false">
                           <shortDescription><![CDATA[ root object is the default parent of all CMLObjects that are created with the argument of parent=null.]]></shortDescription>
                           <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                        </field>
                        <field name="scrollAngle" fullname="org.si.cml:CMLObject/scrollAngle/get" accessLevel="public" isConst="false" isStatic="true" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Scrolling angle (vertical=-90, horizontal=180).]]></shortDescription>
                        </field>
                        <field name="velocity" fullname="org.si.cml:CMLObject/velocity/get" accessLevel="public" isConst="false" isStatic="false" type="Number" inheritDoc="false">
                           <shortDescription><![CDATA[ Absolute value of velocity.]]></shortDescription>
                        </field>
                        <field name="vertical" fullname="org.si.cml:CMLObject/vertical/get" accessLevel="public" isConst="false" isStatic="true" type="int" inheritDoc="false">
                           <shortDescription><![CDATA[ Flag for scrolling direction (vertical=1, horizontal=0).]]></shortDescription>
                        </field>
                     </fields>
                     <methods>
                        <method name="calcAbsPosition" fullname="org.si.cml:CMLObject/protected:calcAbsPosition" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate absolute position when the isPart is true.]]></shortDescription>
                        </method>
                        <method name="calcRelatedPosition" fullname="org.si.cml:CMLObject/protected:calcRelatedPosition" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate parent related position from absolute position.]]></shortDescription>
                        </method>
                        <method name="changeParent" fullname="org.si.cml:CMLObject/changeParent" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Change parent.]]></shortDescription>
                           <params>
                              <param name="parent_" type="org.si.cml:CMLObject" default="null">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                              <param name="isPart_" type="Boolean" default="false"/>
                              <param name="access_id_" type="int" default="unknown"/>
                           </params>
                        </method>
                        <method name="countAllIDedChildren" fullname="org.si.cml:CMLObject/countAllIDedChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Count all children with access id.]]></shortDescription>
                        </method>
                        <method name="countIDedChildren" fullname="org.si.cml:CMLObject/countIDedChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Count children with specifyed id.]]></shortDescription>
                           <params>
                              <param name="id" type="int"/>
                           </params>
                        </method>
                        <method name="create" fullname="org.si.cml:CMLObject/create" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Create new object on the CML stage.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="parent_" type="org.si.cml:CMLObject" default="null">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                              <param name="isPart_" type="Boolean" default="false"/>
                              <param name="access_id_" type="int" default="unknown"/>
                           </params>
                        </method>
                        <method name="destroy" fullname="org.si.cml:CMLObject/destroy" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy this object.]]></shortDescription>
                           <params>
                              <param name="status" type="int"/>
                           </params>
                        </method>
                        <method name="destroyAll" fullname="org.si.cml:CMLObject/destroyAll" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy all active objects except for root.]]></shortDescription>
                           <params>
                              <param name="status" type="int"/>
                           </params>
                        </method>
                        <method name="execute" fullname="org.si.cml:CMLObject/execute" accessLevel="public" result_type="org.si.cml:CMLFiber" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Execute a sequence and create a new fiber.]]></shortDescription>
                           <result type="org.si.cml:CMLFiber">
                              <classRef name="CMLFiber" fullName="org.si.cml:CMLFiber" packageName="org.si.cml" relativePath="../../cml/CMLFiber.html"/>
                           </result>
                           <params>
                              <param name="seq" type="org.si.cml:CMLSequence">
                                 <classRef name="CMLSequence" fullName="org.si.cml:CMLSequence" packageName="org.si.cml" relativePath="../../cml/CMLSequence.html"/>
                              </param>
                              <param name="args" type="Array" default="null"/>
                              <param name="invertFlag" type="uint" default="0"/>
                           </params>
                        </method>
                        <method name="findAllChildren" fullname="org.si.cml:CMLObject/findAllChildren" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find all child and callback.]]></shortDescription>
                           <params>
                              <param name="id" type="int"/>
                              <param name="func" type="Function"/>
                           </params>
                        </method>
                        <method name="findAllParts" fullname="org.si.cml:CMLObject/findAllParts" accessLevel="public" result_type="int" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find all parts and callback.]]></shortDescription>
                           <params>
                              <param name="func" type="Function"/>
                           </params>
                        </method>
                        <method name="findChild" fullname="org.si.cml:CMLObject/findChild" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Find first child object with specifyed id.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="id" type="int"/>
                           </params>
                        </method>
                        <method name="getAimingAngle" fullname="org.si.cml:CMLObject/getAimingAngle" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate aiming angle to another object.]]></shortDescription>
                           <params>
                              <param name="target_" type="org.si.cml:CMLObject">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                              <param name="offx" type="Number" default="0"/>
                              <param name="offy" type="Number" default="0"/>
                           </params>
                        </method>
                        <method name="getDistance" fullname="org.si.cml:CMLObject/getDistance" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Calculate distance from another object aproximately.]]></shortDescription>
                           <params>
                              <param name="tgt" type="org.si.cml:CMLObject">
                                 <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                              </param>
                           </params>
                        </method>
                        <method name="halt" fullname="org.si.cml:CMLObject/halt" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Destroy all fibers of this object.]]></shortDescription>
                        </method>
                        <method name="rand" fullname="org.si.cml:CMLObject/rand" accessLevel="public" result_type="Number" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ The return value is from CMLObject.funcRand.]]></shortDescription>
                        </method>
                        <method name="reset" fullname="org.si.cml:CMLObject/reset" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Reset position, velocity, accelaration, interpolation, motion type and rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                           </params>
                        </method>
                        <method name="rotateHead" fullname="org.si.cml:CMLObject/protected:rotateHead" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Rotate haed in 1 frame, if rotd > 0.]]></shortDescription>
                        </method>
                        <method name="setAccelaration" fullname="org.si.cml:CMLObject/setAccelaration" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set accelaration.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="ax_" type="Number"/>
                              <param name="ay_" type="Number"/>
                              <param name="time_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setAsDefaultTarget" fullname="org.si.cml:CMLObject/setAsDefaultTarget" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set as a default target object.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                        </method>
                        <method name="setChangeDirection" fullname="org.si.cml:CMLObject/setChangeDirection" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ &lt;changeDirection type='absolute'&gt; of bulletML.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="dir" type="Number"/>
                              <param name="term" type="int"/>
                              <param name="rmax" type="Number"/>
                              <param name="shortest_rot" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setChangeSpeed" fullname="org.si.cml:CMLObject/setChangeSpeed" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ &lt;changeSpeed type='absolute'&gt; of bulletML.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="spd" type="Number"/>
                              <param name="term" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setConstantRotation" fullname="org.si.cml:CMLObject/setConstantRotation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set constant rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="end_angle" type="Number"/>
                              <param name="term" type="Number" default="0"/>
                              <param name="rmax" type="Number" default="1"/>
                              <param name="isShortestRotation" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setGlobalRankRange" fullname="org.si.cml:CMLObject/setGlobalRankRange" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ Set the range of globalRank.]]></shortDescription>
                           <params>
                              <param name="min" type="Number"/>
                              <param name="max" type="Number"/>
                           </params>
                        </method>
                        <method name="setGravity" fullname="org.si.cml:CMLObject/setGravity" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set gravity motion.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="atr_a" type="Number"/>
                              <param name="atr_b" type="Number"/>
                              <param name="term" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setInterpolation" fullname="org.si.cml:CMLObject/setInterpolation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set interpolating motion.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="vx_" type="Number"/>
                              <param name="vy_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setPosition" fullname="org.si.cml:CMLObject/setPosition" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set position.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="x_" type="Number"/>
                              <param name="y_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="setRotation" fullname="org.si.cml:CMLObject/setRotation" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set rotation.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="end_angle" type="Number"/>
                              <param name="term" type="Number" default="0"/>
                              <param name="start_t" type="Number" default="1"/>
                              <param name="end_t" type="Number" default="1"/>
                              <param name="isShortestRotation" type="Boolean" default="true"/>
                           </params>
                        </method>
                        <method name="setVelocity" fullname="org.si.cml:CMLObject/setVelocity" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ Set velocity.]]></shortDescription>
                           <result type="org.si.cml:CMLObject">
                              <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                           </result>
                           <params>
                              <param name="vx_" type="Number"/>
                              <param name="vy_" type="Number"/>
                              <param name="term_" type="int" default="0"/>
                           </params>
                        </method>
                        <method name="transformGlobalToLocal" fullname="org.si.cml:CMLObject/transformGlobalToLocal" accessLevel="public" result_type="flash.geom:Point" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ transform global coordinate to object local coordinate
          ]]></shortDescription>
                           <params>
                              <param name="global" type="flash.geom:Point"/>
                           </params>
                        </method>
                        <method name="transformLocalToGlobal" fullname="org.si.cml:CMLObject/transformLocalToGlobal" accessLevel="public" result_type="flash.geom:Point" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                           <shortDescription><![CDATA[ transform object local coordinate to global coordinate 
          ]]></shortDescription>
                           <params>
                              <param name="local" type="flash.geom:Point"/>
                           </params>
                        </method>
                        <method name="update" fullname="org.si.cml:CMLObject/update" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                           <shortDescription><![CDATA[ <b>Call this function for each frame</b>.]]></shortDescription>
                        </method>
                     </methods>
                  </asAncestor>
                  <asAncestor>
                     <classRef name="org.si.cml.core.CMLListElem" fullName="org.si.cml.core.CMLListElem" relativePath="none"/>
                  </asAncestor>
               </asAncestors>
               <constructors>
                  <constructor name="Actor" fullname="org.si.cml.extensions:Actor/Actor" accessLevel="public" result_type="*" inheritDoc="false">
                     <description><![CDATA[ Constructor ]]></description>
                     <shortDescription><![CDATA[ Constructor ]]></shortDescription>
                     <versions/>
                     <result type="*"/>
                  </constructor>
               </constructors>
               <methods>
                  <method name="_register" fullname="org.si.cml.extensions:Actor/protected:_register" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Register this object on the actor list. ]]></description>
                     <shortDescription><![CDATA[ Register this object on the actor list.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="_unregister" fullname="org.si.cml.extensions:Actor/protected:_unregister" accessLevel="protected" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Unregister this object from the actor list. ]]></description>
                     <shortDescription><![CDATA[ Unregister this object from the actor list.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="draw" fullname="org.si.cml.extensions:Actor/draw" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ <b>Call this function for each frame</b> to call all onDraw()s. ]]></description>
                     <shortDescription><![CDATA[ <b>Call this function for each frame</b> to call all onDraw()s.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="initialize" fullname="org.si.cml.extensions:Actor/initialize" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ <b>Call this function first of all</b> instead of CMLObject.initialize(). 
          ]]></description>
                     <shortDescription><![CDATA[ <b>Call this function first of all</b> instead of CMLObject.initialize().]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[The root object.
          ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                     </result>
                     <sees>
                        <see href="Actor.html#onPreCreate()" label="Actor.onPreCreate()"/>
                     </sees>
                     <params>
                        <param name="vertical_" type="Boolean" default="true">
                           <description><![CDATA[Flag of scrolling direction
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="onCreate" fullname="org.si.cml.extensions:Actor/onCreate" accessLevel="public" result_type="void" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[  Callback function on create. Override this to initialize.]]></description>
                     <shortDescription><![CDATA[  Callback function on create.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="onDestroy" fullname="org.si.cml.extensions:Actor/onDestroy" accessLevel="public" result_type="void" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[  Callback function on destroy. Override this to finalize.
          ]]></description>
                     <shortDescription><![CDATA[  Callback function on destroy.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="onDraw" fullname="org.si.cml.extensions:Actor/onDraw" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Callback function to draw. This function is called in the order of the property drawPriority. ]]></description>
                     <shortDescription><![CDATA[ Callback function to draw.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="onFireObject" fullname="org.si.cml.extensions:Actor/onFireObject" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[  Statement "f" calls this when it needs. Override this to define the new CMLObject created by "f" command.
          ]]></description>
                     <shortDescription><![CDATA[  Statement "f" calls this when it needs.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="args" type="Array">
                           <description><![CDATA[The arguments of sequence.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="onHit" fullname="org.si.cml.extensions:Actor/onHit" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Callback function from Actor.test() when the hit test is true. ]]></description>
                     <shortDescription><![CDATA[ Callback function from Actor.test() when the hit test is true.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="act" type="org.si.cml.extensions:Actor">
                           <classRef name="Actor" fullName="org.si.cml.extensions:Actor" packageName="org.si.cml.extensions" relativePath="Actor.html"/>
                        </param>
                     </params>
                  </method>
                  <method name="onNewObject" fullname="org.si.cml.extensions:Actor/onNewObject" accessLevel="public" result_type="org.si.cml:CMLObject" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[  Statement "n" calls this when it needs. Override this to define the new CMLObject created by "n" command.
          ]]></description>
                     <shortDescription><![CDATA[  Statement "n" calls this when it needs.]]></shortDescription>
                     <versions/>
                     <result type="org.si.cml:CMLObject">
                        <![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]>
                        <classRef name="CMLObject" fullName="org.si.cml:CMLObject" packageName="org.si.cml" relativePath="../../cml/CMLObject.html"/>
                     </result>
                     <params>
                        <param name="args" type="Array">
                           <description><![CDATA[The arguments of sequence.
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="onUpdate" fullname="org.si.cml.extensions:Actor/onUpdate" accessLevel="public" result_type="void" isFinal="false" isOverride="true" isStatic="false" inheritDoc="false">
                     <description><![CDATA[   Callback function from CMLObject.update(). This function is called after updating position. Override this to update own parameters.]]></description>
                     <shortDescription><![CDATA[   Callback function from CMLObject.update().]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
                  <method name="test" fullname="org.si.cml.extensions:Actor/test" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ Hit test of 2 instances. Each Actor.onHit() is called when hit test is success.
          ]]></description>
                     <shortDescription><![CDATA[ Hit test of 2 instances.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <sees>
                        <see href="ActorFactory.html#evalIDNumber" label="ActorFactory.evalIDNumber"/>
                     </sees>
                     <params>
                        <param name="evalID0" type="int">
                           <description><![CDATA[evaluation ID number of 1st target ActorFactory. Optimum for slower actor.
          ]]></description>
                        </param>
                        <param name="evalID1" type="int">
                           <description><![CDATA[evaluation ID number of 2nd target ActorFactory. Optimum for faster actor.
          ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="testf" fullname="org.si.cml.extensions:Actor/testf" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ Hit test of 2 instances, lazyer and faster. Each Actor.onHit() is called when hit test is success.
          ]]></description>
                     <shortDescription><![CDATA[ Hit test of 2 instances, lazyer and faster.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <sees>
                        <see href="ActorFactory.html#evalIDNumber" label="ActorFactory.evalIDNumber"/>
                     </sees>
                     <params>
                        <param name="evalID0" type="int">
                           <description><![CDATA[evaluation ID number of 1st target ActorFactory. 
          ]]></description>
                        </param>
                        <param name="evalID1" type="int">
                           <description><![CDATA[evaluation ID number of 2nd target ActorFactory. 
          ]]></description>
                        </param>
                     </params>
                  </method>
               </methods>
               <fields>
                  <field name="life" fullname="org.si.cml.extensions:Actor/life" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="1">
                     <description><![CDATA[ Life, you can use this as you like. ]]></description>
                     <shortDescription><![CDATA[ Life, you can use this as you like.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="size" fullname="org.si.cml.extensions:Actor/size" accessLevel="public" type="Number" isConst="false" isStatic="false" defaultValue="0">
                     <description><![CDATA[ Size to use in hit test ]]></description>
                     <shortDescription><![CDATA[ Size to use in hit test ]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="actorFactory" fullname="org.si.cml.extensions:Actor/actorFactory/get" accessLevel="public" isConst="false" isStatic="false" type="org.si.cml.extensions:ActorFactory" inheritDoc="false" only="read">
                     <description><![CDATA[ Factory class ]]></description>
                     <shortDescription><![CDATA[ Factory class ]]></shortDescription>
                     <versions/>
                     <classRef name="ActorFactory" fullName="org.si.cml.extensions:ActorFactory" packageName="org.si.cml.extensions" relativePath="../extensions/ActorFactory.html"/>
                  </field>
                  <field name="drawPriority" fullname="org.si.cml.extensions:Actor/drawPriority/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Set the drawing priority. -1 to reset as default priority ]]></description>
                     <shortDescription><![CDATA[ Set the drawing priority.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="evalEnabled" fullname="org.si.cml.extensions:Actor/evalEnabled/get" accessLevel="public" isConst="false" isStatic="false" type="Boolean" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Enable/disable the hit test. ]]></description>
                     <shortDescription><![CDATA[ Enable/disable the hit test.]]></shortDescription>
                     <versions/>
                     <customs>
                        <default><![CDATA[true ]]></default>
                     </customs>
                  </field>
                  <field name="evalIDNumber" fullname="org.si.cml.extensions:Actor/evalIDNumber/get" accessLevel="public" isConst="false" isStatic="false" type="int" inheritDoc="false" only="read-write">
                     <description><![CDATA[ Set the devaluation ID number. -1 to reset as default priority ]]></description>
                     <shortDescription><![CDATA[ Set the devaluation ID number.]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
         </classes>
      </asPackage>
      <asPackage name="org.si.cml.core">
         <classes>
            <asClass name="CMLBarrage" type="class" fullname="org.si.cml.core:CMLBarrage" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.cml.core" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ The implement of bm/bs/br commands.
      <p>
      USAGE<br/>
      1) Get the barrage setting of fiber by CMLFiber.barrage.<br/>
      2) CMLBarrage.clear(); sets the parameter "bm1,0,0,0".<br/>
      3) CMLBarrage.append[Multiple|Sequence|Random](); multiply new barrage shape.
      </p>
     ]]></description>
               <shortDescription><![CDATA[ The implement of bm/bs/br commands.]]></shortDescription>
               <versions/>
               <author/>
               <sees>
                  <see href="" label="CMLFiber.barrage"/>
                  <see href="CMLBarrage.html#clear();" label="CMLBarrage.clear();"/>
                  <see href="CMLBarrage.html#appendMultiple()" label="CMLBarrage.appendMultiple()"/>
                  <see href="CMLBarrage.html#appendSequence()" label="CMLBarrage.appendSequence()"/>
                  <see href="CMLBarrage.html#appendRandom()" label="CMLBarrage.appendRandom()"/>
               </sees>
               <asAncestors/>
               <constructors>
                  <constructor name="CMLBarrage" fullname="org.si.cml.core:CMLBarrage/org.si.cml.core:CMLBarrage" accessLevel="public" result_type="*" inheritDoc="false">
                     <description><![CDATA[ Constructor.
          Usually you get CMLBarrage instance by CMLFiber.barrage.
          ]]></description>
                     <shortDescription><![CDATA[ Constructor.]]></shortDescription>
                     <versions/>
                     <result type="*"/>
                     <sees>
                        <see href="" label="CMLFiber.barrage"/>
                     </sees>
                     <customs>
                        <default><![CDATA[bm1,0,0,0
          ]]></default>
                     </customs>
                  </constructor>
               </constructors>
               <methods>
                  <method name="appendCopyOf" fullname="org.si.cml.core:CMLBarrage/appendCopyOf" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Append copy of other CLMBarrage.
          ]]></description>
                     <shortDescription><![CDATA[ Append copy of other CLMBarrage.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="src" type="org.si.cml.core:CMLBarrage">
                           <classRef name="CMLBarrage" fullName="org.si.cml.core:CMLBarrage" packageName="org.si.cml.core" relativePath="CMLBarrage.html"/>
                           <description><![CDATA[source.
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="appendMultiple" fullname="org.si.cml.core:CMLBarrage/appendMultiple" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Append append new element "bm"
          ]]></description>
                     <shortDescription><![CDATA[ Append append new element "bm"
          ]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="count_" type="int">
                           <description><![CDATA[bullet count.
          ]]></description>
                        </param>
                        <param name="angle_" type="Number">
                           <description><![CDATA[center angle of fan-shaped barrage.
          ]]></description>
                        </param>
                        <param name="speed_" type="Number">
                           <description><![CDATA[speed difference of barrage.
          ]]></description>
                        </param>
                        <param name="interval_" type="Number">
                           <description><![CDATA[rapid interval frame.
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="appendRandom" fullname="org.si.cml.core:CMLBarrage/appendRandom" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Append append new element "br"
          ]]></description>
                     <shortDescription><![CDATA[ Append append new element "br"
          ]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="count_" type="int">
                           <description><![CDATA[bullet count.
          ]]></description>
                        </param>
                        <param name="angle_" type="Number">
                           <description><![CDATA[center angle of fan-shaped barrage.
          ]]></description>
                        </param>
                        <param name="speed_" type="Number">
                           <description><![CDATA[speed difference of barrage.
          ]]></description>
                        </param>
                        <param name="interval_" type="Number">
                           <description><![CDATA[rapid interval frame.
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="appendSequence" fullname="org.si.cml.core:CMLBarrage/appendSequence" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Append append new element "bs"
          ]]></description>
                     <shortDescription><![CDATA[ Append append new element "bs"
          ]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                     <params>
                        <param name="count_" type="int">
                           <description><![CDATA[bullet count.
          ]]></description>
                        </param>
                        <param name="angle_" type="Number">
                           <description><![CDATA[center angle of fan-shaped barrage.
          ]]></description>
                        </param>
                        <param name="speed_" type="Number">
                           <description><![CDATA[speed difference of barrage.
          ]]></description>
                        </param>
                        <param name="interval_" type="Number">
                           <description><![CDATA[rapid interval frame.
         ]]></description>
                        </param>
                     </params>
                  </method>
                  <method name="clear" fullname="org.si.cml.core:CMLBarrage/clear" accessLevel="public" result_type="void" isFinal="false" isOverride="false" isStatic="false" inheritDoc="false">
                     <description><![CDATA[ Clear all barrage setting. 
          Reset to "bm1,0,0,0".
         ]]></description>
                     <shortDescription><![CDATA[ Clear all barrage setting.]]></shortDescription>
                     <versions/>
                     <result type="void"/>
                  </method>
               </methods>
            </asClass>
            <asClass name="BMLParser" type="class" fullname="org.si.cml.core:BMLParser" accessLevel="public" isFinal="false" isDynamic="false" packageName="org.si.cml.core" path="" relativePath="../" href="" taghref="" inheritDoc="false">
               <description><![CDATA[ You can use the XML object of BulletML in CMLSequence constructor directly, So this class is only for a translation purpose.
      ]]></description>
               <shortDescription><![CDATA[ You can use the XML object of BulletML in CMLSequence constructor directly, So this class is only for a translation purpose.]]></shortDescription>
               <versions/>
               <author/>
               <example><![CDATA[<listing version="3.0">
    // Create CMLSequence from bulletML directly.
    var seq:CMLSequence = new CMLSequence(bulletML as XML);
    
    // You can refer the translation result of bulletML if you need.
    trace(BMLParser.cmlString);
    
     ...
    
    // "enemy" is an instance of CMLObject. You can execute bulletML from CMLObject.execute().
    enemy.execute(seq);
</listing>
      ]]></example>
               <sees>
                  <see href="" label="CMLSequence.CMLSequence()"/>
                  <see href="BMLParser.html#cmlString" label="BMLParser.cmlString"/>
               </sees>
               <asAncestors/>
               <methods>
                  <method name="translate" fullname="org.si.cml.core:BMLParser/translate" accessLevel="public" result_type="String" isFinal="false" isOverride="false" isStatic="true" inheritDoc="false">
                     <description><![CDATA[ Translate BulletML to CannonML. 
        ]]></description>
                     <shortDescription><![CDATA[ Translate BulletML to CannonML.]]></shortDescription>
                     <versions/>
                     <result type="String"><![CDATA[cannonML string. Returns "" when there are no <bulletml>s in XML.
        ]]></result>
                     <params>
                        <param name="bulletML" type="XML">
                           <description><![CDATA[bulletML XML of BulletML
        ]]></description>
                        </param>
                     </params>
                  </method>
               </methods>
               <fields>
                  <field name="bulletMLNameSpace" fullname="org.si.cml.core:BMLParser/bulletMLNameSpace" accessLevel="public" type="Namespace" isConst="false" isStatic="true" defaultValue="">
                     <description><![CDATA[ The namespace of bulletML, xmlnx='http://www.asahi-net.or.jp/~cs8k-cyu/bulletml'. ]]></description>
                     <shortDescription><![CDATA[ The namespace of bulletML, xmlnx='http://www.asahi-net.or.jp/~cs8k-cyu/bulletml'.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="cmlString" fullname="org.si.cml.core:BMLParser/cmlString/get" accessLevel="public" isConst="false" isStatic="true" type="String" inheritDoc="false" only="read">
                     <description><![CDATA[ CannonML string after translate() and constructor of CMLSequence. 
          You can pick up the cml string after "new CMLSequence(bulletML as XML)".
         ]]></description>
                     <shortDescription><![CDATA[ CannonML string after translate() and constructor of CMLSequence.]]></shortDescription>
                     <versions/>
                  </field>
                  <field name="erroredXML" fullname="org.si.cml.core:BMLParser/erroredXML/get" accessLevel="public" isConst="false" isStatic="true" type="XML" inheritDoc="false" only="read">
                     <description><![CDATA[ Errored XML. Returns null when there are no error. ]]></description>
                     <shortDescription><![CDATA[ Errored XML.]]></shortDescription>
                     <versions/>
                  </field>
               </fields>
            </asClass>
         </classes>
      </asPackage>
   </packages>
</asdoc>