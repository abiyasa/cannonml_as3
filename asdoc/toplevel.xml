<asdoc>

<classRec name='CannonML' fullname='org.si.cml:CannonML' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\CannonML.as' namespace='org.si.cml' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ Cannon ML infomation ]]></description>
</classRec>
<field name='VERSION' fullname='org.si.cml:CannonML/VERSION' type='String' isStatic='true' isConst='true' defaultValue='0.3.1' >
<description><![CDATA[ Version information ]]></description>
</field>
<classRec name='CMLObject' fullname='org.si.cml:CMLObject' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\CMLObject.as' namespace='org.si.cml' access='public' baseclass='org.si.cml.core:CMLListElem' isFinal='false' isDynamic='false' >
<description><![CDATA[ <b>Basic class for all objects.</b>
     ]]></description>
<example><![CDATA[0) All classes of an object are an extension of CMLObject.<br/>
Override callback functions onCreate(), onDestroy(), onUpdate(), onNewObject() and onFireObject().
<listing version="3.0">
// Enemy class
class Enemy extends CMLObject
{
    ...
    
    // for initializing
    override public function onCreate() : void
    {
        _animationCounter = 0;
    }
    
    // for finalizing
    override public function onDestroy() : void
    {
        // destructionStatus=1 means destruction (as you like), create explosion particles.
        if (destructionStatus == 1) _createExplosion();
    }
    
    // for updating on each frame
    override public function onUpdate() : void
    {
        // Increase animation counter.
        if (++_animationCounter == 100) _animationCounter = 0;
        
        // Drawing
        _drawEnemy(this);
    }

    // for new object created by "n" command
    override public function onNewObject(args:Array) : CMLObject
    {
        return new Enemy();
    }
    
    // for new object created by "f" command
    override public function onFireObject(args:Array) : CMLObject
    {
        return new Bullet();
    }

    ...
}


class Bullet extends CMLObject
{
    ...
}


class Player extends CMLObject
{
    ...
}


class Shot extends CMLObject
{
    ...
}
</listing>
]]></example>
<example><![CDATA[1) Call the CMLObject.initialize() function first of all. 
<listing version="3.0">
// 1st argument specifies scrolling direction (set true for vertical, false for horizontal).
CMLObject.initialize(true);
</listing>
]]></example>
<example><![CDATA[2) Create player object and marking it as "default target".
<listing version="3.0">
var player:CMLObject = new Player();    // Player class is your extention of CMLObject.
player.setAsDefaultTarget();            // Default target is the object to fire.
</listing>
]]></example>
<example><![CDATA[3) Create a new CMLSequence from cannonML or bulletML, and call create() and execute().
<listing version="3.0">
// Create stage sequence from "String of cannonML" or "XML of bulletML".
var stageSequence:CMLSequence = new CMLSequence(String or XML);

 ...

var root:Enemy = new Enemy();   // create one enemy as "root enemy" (usually transparent)
root.create(x, y);              // Create root enemy on the cml field.
root.execute(stageSequence);    // Execute stage sequence on root enemy.
</listing>
]]></example>
<example><![CDATA[4) Call CMLObject.update() once for each frame.
<listing version="3.0">
addEventListener(Event.ENTER_FRAME, _onEnterFrame);

function _onEnterFrame(event:Event) : void {
    CMLObject.update();
}
</listing>
     ]]></example>
<see><![CDATA[CMLObject#initialize()
     ]]></see>
<see><![CDATA[CMLObject#update()
     ]]></see>
<see><![CDATA[CMLObject#setAsDefaultTarget()
     ]]></see>
<see><![CDATA[CMLObject#execute()
     ]]></see>
<see><![CDATA[CMLObject#create()
     ]]></see>
<see><![CDATA[CMLObject#root
     ]]></see>
<see><![CDATA[CMLSequence
     ]]></see>
<see><![CDATA[CMLFiber
]]></see>
</classRec>
<method name='CMLObject' fullname='org.si.cml:CMLObject/CMLObject' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor. ]]></description>
</method>
<method name='_finalize' fullname='org.si.cml:CMLObject/_finalize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_getAx' fullname='org.si.cml:CMLObject/_cml_internal:_getAx' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_getAy' fullname='org.si.cml:CMLObject/_cml_internal:_getAy' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_getX' fullname='org.si.cml:CMLObject/_cml_internal:_getX' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_getY' fullname='org.si.cml:CMLObject/_cml_internal:_getY' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_initialize' fullname='org.si.cml:CMLObject/_initialize' isStatic='false' isFinal='false' isOverride='false'  param_names='parent_;isPart_;access_id_;x_;y_;vx_;vy_;head_' param_types='org.si.cml:CMLObject;Boolean;int;Number;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_normalizeHead' fullname='org.si.cml:CMLObject/private:_normalizeHead' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='calcAbsPosition' fullname='org.si.cml:CMLObject/protected:calcAbsPosition' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Calculate absolute position when the isPart is true. 
          The protected function _motion_parts() is a typical usage of this. 
         ]]></description>
</method>
<method name='calcRelatedPosition' fullname='org.si.cml:CMLObject/protected:calcRelatedPosition' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Calculate parent related position from absolute position.
         ]]></description>
</method>
<method name='changeParent' fullname='org.si.cml:CMLObject/changeParent' isStatic='false' isFinal='false' isOverride='false'  param_names='parent_;isPart_;access_id_' param_types='org.si.cml:CMLObject;Boolean;int' param_defaults='null;false;unknown' result_type='void'>
<description><![CDATA[ Change parent. ]]></description>
</method>
<method name='countAllIDedChildren' fullname='org.si.cml:CMLObject/countAllIDedChildren' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Count all children with access id. 
          ]]></description>
<return><![CDATA[The count of child objects with access id.
          ]]></return>
<see><![CDATA[CMLObject#create()
         ]]></see>
</method>
<method name='countIDedChildren' fullname='org.si.cml:CMLObject/countIDedChildren' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[ Count children with specifyed id.
          ]]></description>
<param><![CDATA[id Access id specifyed in create() or "n command.
          ]]></param>
<return><![CDATA[The count of child objects with specifyed id.
          ]]></return>
<see><![CDATA[CMLObject#create()
         ]]></see>
</method>
<method name='create' fullname='org.si.cml:CMLObject/create' isStatic='false' isFinal='false' isOverride='false'  param_names='x_;y_;parent_;isPart_;access_id_' param_types='Number;Number;org.si.cml:CMLObject;Boolean;int' param_defaults='undefined;undefined;null;false;unknown' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Create new object on the CML stage.
          ]]></description>
<param><![CDATA[x_         X value of this object on a stage or parent(if its a part of parent).
          ]]></param>
<param><![CDATA[y_         Y value of this object on a stage or parent(if its a part of parent).
          ]]></param>
<param><![CDATA[parent_    The instance of parent object. Pass null to set this object as a child of root.
          ]]></param>
<param><![CDATA[isPart_    True to set this object as a part of parent.
          ]]></param>
<param><![CDATA[access_id_ Access ID from parent.
          ]]></param>
<return><![CDATA[this instance.
         ]]></return>
</method>
<method name='destroy' fullname='org.si.cml:CMLObject/destroy' isStatic='false' isFinal='false' isOverride='false'  param_names='status' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Destroy this object. The onDestroy() is called when the next CMLObject.update().
          ]]></description>
<param><![CDATA[status A value of the destruction status. This must be greater than or equal to 0. You can refer this by CMLObject.destructionStatus in onDestroy().
          ]]></param>
<see><![CDATA[CMLObject#destructionStatus
          ]]></see>
<see><![CDATA[CMLObject#onDestroy()
         ]]></see>
</method>
<method name='destroyAll' fullname='org.si.cml:CMLObject/destroyAll' isStatic='true' isFinal='false' isOverride='false'  param_names='status' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Destroy all active objects except for root. This function <b>must not</b> be called from onDestroy().
          ]]></description>
<param><![CDATA[status A value of the destruction status. This must be greater than or equal to 0. You can refer this by destructionStatus in onDestroy(). 
          ]]></param>
<see><![CDATA[CMLObject#destructionStatus
          ]]></see>
<see><![CDATA[CMLObject#onDestroy()
         ]]></see>
</method>
<method name='execute' fullname='org.si.cml:CMLObject/execute' isStatic='false' isFinal='false' isOverride='false'  param_names='seq;args;invertFlag' param_types='org.si.cml:CMLSequence;Array;uint' param_defaults='undefined;null;0' result_type='org.si.cml:CMLFiber'>
<description><![CDATA[ Execute a sequence and create a new fiber.
          ]]></description>
<param><![CDATA[seq The sequence to execute.
          ]]></param>
<param><![CDATA[args The array of arguments to execute sequence.
          ]]></param>
<param><![CDATA[invertFlag The flag to invert execution same as 'm' command.
          ]]></param>
<return><![CDATA[Instance of fiber that execute the sequence.
         ]]></return>
</method>
<method name='findAllChildren' fullname='org.si.cml:CMLObject/findAllChildren' isStatic='false' isFinal='false' isOverride='false'  param_names='id;func' param_types='int;Function' param_defaults='undefined;undefined' result_type='int'>
<description><![CDATA[ Find all child and callback. <br/>
          ]]></description>
<param><![CDATA[id Access id specifyed in create() or "n command.
          ]]></param>
<param><![CDATA[func The call back function to operate objects. The type is function(obj:CMLObject):Boolean. Stop finding when this returns true.
          ]]></param>
<return><![CDATA[The count of the executions of call back function.
          ]]></return>
<see><![CDATA[CMLObject#create()
         ]]></see>
</method>
<method name='findAllParts' fullname='org.si.cml:CMLObject/findAllParts' isStatic='false' isFinal='false' isOverride='false'  param_names='func' param_types='Function' param_defaults='undefined' result_type='int'>
<description><![CDATA[ Find all parts and callback. <br/>
          ]]></description>
<param><![CDATA[func The call back function to operate objects. The type is function(obj:CMLObject):Boolean. Stop finding when this returns true.
          ]]></param>
<return><![CDATA[The count of the executions of call back function.
          ]]></return>
<see><![CDATA[CMLObject#create()
         ]]></see>
</method>
<method name='findChild' fullname='org.si.cml:CMLObject/findChild' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='int' param_defaults='undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Find first child object with specifyed id. 
          ]]></description>
<param><![CDATA[id Access id specifyed in create() or "n command.
          ]]></param>
<return><![CDATA[The first child object with specifyed id. Return null when the seach was failed.
          ]]></return>
<see><![CDATA[CMLObject#create()
         ]]></see>
</method>
<method name='getAimingAngle' fullname='org.si.cml:CMLObject/getAimingAngle' isStatic='false' isFinal='false' isOverride='false'  param_names='target_;offx;offy' param_types='org.si.cml:CMLObject;Number;Number' param_defaults='undefined;0;0' result_type='Number'>
<description><![CDATA[ Calculate aiming angle to another object.
         ]]></description>
<param><![CDATA[target_ Another object to calculate angle.
         ]]></param>
<param><![CDATA[offx X position offset to calculate angle.
         ]]></param>
<param><![CDATA[offy Y position offset to calculate angle.
         ]]></param>
<return><![CDATA[Angle.
         ]]></return>
</method>
<method name='getDistance' fullname='org.si.cml:CMLObject/getDistance' isStatic='false' isFinal='false' isOverride='false'  param_names='tgt' param_types='org.si.cml:CMLObject' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ Calculate distance from another object aproximately. The distance is calculated as an octagnal.
         ]]></description>
<param><![CDATA[tgt Another object to calculate distance.
         ]]></param>
<return><![CDATA[Rough distance.
         ]]></return>
</method>
<method name='halt' fullname='org.si.cml:CMLObject/halt' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Destroy all fibers of this object. This function is slow.
          If you want to execute faster, keep returned CMLFiber of CMLObject.execute() and call CMLFiber.destroy() wherever possible.
          ]]></description>
<see><![CDATA[CMLObject#execute()
          ]]></see>
<see><![CDATA[CMLFiber#destroy()
         ]]></see>
</method>
<method name='initialize' fullname='org.si.cml:CMLObject/initialize' isStatic='true' isFinal='false' isOverride='false'  param_names='vertical_' param_types='Boolean' param_defaults='true' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ <b>Call this function first of all</b>.
          ]]></description>
<param><![CDATA[vertical_ Flag of scrolling direction
          ]]></param>
<return><![CDATA[The root object.
         ]]></return>
</method>
<method name='onCreate' fullname='org.si.cml:CMLObject/onCreate' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Callback function on create. Override this to initialize.]]></description>
</method>
<method name='onDestroy' fullname='org.si.cml:CMLObject/onDestroy' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Callback function on destroy. Override this to finalize.
          ]]></description>
<see><![CDATA[CMLObject#destroy()
          ]]></see>
<see><![CDATA[CMLObject#destroyAll()
         ]]></see>
</method>
<method name='onFireObject' fullname='org.si.cml:CMLObject/onFireObject' isStatic='false' isFinal='false' isOverride='false'  param_names='args' param_types='Array' param_defaults='undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Statement "f" calls this when it needs. Override this to define the new CMLObject created by "f" command.
          ]]></description>
<param><![CDATA[args The arguments of sequence.
          ]]></param>
<return><![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]></return>
</method>
<method name='onNewObject' fullname='org.si.cml:CMLObject/onNewObject' isStatic='false' isFinal='false' isOverride='false'  param_names='args' param_types='Array' param_defaults='undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Statement "n" calls this when it needs. Override this to define the new CMLObject created by "n" command.
          ]]></description>
<param><![CDATA[args The arguments of sequence.
         ]]></param>
<return><![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]></return>
</method>
<method name='onUpdate' fullname='org.si.cml:CMLObject/onUpdate' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Callback function from CMLObject.update(). This function is called after updating position. Override this to update own parameters.]]></description>
</method>
<method name='rand' fullname='org.si.cml:CMLObject/rand' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The return value is from CMLObject.funcRand. Call CMLObject.funcRand internally.
          ]]></description>
<return><![CDATA[The random number between 0-1. 
          ]]></return>
<see><![CDATA[CMLObject#funcRand
         ]]></see>
</method>
<method name='reset' fullname='org.si.cml:CMLObject/reset' isStatic='false' isFinal='false' isOverride='false'  param_names='x_;y_' param_types='Number;Number' param_defaults='undefined;undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Reset position, velocity, accelaration, interpolation, motion type and rotation.
         ]]></description>
</method>
<method name='rotateHead' fullname='org.si.cml:CMLObject/protected:rotateHead' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Rotate haed in 1 frame, if rotd > 0. The _motion() is a typical usage exapmle. ]]></description>
<see><![CDATA[CMLObject#_motion()]]></see>
</method>
<method name='setAccelaration' fullname='org.si.cml:CMLObject/setAccelaration' isStatic='false' isFinal='false' isOverride='false'  param_names='ax_;ay_;time_' param_types='Number;Number;int' param_defaults='undefined;undefined;0' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Set accelaration.
          ]]></description>
<param><![CDATA[ax_ X value of accelaration.
          ]]></param>
<param><![CDATA[ay_ Y value of accelaration.
          ]]></param>
<param><![CDATA[time_ Frames to stop accelarate. 0 means not to stop.
          ]]></param>
<return><![CDATA[this object
         ]]></return>
</method>
<method name='setAsDefaultTarget' fullname='org.si.cml:CMLObject/setAsDefaultTarget' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Set as a default target object. A default target is the object to target from all objects at default, usually player is as. 
          ]]></description>
<return><![CDATA[this object
         ]]></return>
</method>
<method name='setChangeDirection' fullname='org.si.cml:CMLObject/setChangeDirection' isStatic='false' isFinal='false' isOverride='false'  param_names='dir;term;rmax;shortest_rot' param_types='Number;int;Number;Boolean' param_defaults='undefined;undefined;undefined;true' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ &lt;changeDirection type='absolute'&gt; of bulletML.
          ]]></description>
<param><![CDATA[dir Direction to change.
          ]]></param>
<param><![CDATA[term Frames to change direction.
          ]]></param>
<param><![CDATA[rmax Maxmum speed of rotation [degrees/frame].
          ]]></param>
<param><![CDATA[shortest_rot Flag to rotate on shortest rotation.
          ]]></param>
<return><![CDATA[this object
         ]]></return>
</method>
<method name='setChangeSpeed' fullname='org.si.cml:CMLObject/setChangeSpeed' isStatic='false' isFinal='false' isOverride='false'  param_names='spd;term' param_types='Number;int' param_defaults='undefined;0' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ &lt;changeSpeed type='absolute'&gt; of bulletML.
          ]]></description>
<param><![CDATA[spd Speed to change.
          ]]></param>
<param><![CDATA[term Frames to change speed.
          ]]></param>
<return><![CDATA[this object
         ]]></return>
</method>
<method name='setConstantRotation' fullname='org.si.cml:CMLObject/setConstantRotation' isStatic='false' isFinal='false' isOverride='false'  param_names='end_angle;term;rmax;isShortestRotation' param_types='Number;Number;Number;Boolean' param_defaults='undefined;0;1;true' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Set constant rotation. You can specify the maximum speed.
          ]]></description>
<param><![CDATA[end_angle Final angle when the rotation finished, based on scrolling direction.
          ]]></param>
<param><![CDATA[term Frames to rotate.
          ]]></param>
<param><![CDATA[rmax Maximum speed of rotation [degrees/frame].
          ]]></param>
<param><![CDATA[isShortestRotation Rotate with shortest rotation or not.
          ]]></param>
<return><![CDATA[this object
         ]]></return>
</method>
<method name='setGlobalRankRange' fullname='org.si.cml:CMLObject/setGlobalRankRange' isStatic='true' isFinal='false' isOverride='false'  param_names='min;max' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ Set the range of globalRank. The global rank value is limited in this range. ]]></description>
</method>
<method name='setGravity' fullname='org.si.cml:CMLObject/setGravity' isStatic='false' isFinal='false' isOverride='false'  param_names='atr_a;atr_b;term' param_types='Number;Number;int' param_defaults='undefined;undefined;0' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Set gravity motion.
          <p>
          <b>This function is not available for a part of parent.</b>
          After this function, the CMLObject.setPosition() sets the gravity center.
          The calculation of the motion is below.<br/>
          [accelaration] = [distance] [atr_a] / 100 - [velocity] [atr_b] / 100<br/>
          </p>
          ]]></description>
<param><![CDATA[atr_a Attracting parameter a[%]. Ratio of attracting force.
          ]]></param>
<param><![CDATA[atr_b Attracting parameter b[%]. Ratio of air fliction.
          ]]></param>
<param><![CDATA[term Frames to enable attracting force.
          ]]></param>
<return><![CDATA[this object
          ]]></return>
<see><![CDATA[CMLObject#setPosition
         ]]></see>
</method>
<method name='setInterpolation' fullname='org.si.cml:CMLObject/setInterpolation' isStatic='false' isFinal='false' isOverride='false'  param_names='x_;y_;vx_;vy_;term_' param_types='Number;Number;Number;Number;int' param_defaults='undefined;undefined;undefined;undefined;0' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Set interpolating motion.
          ]]></description>
<param><![CDATA[x_ X value of position.
          ]]></param>
<param><![CDATA[y_ Y value of position.
          ]]></param>
<param><![CDATA[vx_ X value of velocity.
          ]]></param>
<param><![CDATA[vy_ Y value of velocity.
          ]]></param>
<param><![CDATA[term_ Frames for tweening with bezier interpolation.
          ]]></param>
<return><![CDATA[this object
         ]]></return>
</method>
<method name='setPosition' fullname='org.si.cml:CMLObject/setPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='x_;y_;term_' param_types='Number;Number;int' param_defaults='undefined;undefined;0' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Set position.
          ]]></description>
<param><![CDATA[x_ X value of position.
          ]]></param>
<param><![CDATA[y_ Y value of position.
          ]]></param>
<param><![CDATA[term_ Frames for tweening with bezier interpolation.
          ]]></param>
<return><![CDATA[this object
         ]]></return>
</method>
<method name='setRotation' fullname='org.si.cml:CMLObject/setRotation' isStatic='false' isFinal='false' isOverride='false'  param_names='end_angle;term;start_t;end_t;isShortestRotation' param_types='Number;Number;Number;Number;Boolean' param_defaults='undefined;0;1;1;true' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Set rotation. You can specify the first and last speed.
          ]]></description>
<param><![CDATA[end_angle Final angle when the rotation finished, based on scrolling direction.
          ]]></param>
<param><![CDATA[term Frames to rotate.
          ]]></param>
<param><![CDATA[start_t Ratio of first rotating speed. The value of 1 means the speed of a constant rotation.
          ]]></param>
<param><![CDATA[end_t Ratio of last rotating speed. The value of 1 means the speed of a constant rotation.
          ]]></param>
<param><![CDATA[isShortestRotation Rotate with shortest rotation or not.
          ]]></param>
<return><![CDATA[this object
         ]]></return>
</method>
<method name='setVelocity' fullname='org.si.cml:CMLObject/setVelocity' isStatic='false' isFinal='false' isOverride='false'  param_names='vx_;vy_;term_' param_types='Number;Number;int' param_defaults='undefined;undefined;0' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ Set velocity.
          ]]></description>
<param><![CDATA[vx_ X value of velocity.
          ]]></param>
<param><![CDATA[vy_ Y value of velocity.
          ]]></param>
<param><![CDATA[term_ Frames for tweening with bezier interpolation.
          ]]></param>
<return><![CDATA[this object
         ]]></return>
</method>
<method name='transformGlobalToLocal' fullname='org.si.cml:CMLObject/transformGlobalToLocal' isStatic='false' isFinal='false' isOverride='false'  param_names='global' param_types='flash.geom:Point' param_defaults='undefined' result_type='flash.geom:Point'>
<description><![CDATA[ transform global coordinate to object local coordinate
          ]]></description>
<param><![CDATA[point on global coordinate. this instance is overwritten inside.
          ]]></param>
<return><![CDATA[point on local coordinate. this instance is that you passed as argument.
         ]]></return>
</method>
<method name='transformLocalToGlobal' fullname='org.si.cml:CMLObject/transformLocalToGlobal' isStatic='false' isFinal='false' isOverride='false'  param_names='local' param_types='flash.geom:Point' param_defaults='undefined' result_type='flash.geom:Point'>
<description><![CDATA[ transform object local coordinate to global coordinate 
          ]]></description>
<param><![CDATA[point on local coordinate. this instance is overwritten inside.
          ]]></param>
<return><![CDATA[point on global coordinate. this instance is that you passed as argument.
         ]]></return>
</method>
<method name='update' fullname='org.si.cml:CMLObject/update' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ <b>Call this function for each frame</b>. This function calls all CMLObject.onUpdate()s. ]]></description>
</method>
<method name='angle' fullname='org.si.cml:CMLObject/angle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Angle of this object, scrolling direction is 0 degree. ]]></description>
</method>
<method name='angleAccel' fullname='org.si.cml:CMLObject/angleAccel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Calculate direction of accelaration. ]]></description>
</method>
<method name='angleOnStage' fullname='org.si.cml:CMLObject/angleOnStage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Angle of this object, The direction(1,0) is 0 degree. ]]></description>
</method>
<method name='angleParentOnStage' fullname='org.si.cml:CMLObject/angleParentOnStage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Angle of this parent object, scrolling direction is 0 degree. ]]></description>
</method>
<method name='anglePosition' fullname='org.si.cml:CMLObject/anglePosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Calculate direction of position from origin. ]]></description>
</method>
<method name='angleVelocity' fullname='org.si.cml:CMLObject/angleVelocity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Calculate direction of velocity. ]]></description>
</method>
<method name='destructionStatus' fullname='org.si.cml:CMLObject/destructionStatus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Destruction status. You can refer the argument of destroy() or the ']]></description>
<see><![CDATA[CMLObject#onDestroy()
          ]]></see>
<see><![CDATA[CMLObject#destroy()
          ]]></see>
<see><![CDATA[CMLObject#destroyAll()
         ]]></see>
<ko'><![CDATA[command. Returns -1 when the object isn't destroyed.
          ]]></ko'>
</method>
<method name='frameRateRatio' fullname='org.si.cml:CMLObject/frameRateRatio/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Value of (frame rate to calculate speed) / (screen frame rate). ]]></description>
</method>
<method name='funcRand' fullname='org.si.cml:CMLObject/funcRand/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[ Function for "$?/$??" variable, The type is function():Number. ]]></description>
<default><![CDATA[Math.random() ]]></default>
</method>
<method name='globalRank' fullname='org.si.cml:CMLObject/globalRank/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Variable for "$r" ]]></description>
</method>
<method name='hasParts' fullname='org.si.cml:CMLObject/hasParts/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Does this object have another object as a part ? ]]></description>
</method>
<method name='id' fullname='org.si.cml:CMLObject/id/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[ Construction ID, this value changes when the object is destroyed.
         ]]></description>
<example><![CDATA[If you want to know the object is available or not, check the id.
<listing version="3.0">
target_object_id = target_object.id;        // keep the target's id value.
...
if (target_object_id != target_object.id) { // if the id value is different,
    target_object = null;                   // target object was destroyed.
}
</listing>
         ]]></example>
</method>
<method name='isActive' fullname='org.si.cml:CMLObject/isActive/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Is this object on stage ? ]]></description>
</method>
<method name='isPart' fullname='org.si.cml:CMLObject/isPart/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Is this object a part of its parent ? The part object's position is relative to parent's position. ]]></description>
</method>
<method name='motion_type' fullname='org.si.cml:CMLObject/motion_type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[ Motion type. 
         ]]></description>
<see><![CDATA[CMLObject#MT_CONST
         ]]></see>
<see><![CDATA[CMLObject#MT_ACCEL
         ]]></see>
<see><![CDATA[CMLObject#MT_INTERPOL
         ]]></see>
<see><![CDATA[CMLObject#MT_BULLETML
         ]]></see>
<see><![CDATA[CMLObject#MT_GRAVITY
         ]]></see>
</method>
<method name='parent' fullname='org.si.cml:CMLObject/parent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml:CMLObject'>
<description><![CDATA[ The CMLObject that creates this object. Returns root when the parent was destroyed. ]]></description>
</method>
<method name='rank' fullname='org.si.cml:CMLObject/rank/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ You can define the "$r" value for each object by overriding this property, Ussualy returns CMLObject.globalRank. ]]></description>
<see><![CDATA[CMLObject#globalRank ]]></see>
</method>
<method name='relatedX' fullname='org.si.cml:CMLObject/relatedX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The x value of position parent related ]]></description>
</method>
<method name='relatedY' fullname='org.si.cml:CMLObject/relatedY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ The y value of position parent related ]]></description>
</method>
<method name='root' fullname='org.si.cml:CMLObject/root/get' isStatic='true' isFinal='false' isOverride='false'  result_type='org.si.cml:CMLObject'>
<description><![CDATA[ root object is the default parent of all CMLObjects that are created with the argument of parent=null. ]]></description>
</method>
<method name='scrollAngle' fullname='org.si.cml:CMLObject/scrollAngle/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Scrolling angle (vertical=-90, horizontal=180). ]]></description>
</method>
<method name='velocity' fullname='org.si.cml:CMLObject/velocity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Absolute value of velocity. ]]></description>
</method>
<method name='vertical' fullname='org.si.cml:CMLObject/vertical/get' isStatic='true' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Flag for scrolling direction (vertical=1, horizontal=0). ]]></description>
</method>
<method name='angle' fullname='org.si.cml:CMLObject/angle/set' isStatic='false' isFinal='false' isOverride='false'  param_names='ang' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='angleOnStage' fullname='org.si.cml:CMLObject/angleOnStage/set' isStatic='false' isFinal='false' isOverride='false'  param_names='ang' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='frameRateRatio' fullname='org.si.cml:CMLObject/frameRateRatio/set' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='funcRand' fullname='org.si.cml:CMLObject/funcRand/set' isStatic='true' isFinal='false' isOverride='false'  param_names='func' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='globalRank' fullname='org.si.cml:CMLObject/globalRank/set' isStatic='true' isFinal='false' isOverride='false'  param_names='r' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='rank' fullname='org.si.cml:CMLObject/rank/set' isStatic='false' isFinal='false' isOverride='false'  param_names='r' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='velocity' fullname='org.si.cml:CMLObject/velocity/set' isStatic='false' isFinal='false' isOverride='false'  param_names='vel' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='vertical' fullname='org.si.cml:CMLObject/vertical/set' isStatic='true' isFinal='false' isOverride='false'  param_names='v' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<field name='ID_NOT_SPECIFYED' fullname='org.si.cml:CMLObject/_cml_internal:ID_NOT_SPECIFYED' type='int' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='MT_ACCEL' fullname='org.si.cml:CMLObject/MT_ACCEL' type='uint' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[ Number for CMLObject.motion_type, Accelarating motion. ]]></description>
</field>
<field name='MT_BULLETML' fullname='org.si.cml:CMLObject/MT_BULLETML' type='uint' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion. ]]></description>
</field>
<field name='MT_CONST' fullname='org.si.cml:CMLObject/MT_CONST' type='uint' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ Number for CMLObject.motion_type, Linear motion. ]]></description>
</field>
<field name='MT_GRAVITY' fullname='org.si.cml:CMLObject/MT_GRAVITY' type='uint' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[ Number for CMLObject.motion_type, Gravity motion. ]]></description>
</field>
<field name='MT_INTERPOL' fullname='org.si.cml:CMLObject/MT_INTERPOL' type='uint' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion. ]]></description>
</field>
<field name='MT_PART_ACCEL' fullname='org.si.cml:CMLObject/MT_PART_ACCEL' type='uint' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ Number for CMLObject.motion_type, Accelarating motion of parts. ]]></description>
</field>
<field name='MT_PART_BULLETML' fullname='org.si.cml:CMLObject/MT_PART_BULLETML' type='uint' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ Number for CMLObject.motion_type, BulletML compatible motion of parts. ]]></description>
</field>
<field name='MT_PART_CONST' fullname='org.si.cml:CMLObject/MT_PART_CONST' type='uint' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ Number for CMLObject.motion_type, Linear motion of parts. ]]></description>
</field>
<field name='MT_PART_FILTER' fullname='org.si.cml:CMLObject/protected:MT_PART_FILTER' type='uint' isStatic='true' isConst='true' defaultValue='7' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='MT_PART_FLAG' fullname='org.si.cml:CMLObject/protected:MT_PART_FLAG' type='uint' isStatic='true' isConst='true' defaultValue='8' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='MT_PART_INTERPOL' fullname='org.si.cml:CMLObject/MT_PART_INTERPOL' type='uint' isStatic='true' isConst='true' defaultValue='unknown' >
<description><![CDATA[ Number for CMLObject.motion_type, 3D-Bezier interpolating motion of parts. ]]></description>
</field>
<field name='NO_RELATION' fullname='org.si.cml:CMLObject/private:NO_RELATION' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='REL_ATTRACT' fullname='org.si.cml:CMLObject/private:REL_ATTRACT' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='_IDedChildren' fullname='org.si.cml:CMLObject/private:_IDedChildren' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_ac' fullname='org.si.cml:CMLObject/private:_ac' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_access_id' fullname='org.si.cml:CMLObject/private:_access_id' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_activeObjects' fullname='org.si.cml:CMLObject/private:_activeObjects' type='org.si.cml.core:CMLList' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_ax' fullname='org.si.cml:CMLObject/private:_ax' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_ay' fullname='org.si.cml:CMLObject/private:_ay' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_bx' fullname='org.si.cml:CMLObject/private:_bx' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_by' fullname='org.si.cml:CMLObject/private:_by' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_destructionStatus' fullname='org.si.cml:CMLObject/private:_destructionStatus' type='int' isStatic='false' isConst='false' defaultValue='-1' >
</field>
<field name='_funcRand' fullname='org.si.cml:CMLObject/private:_funcRand' type='Function' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_globalRank' fullname='org.si.cml:CMLObject/_cml_internal:_globalRank' type='Array' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_globalRankRangeMax' fullname='org.si.cml:CMLObject/private:_globalRankRangeMax' type='Number' isStatic='true' isConst='false' defaultValue='1' >
</field>
<field name='_globalRankRangeMin' fullname='org.si.cml:CMLObject/private:_globalRankRangeMin' type='Number' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_head' fullname='org.si.cml:CMLObject/private:_head' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_head_offset' fullname='org.si.cml:CMLObject/private:_head_offset' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_id' fullname='org.si.cml:CMLObject/private:_id' type='uint' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_motion_type' fullname='org.si.cml:CMLObject/private:_motion_type' type='uint' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_parent' fullname='org.si.cml:CMLObject/private:_parent' type='org.si.cml:CMLObject' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_parent_id' fullname='org.si.cml:CMLObject/private:_parent_id' type='uint' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_partChildren' fullname='org.si.cml:CMLObject/private:_partChildren' type='Array' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_root' fullname='org.si.cml:CMLObject/private:_root' type='org.si.cml.core:CMLRoot' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='_rotd' fullname='org.si.cml:CMLObject/private:_rotd' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_roti' fullname='org.si.cml:CMLObject/private:_roti' type='org.si.cml.core:interpolation' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_rott' fullname='org.si.cml:CMLObject/private:_rott' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_rx' fullname='org.si.cml:CMLObject/private:_rx' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_ry' fullname='org.si.cml:CMLObject/private:_ry' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='actor' fullname='org.si.cml:CMLObject/actor' type='' isStatic='false' isConst='false' defaultValue='unknown' >
<description><![CDATA[ You can rewrite this for your own purpose. ]]></description>
</field>
<field name='vx' fullname='org.si.cml:CMLObject/vx' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ X value of velocity. ]]></description>
</field>
<field name='vy' fullname='org.si.cml:CMLObject/vy' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ Y value of velocity. ]]></description>
</field>
<field name='x' fullname='org.si.cml:CMLObject/x' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ X value of position. ]]></description>
</field>
<field name='y' fullname='org.si.cml:CMLObject/y' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ Y value of position. ]]></description>
</field>
<classRec name='CMLFiber' fullname='org.si.cml:CMLFiber' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\CMLFiber.as' namespace='org.si.cml' access='public' baseclass='org.si.cml.core:CMLListElem' isFinal='false' isDynamic='false' >
<description><![CDATA[ Class for the fiber (Fiber is called as "micro thread" in some other languages). 
      <p>
      USAGE<br/>
      1) Get the CMLFiber instance from CMLObject.execute().<br/>
      2) CMLFiber.destroy(); stops this fiber.<br/>
      3) CMLFiber.object; accesses to the CMLObject this fiber controls.<br/>
      4) CMLFiber.target; accesses to the CMLObject this fiber targets to.<br/>
      </p>
     ]]></description>
<see><![CDATA[CMLObject#execute()
     ]]></see>
<see><![CDATA[CMLFiber#destroy()
     ]]></see>
<see><![CDATA[CMLFiber#object
     ]]></see>
<see><![CDATA[CMLFiber#target
     ]]></see>
</classRec>
<method name='CMLFiber' fullname='org.si.cml:CMLFiber/org.si.cml:CMLFiber' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ <b>You cannot create new CMLFiber().</b> You can get CMLFiber instance only from CMLObject.execute().
          ]]></description>
<see><![CDATA[CMLObject#execute()
         ]]></see>
</method>
<method name='_clear_param' fullname='org.si.cml:CMLFiber/private:_clear_param' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='_copy_param' fullname='org.si.cml:CMLFiber/private:_copy_param' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='org.si.cml:CMLFiber'>
</method>
<method name='_deatroyAll' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_deatroyAll' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_destroyAllFibers' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_destroyAllFibers' isStatic='true' isFinal='false' isOverride='false'  param_names='obj' param_types='org.si.cml:CMLObject' param_defaults='undefined' result_type='void'>
<description><![CDATA[ call from CMLObject.halt() ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_destroyByObject' fullname='org.si.cml:CMLFiber/private:_destroyByObject' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='org.si.cml:CMLObject' param_defaults='undefined' result_type='org.si.cml.core:CMLListElem'>
</method>
<method name='_destroyDestFiber' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_destroyDestFiber' isStatic='false' isFinal='false' isOverride='false'  param_names='destructionStatus' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Find child fiber with specifyed id. ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_finalize' fullname='org.si.cml:CMLFiber/private:_finalize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='_getAngle' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_getAngle' isStatic='false' isFinal='false' isOverride='false'  param_names='base' param_types='Number' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_getAngleForRotationCommand' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_getAngleForRotationCommand' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_initialize' fullname='org.si.cml:CMLFiber/private:_initialize' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;obj;seq;access_id_;invt_;args_' param_types='org.si.cml:CMLFiber;org.si.cml:CMLObject;org.si.cml:CMLSequence;int;uint;Array' param_defaults='undefined;undefined;undefined;undefined;0;null' result_type='Boolean'>
</method>
<method name='_isShortestRotation' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_isShortestRotation' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_newChildFiber' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_newChildFiber' isStatic='false' isFinal='false' isOverride='false'  param_names='seq;id;invt_;args_;copyParam' param_types='org.si.cml:CMLSequence;int;uint;Array;Boolean' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='org.si.cml:CMLFiber'>
<description><![CDATA[ call only from the ']]></description>
<private><![CDATA[]]></private>
<'><![CDATA[command (CMLState._fiber()) ]]></'>
</method>
<method name='_newDestFiber' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_newDestFiber' isStatic='false' isFinal='false' isOverride='false'  param_names='seq;id;invt_;args_' param_types='org.si.cml:CMLSequence;int;uint;Array' param_defaults='undefined;undefined;undefined;undefined' result_type='org.si.cml:CMLFiber'>
<description><![CDATA[ call only from the ']]></description>
<private><![CDATA[]]></private>
<ko'><![CDATA[command (CMLState._fiber_destruction()) ]]></ko'>
</method>
<method name='_newObjectFiber' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_newObjectFiber' isStatic='false' isFinal='false' isOverride='false'  param_names='obj;seq;invt_;args_' param_types='org.si.cml:CMLObject;org.si.cml:CMLSequence;uint;Array' param_defaults='undefined;undefined;undefined;undefined' result_type='org.si.cml:CMLFiber'>
<description><![CDATA[ call from the 'n', 'f' or ']]></description>
<private><![CDATA[]]></private>
<o'><![CDATA[command (search in CMLState) ]]></o'>
</method>
<method name='_newRootFiber' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_newRootFiber' isStatic='true' isFinal='false' isOverride='false'  param_names='obj;seq;args_;invt_' param_types='org.si.cml:CMLObject;org.si.cml:CMLSequence;Array;uint' param_defaults='undefined;undefined;undefined;undefined' result_type='org.si.cml:CMLFiber'>
<description><![CDATA[ call only from CMLObject.execute() ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_onUpdate' fullname='org.si.cml:CMLFiber/private:_onUpdate' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml.core:CMLListElem'>
</method>
<method name='_setObject' fullname='org.si.cml:CMLFiber/private:_setObject' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='org.si.cml:CMLObject' param_defaults='undefined' result_type='void'>
</method>
<method name='_setTarget' fullname='org.si.cml:CMLFiber/private:_setTarget' isStatic='false' isFinal='false' isOverride='false'  param_names='tgt' param_types='org.si.cml:CMLObject' param_defaults='undefined' result_type='void'>
</method>
<method name='_shiftArguments' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_shiftArguments' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_shiftInvertion' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_shiftInvertion' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_unshiftArguments' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_unshiftArguments' isStatic='false' isFinal='false' isOverride='false'  param_names='argCount;argArray' param_types='int;Array' param_defaults='0;null' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_unshiftInvertion' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_unshiftInvertion' isStatic='false' isFinal='false' isOverride='false'  param_names='invt_' param_types='uint' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='destroy' fullname='org.si.cml:CMLFiber/destroy' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Stop the fiber.<br/>
          This function stops all child fibers also.
         ]]></description>
</method>
<method name='destroyAllChildren' fullname='org.si.cml:CMLFiber/destroyAllChildren' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Stop all child fibers. ]]></description>
</method>
<method name='destroyChild' fullname='org.si.cml:CMLFiber/destroyChild' isStatic='false' isFinal='false' isOverride='false'  param_names='child_id' param_types='int' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ Stop child fiber with specifyed id. ]]></description>
</method>
<method name='findChild' fullname='org.si.cml:CMLFiber/findChild' isStatic='false' isFinal='false' isOverride='false'  param_names='child_id' param_types='int' param_defaults='undefined' result_type='org.si.cml:CMLFiber'>
<description><![CDATA[ Find child fiber with specifyed id. ]]></description>
</method>
<method name='getInterval' fullname='org.si.cml:CMLFiber/getInterval' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Get the interval value (specifyed by "i" command) of this fiber. 
          ]]></description>
<return><![CDATA[Interval.
         ]]></return>
</method>
<method name='getLoopCounter' fullname='org.si.cml:CMLFiber/getLoopCounter' isStatic='false' isFinal='false' isOverride='false'  param_names='nest' param_types='int' param_defaults='0' result_type='int'>
<description><![CDATA[ Get the loop counter of this fiber. 
          ]]></description>
<param><![CDATA[Nested loop index. The index of 0 means the most inner loop, and 1 means the loop 1 outside.
          ]]></param>
<return><![CDATA[Loop count. Start at 0, and end at [loop_count]-1.
         ]]></return>
</method>
<method name='getVeriable' fullname='org.si.cml:CMLFiber/getVeriable' isStatic='false' isFinal='false' isOverride='false'  param_names='idx' param_types='int' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ Get the variables of the sequence "$1...$9". 
          ]]></description>
<param><![CDATA[Index of variable.
          ]]></param>
<return><![CDATA[Value of variable.
         ]]></return>
</method>
<method name='angle' fullname='org.si.cml:CMLFiber/angle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Angle of this fiber. The value is set by "h commands. ]]></description>
</method>
<method name='barrage' fullname='org.si.cml:CMLFiber/barrage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml.core:CMLBarrage'>
<description><![CDATA[ CMLBarrage that this fiber uses. ]]></description>
</method>
<method name='hasDestFiber' fullname='org.si.cml:CMLFiber/hasDestFiber/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Does this fiber have any destruction fiber ? ]]></description>
</method>
<method name='isActive' fullname='org.si.cml:CMLFiber/isActive/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Is active ? When this property shows false, this fiber is already destroyed. ]]></description>
</method>
<method name='isParent' fullname='org.si.cml:CMLFiber/isParent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Does this fiber have any children ? ]]></description>
</method>
<method name='object' fullname='org.si.cml:CMLFiber/object/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml:CMLObject'>
<description><![CDATA[ CMLObject that this fiber controls. ]]></description>
</method>
<method name='sequence' fullname='org.si.cml:CMLFiber/sequence/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml:CMLSequence'>
<description><![CDATA[ Sequence argument. <br/>
          This property is used in callback function of CMLSequence.registerUserCommand() with the option 'requireSequence' is true.<br/>
          When the next statement of user command is not sequence. outputs parsing error. Or, when the next statement is '{.}', returns null.
         ]]></description>
</method>
<method name='string' fullname='org.si.cml:CMLFiber/string/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ String argument. <br/>
          This property is used in callback function of CMLSequence.registerUserCommand().<br/>
          When the next statement of user command is not '...', this property shows null.
          ]]></description>
<example><![CDATA[<listing version="3.0">
    // Register the user command
    CMLSequence.registerUserCommand("print", callbackPrint);

    function callbackPrint(fbr:CMLFiber) {
        // You can refer the string after user command.
        _drawText(fbr.string);
    }

    // String comment after the user command in sequence.
    // In this sequence, you call _drawText('Hello World !!').
    var seq:CMLSequence = new CMLSequence("&print'Hello World !!'");
</listing>
         ]]></example>
</method>
<method name='target' fullname='org.si.cml:CMLFiber/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml:CMLObject'>
<description><![CDATA[ CMLObject that this fiber targets to. ]]></description>
</method>
<method name='maxLoopInFrame' fullname='org.si.cml:CMLFiber/maxLoopInFrame/set' isStatic='true' isFinal='false' isOverride='false'  param_names='lm' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Maximum limitation of the executable looping count in 1 frame. ]]></description>
<default><![CDATA[1024]]></default>
</method>
<method name='maxStacCount' fullname='org.si.cml:CMLFiber/maxStacCount/set' isStatic='true' isFinal='false' isOverride='false'  param_names='sc' param_types='int' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Maximum limitation of the executable gosub nest count. ]]></description>
<default><![CDATA[64]]></default>
</method>
<method name='target' fullname='org.si.cml:CMLFiber/target/set' isStatic='false' isFinal='false' isOverride='false'  param_names='t' param_types='org.si.cml:CMLObject' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='HO_ABS' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:HO_ABS' type='uint' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HO_AIM' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:HO_AIM' type='uint' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HO_FIX' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:HO_FIX' type='uint' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HO_PAR' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:HO_PAR' type='uint' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HO_REL' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:HO_REL' type='uint' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HO_SEQ' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:HO_SEQ' type='uint' isStatic='true' isConst='true' defaultValue='6' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='HO_VEL' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:HO_VEL' type='uint' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='ID_NOT_SPECIFYED' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:ID_NOT_SPECIFYED' type='int' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_access_id' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_access_id' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_barrage' fullname='org.si.cml:CMLFiber/private:_barrage' type='org.si.cml.core:CMLBarrage' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_defaultTarget' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_defaultTarget' type='org.si.cml:CMLObject' isStatic='true' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_firstDest' fullname='org.si.cml:CMLFiber/private:_firstDest' type='org.si.cml.core:CMLListElem' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_freeFibers' fullname='org.si.cml:CMLFiber/private:_freeFibers' type='org.si.cml.core:CMLList' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_gene' fullname='org.si.cml:CMLFiber/private:_gene' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_id' fullname='org.si.cml:CMLFiber/private:_id' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_listChild' fullname='org.si.cml:CMLFiber/private:_listChild' type='org.si.cml.core:CMLList' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_loopmax' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_loopmax' type='int' isStatic='true' isConst='false' defaultValue='1024' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_object' fullname='org.si.cml:CMLFiber/private:_object' type='org.si.cml:CMLObject' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_object_id' fullname='org.si.cml:CMLFiber/private:_object_id' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_pointer' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_pointer' type='org.si.cml.core:CMLState' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_rootFiber' fullname='org.si.cml:CMLFiber/private:_rootFiber' type='org.si.cml:CMLFiber' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_stacmax' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:_stacmax' type='int' isStatic='true' isConst='false' defaultValue='64' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_stateWaitDest' fullname='org.si.cml:CMLFiber/private:_stateWaitDest' type='org.si.cml:CMLSequence' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_target' fullname='org.si.cml:CMLFiber/private:_target' type='org.si.cml:CMLObject' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_target_id' fullname='org.si.cml:CMLFiber/private:_target_id' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='bul' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:bul' type='org.si.cml.core:CMLBarrageElem' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='chgt' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:chgt' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='fang' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:fang' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='fx' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:fx' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='fy' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:fy' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hang' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:hang' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='hopt' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:hopt' type='uint' isStatic='false' isConst='false' defaultValue='2' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='invt' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:invt' type='uint' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='istc' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:istc' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='jstc' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:jstc' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='lcnt' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:lcnt' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='seqDefault' fullname='org.si.cml:CMLFiber/private:seqDefault' type='org.si.cml:CMLSequence' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='seqExec' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:seqExec' type='org.si.cml:CMLSequence' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='seqFire' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:seqFire' type='org.si.cml:CMLSequence' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='seqNew' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:seqNew' type='org.si.cml:CMLSequence' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='seqRapid' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:seqRapid' type='org.si.cml:CMLSequence' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='seqSub' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:seqSub' type='org.si.cml:CMLSequence' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='varc' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:varc' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='vars' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:vars' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='wcnt' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:wcnt' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='wtm1' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:wtm1' type='int' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='wtm2' fullname='org.si.cml:CMLFiber/_cml_fiber_internal:wtm2' type='int' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='CMLSequence' fullname='org.si.cml:CMLSequence' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\CMLSequence.as' namespace='org.si.cml' access='public' baseclass='org.si.cml.core:CMLState' isFinal='false' isDynamic='false' >
<description><![CDATA[ Class for the sequences created from the cannonML or the bulletML.
      <p>
      USAGE<br/>
      1) CMLSequence(cannonML_String or bulletML_XML); creates a new sequence from certain cannonML/bulletML.<br/>
      2) CMLObject.execute(CMLSequence); apply sequence to CMLObject.<br/>
      3) CMLSequence.global; makes it global. You can access the child sequences of global sequence from everywhere.<br/>
      4) CMLSequence.findSequence(); finds labeled sequence in cannonML/bulletML.<br/>
      5) CMLSequence.getParameter(); accesses parameters of sequence.<br/>
      6) CMLSequence.registerUserCommand(); registers the function called from cannonML.<br/>
      7) CMLSequence.registerUserVariable(); registers the function refered by cannonML.<br/>
      </p>
     ]]></description>
<example><![CDATA[Typical usage.
<listing version="3.0">
// Create enemys sequence from "String of cannonML" or "XML of bulletML".
var motion:CMLSequence = new CMLSequence(String or XML);

 ...

enemy.create(x, y);                                     // Create enemy on the stage.
enemy.execute(motion);                                  // Execute sequence.
</listing>
     ]]></example>
<see><![CDATA[CMLObject#execute()
     ]]></see>
<see><![CDATA[CMLSequence#CMLSequence()
     ]]></see>
<see><![CDATA[CMLSequence#global
     ]]></see>
<see><![CDATA[CMLSequence#findSequence()
     ]]></see>
<see><![CDATA[CMLSequence#getParameter()
     ]]></see>
<see><![CDATA[CMLSequence#registerUserCommand()
     ]]></see>
<see><![CDATA[CMLSequence#registerUserVariable()
]]></see>
</classRec>
<method name='CMLSequence' fullname='org.si.cml:CMLSequence/org.si.cml:CMLSequence' isStatic='false' isFinal='false' isOverride='false'  param_names='data;globalSequence' param_types=';Boolean' param_defaults='null;false' result_type='*'>
<description><![CDATA[ Construct new sequence by a String of cannonML or an XML of bulletML.
          ]]></description>
<param><![CDATA[data Sequence data. Intstance of String or XML is available. String data is for CannonML, and XML data is for BulletML.
          ]]></param>
<param><![CDATA[globalSequence Flag of global sequence.
         ]]></param>
</method>
<method name='_addChild' fullname='org.si.cml:CMLSequence/private:_addChild' isStatic='false' isFinal='false' isOverride='false'  param_names='seq' param_types='org.si.cml:CMLSequence' param_defaults='undefined' result_type='void'>
</method>
<method name='_findGlobalSequence' fullname='org.si.cml:CMLSequence/private:_findGlobalSequence' isStatic='false' isFinal='false' isOverride='false'  param_names='label_' param_types='String' param_defaults='undefined' result_type='org.si.cml:CMLSequence'>
</method>
<method name='_setCommand' fullname='org.si.cml:CMLSequence/protected:_setCommand' isStatic='false' isFinal='false' isOverride='true'  param_names='cmd' param_types='String' param_defaults='undefined' result_type='org.si.cml.core:CMLState'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clear' fullname='org.si.cml:CMLSequence/clear' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ Make this sequence empty.
          <p>
          This function disconnects all statement chains and enable to be caught by GC.
          </p>
         ]]></description>
</method>
<method name='findSequence' fullname='org.si.cml:CMLSequence/findSequence' isStatic='false' isFinal='false' isOverride='false'  param_names='label_' param_types='String' param_defaults='undefined' result_type='org.si.cml:CMLSequence'>
<description><![CDATA[ Find child sequence that has specifyed label.
          ]]></description>
<example><![CDATA[<listing version="3.0">
// You can access the child sequence.
var seq:CMLSequence = new CMLSequence("#A{v0,2[w30f3]}");
var seqA:CMLSequence = seq.findSequence("A");       // seqA is "v0,2[w30f]".

// You can use the access operator.
var seq:CMLSequence = new CMLSequence("#A{ #B{v0,2[w30f4]} #C{v0,4[w10f2]} }");
var seqAB:CMLSequence = seq.findSequence("A.B");    // seqAB is "v0,2[w30f4]". Same as seq.findSequence("A").findSequence("B")
var seqAC:CMLSequence = seq.findSequence("A.C");    // seqAB is "v0,4[w10f2]". Same as seq.findSequence("A").findSequence("C")
</listing>
         ]]></example>
<param><![CDATA[Label to find.
          ]]></param>
<return><![CDATA[Found sequence.
]]></return>
</method>
<method name='getParameter' fullname='org.si.cml:CMLSequence/getParameter' isStatic='false' isFinal='false' isOverride='false'  param_names='idx' param_types='uint' param_defaults='undefined' result_type='Number'>
<description><![CDATA[ Get parameter of this sequence.
          <p>
          This function gives the parameters of this sequence.<br/>
          Parameters of a sequence are shown like "#LABEL{0,1,2 ... }" in cml-string.
          </p>
          ]]></description>
<example><![CDATA[<listing version='3.0'>
var seq:CMLSequence = new CMLSequence("#A{10,20 v0,2[w30f3]}");
var seqA:CMLSequence = seq.findSequence("A");
trace(seqA.getParameter(0), seqA.getParameter(1), seqA.getParameter(2));    // 10, 20, 0
</listing>
         ]]></example>
<param><![CDATA[ Index of argument.
          ]]></param>
<return><![CDATA[Value of argument.
]]></return>
</method>
<method name='newChildSequence' fullname='org.si.cml:CMLSequence/_cml_internal:newChildSequence' isStatic='false' isFinal='false' isOverride='false'  param_names='label_' param_types='String' param_defaults='undefined' result_type='org.si.cml:CMLSequence'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='newDefaultSequence' fullname='org.si.cml:CMLSequence/org.si.cml:newDefaultSequence' isStatic='true' isFinal='false' isOverride='false'  result_type='org.si.cml:CMLSequence'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='newRapidSequence' fullname='org.si.cml:CMLSequence/org.si.cml:newRapidSequence' isStatic='true' isFinal='false' isOverride='false'  result_type='org.si.cml:CMLSequence'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='newWaitDestuctionSequence' fullname='org.si.cml:CMLSequence/org.si.cml:newWaitDestuctionSequence' isStatic='true' isFinal='false' isOverride='false'  result_type='org.si.cml:CMLSequence'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='parse' fullname='org.si.cml:CMLSequence/parse' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Parse CannonML-String or BulletML-XML.
          ]]></description>
<param><![CDATA[String or XML is avairable. String is for CannonML, and XML is for BulletML.
         ]]></param>
</method>
<method name='registerUserCommand' fullname='org.si.cml:CMLSequence/registerUserCommand' isStatic='true' isFinal='false' isOverride='false'  param_names='name;func;argc;requireSequence' param_types='String;Function;int;Boolean' param_defaults='undefined;undefined;0;false' result_type='void'>
<description><![CDATA[ Register user defined command "&[a-z_]+".
          <p>
          This function registers the command that can use in CML string. <br/>
          </p>
          ]]></description>
<example><![CDATA[
<listing version="3.0">
// In the cml-string, you can use "&sound[sound_index],[volume]" that plays sound.
CMLSequence.registerUserCommand("sound", playSound, 2);

function playSound(fbr:CMLFiber, args:Array) : void
{
    // function _playSound(index, volume) plays sound.
    if (args.length >= 2) _playSound(args[0], args[1]);
}
</listing>
        ]]></example>
<param><![CDATA[name The name of command that appears like "&name" in CML string.
          ]]></param>
<param><![CDATA[func The callback function when the command appears in sequence.<br/>
          The type of callback is <code>function(fbr:CMLFiber, args:Array):void</code>.
          The 1st argument gives a reference of the fiber that execute the sequence.
          And the 2nd argument gives the arguments of the command.
          ]]></param>
<param><![CDATA[argc The count of argument that this command requires.<br/>
          ]]></param>
<param><![CDATA[requireSequence Specify true if this command require the sequence as the '&', ']]></param>
<see><![CDATA[CMLFiber
]]></see>
<'><![CDATA[and 'n' commands.
          ]]></'>
</method>
<method name='registerUserValiable' fullname='org.si.cml:CMLSequence/registerUserValiable' isStatic='true' isFinal='false' isOverride='false'  param_names='name;func' param_types='String;Function' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ Register user defined variable "$[a-z_]+".
          <p>
          This function registers the variables that can use in CML-string. <br/>
          </p>
          ]]></description>
<example><![CDATA[
<listing version="3.0">
// In the cml-string, you can use "$life" that returns Enemy's life.
CMLSequence.registerUserValiable("life", referLife);

function referLife(fbr:CMLFiber) : Number
{
    // Enemy class is your extention of CMLObject.
    return Enemy(fbr.object).life;
}
</listing>
         ]]></example>
<param><![CDATA[name The name of variable that appears like "$name" in CML-string.
          ]]></param>
<param><![CDATA[func The callback function when the reference appears in sequence.<br/>
          The type of callback is <code>function(fbr:CMLFiber):Number</code>. The argument gives a fiber that execute the sequence.
          ]]></param>
<see><![CDATA[CMLFiber
]]></see>
</method>
<method name='verify' fullname='org.si.cml:CMLSequence/_cml_internal:verify' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='childSequence' fullname='org.si.cml:CMLSequence/childSequence/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ dictionary of child sequence, you can access by label ]]></description>
</method>
<method name='global' fullname='org.si.cml:CMLSequence/global/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Flag of global sequence.
          <p>
          Child sequences of a global sequence are accessable from other sequences.<br/>
          </p>
]]></description>
<example><![CDATA[<listing version="3.0">
var seqG:CMLSequence = new CMLSequence("#LABEL_G{...}");

seqG.global = true;
var seqA:CMLSequence = new CMLSequence("&LABEL_G");    // Success; you can refer the LABEL_G.

seqG.global = false;
var seqB:CMLSequence = new CMLSequence("&LABEL_G");    // Error; you cannot refer the LABEL_G.
</listing>
         ]]></example>
</method>
<method name='isEmpty' fullname='org.si.cml:CMLSequence/isEmpty/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Is this sequence empty ? ]]></description>
</method>
<method name='label' fullname='org.si.cml:CMLSequence/label/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ label of this sequence ]]></description>
</method>
<method name='global' fullname='org.si.cml:CMLSequence/global/set' isStatic='false' isFinal='false' isOverride='false'  param_names='makeGlobal' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='_childSequence' fullname='org.si.cml:CMLSequence/private:_childSequence' type='' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_global' fullname='org.si.cml:CMLSequence/private:_global' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='_label' fullname='org.si.cml:CMLSequence/private:_label' type='String' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_non_labeled_count' fullname='org.si.cml:CMLSequence/private:_non_labeled_count' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_parent' fullname='org.si.cml:CMLSequence/private:_parent' type='org.si.cml:CMLSequence' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='globalSequences' fullname='org.si.cml:CMLSequence/private:globalSequences' type='Array' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='require_argc' fullname='org.si.cml:CMLSequence/_cml_internal:require_argc' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='CMLMovieClipKeyLogger' fullname='org.si.b3.modules:CMLMovieClipKeyLogger' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\b3\modules\CMLMovieClipKeyLogger.as' namespace='org.si.b3.modules' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ Key logger ]]></description>
</classRec>
<method name='CMLMovieClipKeyLogger' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/org.si.b3.modules:CMLMovieClipKeyLogger' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_record' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/org.si.b3.modules:_record' isStatic='false' isFinal='false' isOverride='false'  param_names='flag' param_types='int' param_defaults='undefined' result_type='int'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/initialize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ initialize 
         ]]></description>
</method>
<method name='reset' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/reset' isStatic='false' isFinal='false' isOverride='false'  param_names='status' param_types='uint' param_defaults='0' result_type='void'>
<description><![CDATA[ reset 
          ]]></description>
<param><![CDATA[status 
         ]]></param>
</method>
<method name='status' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/status/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ recording status, CMLMovieClip.RECORD or CMLMovieClip.REPLAY ]]></description>
</method>
<field name='RECORD' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/RECORD' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='REPLAY' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/REPLAY' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='_currentState' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/private:_currentState' type='int' isStatic='false' isConst='false' >
</field>
<field name='_frameCount' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/private:_frameCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_log' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/private:_log' type='Vector' isStatic='false' isConst='false' >
</field>
<field name='_pointer' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/private:_pointer' type='int' isStatic='false' isConst='false' >
</field>
<field name='_status' fullname='org.si.b3.modules:CMLMovieClipKeyLogger/private:_status' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='CMLMovieClipFPS' fullname='org.si.b3.modules:CMLMovieClipFPS' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\b3\modules\CMLMovieClipFPS.as' namespace='org.si.b3.modules' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ FPS controling module ]]></description>
</classRec>
<method name='CMLMovieClipFPS' fullname='org.si.b3.modules:CMLMovieClipFPS/CMLMovieClipFPS' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ constructor ]]></description>
</method>
<method name='_onAddedToStage' fullname='org.si.b3.modules:CMLMovieClipFPS/_cmlmovieclip_internal:_onAddedToStage' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_sync' fullname='org.si.b3.modules:CMLMovieClipFPS/org.si.b3.modules:_sync' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='org.si.b3.modules:CMLMovieClipFPS/initialize' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.b3.modules:CMLMovieClipFPS'>
<description><![CDATA[ initialize FPS setting ]]></description>
</method>
<method name='reset' fullname='org.si.b3.modules:CMLMovieClipFPS/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.b3.modules:CMLMovieClipFPS'>
<description><![CDATA[ reset counters ]]></description>
</method>
<method name='delayedFrames' fullname='org.si.b3.modules:CMLMovieClipFPS/delayedFrames/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ delayed frame count ]]></description>
</method>
<method name='frameSkipLevel' fullname='org.si.b3.modules:CMLMovieClipFPS/frameSkipLevel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ frame skip level ]]></description>
</method>
<method name='totalFrame' fullname='org.si.b3.modules:CMLMovieClipFPS/totalFrame/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ total frame count ]]></description>
</method>
<field name='_delayedFrames' fullname='org.si.b3.modules:CMLMovieClipFPS/private:_delayedFrames' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_frameCounter' fullname='org.si.b3.modules:CMLMovieClipFPS/private:_frameCounter' type='uint' isStatic='false' isConst='false' >
</field>
<field name='_frameRateMS' fullname='org.si.b3.modules:CMLMovieClipFPS/private:_frameRateMS' type='Number' isStatic='false' isConst='false' >
</field>
<field name='_frameSkipFilter' fullname='org.si.b3.modules:CMLMovieClipFPS/private:_frameSkipFilter' type='Vector' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_frameSkipLevel' fullname='org.si.b3.modules:CMLMovieClipFPS/private:_frameSkipLevel' type='int' isStatic='false' isConst='false' >
</field>
<field name='_startTime' fullname='org.si.b3.modules:CMLMovieClipFPS/private:_startTime' type='int' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='org.si.b3.modules:CMLMovieClipFPS/org.si.b3.modules:instance' type='org.si.b3.modules:CMLMovieClipFPS' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='CMLMovieClipControl' fullname='org.si.b3.modules:CMLMovieClipControl' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\b3\modules\CMLMovieClipControl.as' namespace='org.si.b3.modules' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ Controler operating module ]]></description>
</classRec>
<method name='CMLMovieClipControl' fullname='org.si.b3.modules:CMLMovieClipControl/CMLMovieClipControl' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_onAddedToStage' fullname='org.si.b3.modules:CMLMovieClipControl/_cmlmovieclip_internal:_onAddedToStage' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_onKeyDown' fullname='org.si.b3.modules:CMLMovieClipControl/private:_onKeyDown' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='_onKeyUp' fullname='org.si.b3.modules:CMLMovieClipControl/private:_onKeyUp' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
</method>
<method name='_updateCounter' fullname='org.si.b3.modules:CMLMovieClipControl/org.si.b3.modules:_updateCounter' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='getPressedFrame' fullname='org.si.b3.modules:CMLMovieClipControl/getPressedFrame' isStatic='false' isFinal='false' isOverride='false'  param_names='buttonNumber' param_types='uint' param_defaults='undefined' result_type='int'>
<description><![CDATA[ Get pressed frames 
          ]]></description>
<param><![CDATA[buttonNumber button number
          ]]></param>
<return><![CDATA[frame count the key pressed.
         ]]></return>
</method>
<method name='initialize' fullname='org.si.b3.modules:CMLMovieClipControl/initialize' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.b3.modules:CMLMovieClipControl'>
<description><![CDATA[ initialize all assigned keys
          ]]></description>
<return><![CDATA[this instance
         ]]></return>
</method>
<method name='isHitted' fullname='org.si.b3.modules:CMLMovieClipControl/isHitted' isStatic='false' isFinal='false' isOverride='false'  param_names='buttonNumber' param_types='uint' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ Check button state, this property returns true only at the first frame of pressing key.
          ]]></description>
<param><![CDATA[buttonNumber button number
          ]]></param>
<return><![CDATA[key pressing status
         ]]></return>
</method>
<method name='isPressed' fullname='org.si.b3.modules:CMLMovieClipControl/isPressed' isStatic='false' isFinal='false' isOverride='false'  param_names='buttonNumber' param_types='uint' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[ Check button state, this property returns true while the key pressed.
          ]]></description>
<param><![CDATA[buttonNumber button number
          ]]></param>
<return><![CDATA[key pressing status
         ]]></return>
</method>
<method name='map' fullname='org.si.b3.modules:CMLMovieClipControl/map' isStatic='false' isFinal='false' isOverride='false'  param_names='buttonNumber;args' param_types='int;restParam' param_defaults='undefined;undefined' result_type='org.si.b3.modules:CMLMovieClipControl'>
<description><![CDATA[ assign keycode to the BUTTON_NUMBER 
          ]]></description>
<param><![CDATA[buttonNumber button number to assign
          ]]></param>
<param><![CDATA[args keycodes of assigning buttons
          ]]></param>
<return><![CDATA[this instance
         ]]></return>
</method>
<method name='mapArrowKeys' fullname='org.si.b3.modules:CMLMovieClipControl/mapArrowKeys' isStatic='false' isFinal='false' isOverride='false'  param_names='button0;button1;button2;button3' param_types='Array;Array;Array;Array' param_defaults='null;null;null;null' result_type='org.si.b3.modules:CMLMovieClipControl'>
<description><![CDATA[ assign arrow keys as moving button
          ]]></description>
<param><![CDATA[button0 Array, String or int for button0
          ]]></param>
<param><![CDATA[button1 Array, String or int for button1
          ]]></param>
<param><![CDATA[button2 Array, String or int for button2
          ]]></param>
<param><![CDATA[button3 Array, String or int for button3
          ]]></param>
<return><![CDATA[this instance
         ]]></return>
</method>
<method name='mapButtons' fullname='org.si.b3.modules:CMLMovieClipControl/mapButtons' isStatic='false' isFinal='false' isOverride='false'  param_names='button0;button1;button2;button3' param_types='Array;Array;Array;Array' param_defaults='null;null;null;null' result_type='org.si.b3.modules:CMLMovieClipControl'>
<description><![CDATA[ assign all buttons
          ]]></description>
<param><![CDATA[button0 Array, String or int for button0
          ]]></param>
<param><![CDATA[button1 Array, String or int for button1
          ]]></param>
<param><![CDATA[button2 Array, String or int for button2
          ]]></param>
<param><![CDATA[button3 Array, String or int for button3
          ]]></param>
<return><![CDATA[this instance
         ]]></return>
</method>
<method name='mapNumKeys' fullname='org.si.b3.modules:CMLMovieClipControl/mapNumKeys' isStatic='false' isFinal='false' isOverride='false'  param_names='button0;button1;button2;button3' param_types='Array;Array;Array;Array' param_defaults='null;null;null;null' result_type='org.si.b3.modules:CMLMovieClipControl'>
<description><![CDATA[ assign number keys (8246) as moving button
          ]]></description>
<param><![CDATA[button0 Array, String or int for button0
          ]]></param>
<param><![CDATA[button1 Array, String or int for button1
          ]]></param>
<param><![CDATA[button2 Array, String or int for button2
          ]]></param>
<param><![CDATA[button3 Array, String or int for button3
          ]]></param>
<return><![CDATA[this instance
         ]]></return>
</method>
<method name='mapWSAD' fullname='org.si.b3.modules:CMLMovieClipControl/mapWSAD' isStatic='false' isFinal='false' isOverride='false'  param_names='button0;button1;button2;button3' param_types='Array;Array;Array;Array' param_defaults='null;null;null;null' result_type='org.si.b3.modules:CMLMovieClipControl'>
<description><![CDATA[ assign "WSAD" keys as moving button
          ]]></description>
<param><![CDATA[button0 Array, String or int for button0
          ]]></param>
<param><![CDATA[button1 Array, String or int for button1
          ]]></param>
<param><![CDATA[button2 Array, String or int for button2
          ]]></param>
<param><![CDATA[button3 Array, String or int for button3
          ]]></param>
<return><![CDATA[this instance
         ]]></return>
</method>
<method name='reset' fullname='org.si.b3.modules:CMLMovieClipControl/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.b3.modules:CMLMovieClipControl'>
<description><![CDATA[ reset all flags
          ]]></description>
<return><![CDATA[this instance
         ]]></return>
</method>
<method name='flag' fullname='org.si.b3.modules:CMLMovieClipControl/flag/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[ get button status flag. you can get the pressing status by (flag >> [key enum]) & 1 for each key. ]]></description>
</method>
<method name='x' fullname='org.si.b3.modules:CMLMovieClipControl/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ get x input (-1 <-> +1).
          ]]></description>
<return><![CDATA[-1 for left, 1 for right
         ]]></return>
</method>
<method name='y' fullname='org.si.b3.modules:CMLMovieClipControl/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ get y input (-1 <-> +1).
          ]]></description>
<return><![CDATA[-1 for up, 1 for down
         ]]></return>
</method>
<field name='KEY_BUTTON0' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON0' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='KEY_BUTTON1' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON1' type='uint' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='KEY_BUTTON2' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON2' type='uint' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='KEY_BUTTON3' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON3' type='uint' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='KEY_BUTTON4' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON4' type='uint' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='KEY_BUTTON5' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON5' type='uint' isStatic='true' isConst='true' defaultValue='9' >
</field>
<field name='KEY_BUTTON6' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON6' type='uint' isStatic='true' isConst='true' defaultValue='10' >
</field>
<field name='KEY_BUTTON7' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_BUTTON7' type='uint' isStatic='true' isConst='true' defaultValue='11' >
</field>
<field name='KEY_DOWN' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_DOWN' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='KEY_ESCAPE' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_ESCAPE' type='uint' isStatic='true' isConst='true' defaultValue='14' >
</field>
<field name='KEY_LEFT' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_LEFT' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='KEY_MAX' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_MAX' type='int' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='KEY_RESET' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_RESET' type='uint' isStatic='true' isConst='true' defaultValue='13' >
</field>
<field name='KEY_RIGHT' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_RIGHT' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='KEY_START' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_START' type='uint' isStatic='true' isConst='true' defaultValue='12' >
</field>
<field name='KEY_SYSTEM' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_SYSTEM' type='uint' isStatic='true' isConst='true' defaultValue='15' >
</field>
<field name='KEY_UP' fullname='org.si.b3.modules:CMLMovieClipControl/KEY_UP' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='_counter' fullname='org.si.b3.modules:CMLMovieClipControl/private:_counter' type='Vector' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_flagPressed' fullname='org.si.b3.modules:CMLMovieClipControl/private:_flagPressed' type='int' isStatic='false' isConst='false' >
</field>
<field name='_keyCode' fullname='org.si.b3.modules:CMLMovieClipControl/private:_keyCode' type='Vector' isStatic='false' isConst='false' defaultValue='unknown' >
</field>
<field name='_keycode_map' fullname='org.si.b3.modules:CMLMovieClipControl/private:_keycode_map' type='' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_supportJoyServer' fullname='org.si.b3.modules:CMLMovieClipControl/private:_supportJoyServer' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='instance' fullname='org.si.b3.modules:CMLMovieClipControl/org.si.b3.modules:instance' type='org.si.b3.modules:CMLMovieClipControl' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='CMLMovieClipScene' fullname='org.si.b3.modules:CMLMovieClipScene' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\b3\modules\CMLMovieClipScene.as' namespace='org.si.b3.modules' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ CMLMovieClipScene manages scene transition. ]]></description>
</classRec>
<method name='CMLMovieClipScene' fullname='org.si.b3.modules:CMLMovieClipScene/CMLMovieClipScene' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_nop' fullname='org.si.b3.modules:CMLMovieClipScene/private:_nop' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='_onUpdate' fullname='org.si.b3.modules:CMLMovieClipScene/_cmlmovieclip_internal:_onUpdate' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='initialize' fullname='org.si.b3.modules:CMLMovieClipScene/initialize' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.b3.modules:CMLMovieClipScene'>
<description><![CDATA[ initialize ]]></description>
</method>
<method name='register' fullname='org.si.b3.modules:CMLMovieClipScene/register' isStatic='false' isFinal='false' isOverride='false'  param_names='sceneID;scene' param_types='String' param_defaults='undefined;undefined' result_type='org.si.b3.modules:CMLMovieClipScene'>
<description><![CDATA[ register scene ]]></description>
</method>
<method name='reset' fullname='org.si.b3.modules:CMLMovieClipScene/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.b3.modules:CMLMovieClipScene'>
<description><![CDATA[ reset ]]></description>
</method>
<method name='id' fullname='org.si.b3.modules:CMLMovieClipScene/id/get' isStatic='false' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ current scene id. if you set this property the sceneID is changed at the head of next frame. ]]></description>
</method>
<method name='id' fullname='org.si.b3.modules:CMLMovieClipScene/id/set' isStatic='false' isFinal='false' isOverride='false'  param_names='sceneID' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<field name='_currentSceneID' fullname='org.si.b3.modules:CMLMovieClipScene/private:_currentSceneID' type='String' isStatic='false' isConst='false' >
</field>
<field name='_funcDraw' fullname='org.si.b3.modules:CMLMovieClipScene/private:_funcDraw' type='Function' isStatic='false' isConst='false' >
</field>
<field name='_funcExit' fullname='org.si.b3.modules:CMLMovieClipScene/private:_funcExit' type='Function' isStatic='false' isConst='false' >
</field>
<field name='_funcUpdate' fullname='org.si.b3.modules:CMLMovieClipScene/private:_funcUpdate' type='Function' isStatic='false' isConst='false' >
</field>
<field name='_nextSceneID' fullname='org.si.b3.modules:CMLMovieClipScene/private:_nextSceneID' type='String' isStatic='false' isConst='false' >
</field>
<field name='_sceneList' fullname='org.si.b3.modules:CMLMovieClipScene/private:_sceneList' type='' isStatic='false' isConst='false' >
</field>
<classRec name='CMLList' fullname='org.si.cml.core:CMLList' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLList.as' namespace='org.si.cml.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLList' fullname='org.si.cml.core:CMLList/org.si.cml.core:CMLList' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='cat' fullname='org.si.cml.core:CMLList/cat' isStatic='false' isFinal='false' isOverride='false'  param_names='list' param_types='org.si.cml.core:CMLList' param_defaults='undefined' result_type='void'>
</method>
<method name='clear' fullname='org.si.cml.core:CMLList/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='cut' fullname='org.si.cml.core:CMLList/cut' isStatic='false' isFinal='false' isOverride='false'  param_names='start;end' param_types='org.si.cml.core:CMLListElem;org.si.cml.core:CMLListElem' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='isEmpty' fullname='org.si.cml.core:CMLList/isEmpty' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='pop' fullname='org.si.cml.core:CMLList/pop' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml.core:CMLListElem'>
</method>
<method name='push' fullname='org.si.cml.core:CMLList/push' isStatic='false' isFinal='false' isOverride='false'  param_names='elem' param_types='org.si.cml.core:CMLListElem' param_defaults='undefined' result_type='org.si.cml.core:CMLListElem'>
</method>
<method name='remove' fullname='org.si.cml.core:CMLList/remove' isStatic='false' isFinal='false' isOverride='false'  param_names='elem' param_types='org.si.cml.core:CMLListElem' param_defaults='undefined' result_type='org.si.cml.core:CMLListElem'>
</method>
<method name='shift' fullname='org.si.cml.core:CMLList/shift' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml.core:CMLListElem'>
</method>
<method name='unshift' fullname='org.si.cml.core:CMLList/unshift' isStatic='false' isFinal='false' isOverride='false'  param_names='elem' param_types='org.si.cml.core:CMLListElem' param_defaults='undefined' result_type='org.si.cml.core:CMLListElem'>
</method>
<method name='begin' fullname='org.si.cml.core:CMLList/begin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml.core:CMLListElem'>
</method>
<method name='end' fullname='org.si.cml.core:CMLList/end/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml.core:CMLListElem'>
</method>
<method name='head' fullname='org.si.cml.core:CMLList/head/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml.core:CMLListElem'>
</method>
<method name='tail' fullname='org.si.cml.core:CMLList/tail/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml.core:CMLListElem'>
</method>
<field name='term' fullname='org.si.cml.core:CMLList/private:term' type='org.si.cml.core:CMLListElem' isStatic='false' isConst='false' defaultValue='' >
</field>
<classRec name='CMLListElem' fullname='org.si.cml.core:CMLListElem' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLListElem.as' namespace='org.si.cml.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLListElem' fullname='org.si.cml.core:CMLListElem/org.si.cml.core:CMLListElem' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clear' fullname='org.si.cml.core:CMLListElem/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='insert_after' fullname='org.si.cml.core:CMLListElem/insert_after' isStatic='false' isFinal='false' isOverride='false'  param_names='prev_' param_types='org.si.cml.core:CMLListElem' param_defaults='undefined' result_type='void'>
</method>
<method name='insert_before' fullname='org.si.cml.core:CMLListElem/insert_before' isStatic='false' isFinal='false' isOverride='false'  param_names='next_' param_types='org.si.cml.core:CMLListElem' param_defaults='undefined' result_type='void'>
</method>
<method name='remove_from_list' fullname='org.si.cml.core:CMLListElem/remove_from_list' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<field name='next' fullname='org.si.cml.core:CMLListElem/next' type='org.si.cml.core:CMLListElem' isStatic='false' isConst='false' >
</field>
<field name='prev' fullname='org.si.cml.core:CMLListElem/prev' type='org.si.cml.core:CMLListElem' isStatic='false' isConst='false' >
</field>
<field name='sin' fullname='org.si.cml.core:CMLListElem/protected:sin' type='org.si.cml.core:CMLSinTable' isStatic='true' isConst='false' defaultValue='' >
</field>
<classRec name='interpolation' fullname='org.si.cml.core:interpolation' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\interpolation.as' namespace='org.si.cml.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ interpolating calculation ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='calc' fullname='org.si.cml.core:interpolation/calc' isStatic='false' isFinal='false' isOverride='false'  param_names='t' param_types='Number' param_defaults='undefined' result_type='Number'>
</method>
<method name='interpolation' fullname='org.si.cml.core:interpolation/interpolation' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='setBezier2' fullname='org.si.cml.core:interpolation/setBezier2' isStatic='false' isFinal='false' isOverride='false'  param_names='x0;x1;p' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='org.si.cml.core:interpolation'>
</method>
<method name='setBezier3' fullname='org.si.cml.core:interpolation/setBezier3' isStatic='false' isFinal='false' isOverride='false'  param_names='x0;x1;p0;p1' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='org.si.cml.core:interpolation'>
</method>
<method name='setCatmullRom' fullname='org.si.cml.core:interpolation/setCatmullRom' isStatic='false' isFinal='false' isOverride='false'  param_names='x0;x1;x2;x3' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='org.si.cml.core:interpolation'>
</method>
<method name='setCatmullRomEnd' fullname='org.si.cml.core:interpolation/setCatmullRomEnd' isStatic='false' isFinal='false' isOverride='false'  param_names='x0;x1;x2' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='org.si.cml.core:interpolation'>
</method>
<method name='setCatmullRomStart' fullname='org.si.cml.core:interpolation/setCatmullRomStart' isStatic='false' isFinal='false' isOverride='false'  param_names='x1;x2;x3' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='org.si.cml.core:interpolation'>
</method>
<method name='setFergusonCoons' fullname='org.si.cml.core:interpolation/setFergusonCoons' isStatic='false' isFinal='false' isOverride='false'  param_names='x0;x1;v0;v1' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='org.si.cml.core:interpolation'>
</method>
<method name='setLagrange' fullname='org.si.cml.core:interpolation/setLagrange' isStatic='false' isFinal='false' isOverride='false'  param_names='x0;x1;x2;x3' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='org.si.cml.core:interpolation'>
</method>
<method name='setLinear' fullname='org.si.cml.core:interpolation/setLinear' isStatic='false' isFinal='false' isOverride='false'  param_names='x0;x1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='org.si.cml.core:interpolation'>
</method>
<field name='P' fullname='org.si.cml.core:interpolation/P' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='Q' fullname='org.si.cml.core:interpolation/Q' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='R' fullname='org.si.cml.core:interpolation/R' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='S' fullname='org.si.cml.core:interpolation/S' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='CMLSinTable' fullname='org.si.cml.core:CMLSinTable' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLSinTable.as' namespace='org.si.cml.core' access='public' baseclass='Object' isFinal='false' isDynamic='true' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLSinTable' fullname='org.si.cml.core:CMLSinTable/CMLSinTable' isStatic='false' isFinal='false' isOverride='false'  param_names='table_size' param_types='int' param_defaults='4096' result_type='*'>
</method>
<method name='index' fullname='org.si.cml.core:CMLSinTable/index' isStatic='false' isFinal='false' isOverride='false'  param_names='deg' param_types='Number' param_defaults='undefined' result_type='int'>
</method>
<field name='cos_shift' fullname='org.si.cml.core:CMLSinTable/cos_shift' type='int' isStatic='false' isConst='false' >
</field>
<field name='d2i' fullname='org.si.cml.core:CMLSinTable/private:d2i' type='Number' isStatic='false' isConst='false' >
</field>
<field name='fil' fullname='org.si.cml.core:CMLSinTable/private:fil' type='int' isStatic='false' isConst='false' >
</field>
<classRec name='CMLBarrageElem' fullname='org.si.cml.core:CMLBarrageElem' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLBarrageElem.as' namespace='org.si.cml.core' access='public' baseclass='org.si.cml.core:CMLListElem' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLBarrageElem' fullname='org.si.cml.core:CMLBarrageElem/org.si.cml.core:CMLBarrageElem' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='_init' fullname='org.si.cml.core:CMLBarrageElem/_init' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='org.si.cml.core:CMLBarrageElem' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_init_random' fullname='org.si.cml.core:CMLBarrageElem/_init_random' isStatic='false' isFinal='false' isOverride='false'  param_names='parent' param_types='org.si.cml.core:CMLBarrageElem' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_update' fullname='org.si.cml.core:CMLBarrageElem/_update' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_update_random' fullname='org.si.cml.core:CMLBarrageElem/_update_random' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='copy' fullname='org.si.cml.core:CMLBarrageElem/_cml_internal:copy' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='org.si.cml.core:CMLBarrageElem' param_defaults='undefined' result_type='org.si.cml.core:CMLBarrageElem'>
</method>
<method name='isEnd' fullname='org.si.cml.core:CMLBarrageElem/org.si.cml.core:isEnd' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='setMultiple' fullname='org.si.cml.core:CMLBarrageElem/org.si.cml.core:setMultiple' isStatic='false' isFinal='false' isOverride='false'  param_names='count_;angle_;speed_;interval_' param_types='int;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='org.si.cml.core:CMLBarrageElem'>
</method>
<method name='setRandom' fullname='org.si.cml.core:CMLBarrageElem/org.si.cml.core:setRandom' isStatic='false' isFinal='false' isOverride='false'  param_names='count_;angle_;speed_;interval_' param_types='int;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='org.si.cml.core:CMLBarrageElem'>
</method>
<method name='setSequence' fullname='org.si.cml.core:CMLBarrageElem/_cml_internal:setSequence' isStatic='false' isFinal='false' isOverride='false'  param_names='count_;angle_;speed_;interval_' param_types='int;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='org.si.cml.core:CMLBarrageElem'>
</method>
<method name='setSpeedStep' fullname='org.si.cml.core:CMLBarrageElem/org.si.cml.core:setSpeedStep' isStatic='false' isFinal='false' isOverride='false'  param_names='ss' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='angle' fullname='org.si.cml.core:CMLBarrageElem/org.si.cml.core:angle' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='angle_offset' fullname='org.si.cml.core:CMLBarrageElem/private:angle_offset' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='angle_step' fullname='org.si.cml.core:CMLBarrageElem/private:angle_step' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='count' fullname='org.si.cml.core:CMLBarrageElem/private:count' type='int' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='counter' fullname='org.si.cml.core:CMLBarrageElem/private:counter' type='int' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='init' fullname='org.si.cml.core:CMLBarrageElem/org.si.cml.core:init' type='Function' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='interval' fullname='org.si.cml.core:CMLBarrageElem/org.si.cml.core:interval' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='random' fullname='org.si.cml.core:CMLBarrageElem/private:random' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
</field>
<field name='speed' fullname='org.si.cml.core:CMLBarrageElem/org.si.cml.core:speed' type='Number' isStatic='false' isConst='false' defaultValue='1' >
</field>
<field name='speed_offset' fullname='org.si.cml.core:CMLBarrageElem/private:speed_offset' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='speed_step' fullname='org.si.cml.core:CMLBarrageElem/private:speed_step' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='update' fullname='org.si.cml.core:CMLBarrageElem/org.si.cml.core:update' type='Function' isStatic='false' isConst='false' defaultValue='' >
</field>
<classRec name='CMLParser' fullname='org.si.cml.core:CMLParser' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLParser.as' namespace='org.si.cml.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLParser' fullname='org.si.cml.core:CMLParser/org.si.cml.core:CMLParser' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='_append' fullname='org.si.cml.core:CMLParser/private:_append' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='_append_formula' fullname='org.si.cml.core:CMLParser/private:_append_formula' isStatic='true' isFinal='false' isOverride='false'  param_names='fml' param_types='org.si.cml.core:CMLFormula' param_defaults='undefined' result_type='void'>
</method>
<method name='_append_statement' fullname='org.si.cml.core:CMLParser/private:_append_statement' isStatic='true' isFinal='false' isOverride='false'  param_names='state' param_types='org.si.cml.core:CMLState' param_defaults='undefined' result_type='void'>
</method>
<method name='_check_argument' fullname='org.si.cml.core:CMLParser/private:_check_argument' isStatic='true' isFinal='false' isOverride='false'  param_names='state;res;isComma' param_types='org.si.cml.core:CMLState;Boolean' param_defaults='undefined;undefined;false' result_type='org.si.cml.core:CMLFormula'>
</method>
<method name='_createCMLRegExp' fullname='org.si.cml.core:CMLParser/private:_createCMLRegExp' isStatic='true' isFinal='false' isOverride='false'  result_type='RegExp'>
</method>
<method name='_cut_sequence' fullname='org.si.cml.core:CMLParser/private:_cut_sequence' isStatic='true' isFinal='false' isOverride='false'  param_names='start;end' param_types='org.si.cml.core:CMLState;org.si.cml.core:CMLState' param_defaults='undefined;undefined' result_type='org.si.cml.core:CMLState'>
</method>
<method name='_getUserReference' fullname='org.si.cml.core:CMLParser/org.si.cml.core:_getUserReference' isStatic='true' isFinal='false' isOverride='false'  param_names='name' param_types='String' param_defaults='undefined' result_type='Function'>
</method>
<method name='_initialize' fullname='org.si.cml.core:CMLParser/private:_initialize' isStatic='true' isFinal='false' isOverride='false'  param_names='seq_' param_types='org.si.cml:CMLSequence' param_defaults='undefined' result_type='void'>
</method>
<method name='_new_assign' fullname='org.si.cml.core:CMLParser/private:_new_assign' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='org.si.cml.core:CMLAssign'>
</method>
<method name='_new_reference' fullname='org.si.cml.core:CMLParser/private:_new_reference' isStatic='true' isFinal='false' isOverride='false'  param_names='seq;name' param_types='org.si.cml.core:CMLState;String' param_defaults='undefined;undefined' result_type='org.si.cml.core:CMLState'>
</method>
<method name='_new_sequence' fullname='org.si.cml.core:CMLParser/private:_new_sequence' isStatic='true' isFinal='false' isOverride='false'  param_names='parent;label' param_types='org.si.cml:CMLSequence;String' param_defaults='undefined;undefined' result_type='org.si.cml:CMLSequence'>
</method>
<method name='_new_user_defined' fullname='org.si.cml.core:CMLParser/private:_new_user_defined' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='org.si.cml.core:CMLUserDefine'>
</method>
<method name='_parse' fullname='org.si.cml.core:CMLParser/_cml_internal:_parse' isStatic='true' isFinal='false' isOverride='false'  param_names='seq;cml_string' param_types='org.si.cml:CMLSequence;String' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='_parseAssign' fullname='org.si.cml.core:CMLParser/private:_parseAssign' isStatic='true' isFinal='false' isOverride='false'  param_names='res' param_types='' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_parseCallSequence' fullname='org.si.cml.core:CMLParser/private:_parseCallSequence' isStatic='true' isFinal='false' isOverride='false'  param_names='res' param_types='' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_parseComment' fullname='org.si.cml.core:CMLParser/private:_parseComment' isStatic='true' isFinal='false' isOverride='false'  param_names='res' param_types='' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_parseFormula' fullname='org.si.cml.core:CMLParser/private:_parseFormula' isStatic='true' isFinal='false' isOverride='false'  param_names='res' param_types='' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_parseLabelDefine' fullname='org.si.cml.core:CMLParser/private:_parseLabelDefine' isStatic='true' isFinal='false' isOverride='false'  param_names='res' param_types='' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_parseNonLabelDefine' fullname='org.si.cml.core:CMLParser/private:_parseNonLabelDefine' isStatic='true' isFinal='false' isOverride='false'  param_names='res' param_types='' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_parsePreviousReference' fullname='org.si.cml.core:CMLParser/private:_parsePreviousReference' isStatic='true' isFinal='false' isOverride='false'  param_names='res' param_types='' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_parseStatement' fullname='org.si.cml.core:CMLParser/private:_parseStatement' isStatic='true' isFinal='false' isOverride='false'  param_names='res' param_types='' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_parseString' fullname='org.si.cml.core:CMLParser/private:_parseString' isStatic='true' isFinal='false' isOverride='false'  param_names='res' param_types='' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_parseUserDefined' fullname='org.si.cml.core:CMLParser/private:_parseUserDefined' isStatic='true' isFinal='false' isOverride='false'  param_names='res' param_types='' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_terminate' fullname='org.si.cml.core:CMLParser/private:_terminate' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='_update_max_reference' fullname='org.si.cml.core:CMLParser/private:_update_max_reference' isStatic='true' isFinal='false' isOverride='false'  param_names='max_reference' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='userCommand' fullname='org.si.cml.core:CMLParser/_cml_internal:userCommand' isStatic='true' isFinal='false' isOverride='false'  param_names='name;func;argc;requireSequence' param_types='String;Function;int;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='userReference' fullname='org.si.cml.core:CMLParser/_cml_internal:userReference' isStatic='true' isFinal='false' isOverride='false'  param_names='name;func' param_types='String;Function' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='_userCommandRegExp' fullname='org.si.cml.core:CMLParser/private:_userCommandRegExp/get' isStatic='true' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='_userReferenceRegExp' fullname='org.si.cml.core:CMLParser/org.si.cml.core:_userReferenceRegExp/get' isStatic='true' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='REX_ARG_LITERAL' fullname='org.si.cml.core:CMLParser/private:REX_ARG_LITERAL' type='uint' isStatic='true' isConst='true' defaultValue='15' >
</field>
<field name='REX_ARG_POSTFIX' fullname='org.si.cml.core:CMLParser/private:REX_ARG_POSTFIX' type='uint' isStatic='true' isConst='true' defaultValue='17' >
</field>
<field name='REX_ARG_PREFIX' fullname='org.si.cml.core:CMLParser/private:REX_ARG_PREFIX' type='uint' isStatic='true' isConst='true' defaultValue='13' >
</field>
<field name='REX_ASSIGN' fullname='org.si.cml.core:CMLParser/private:REX_ASSIGN' type='uint' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='REX_CALLSEQ' fullname='org.si.cml.core:CMLParser/private:REX_CALLSEQ' type='uint' isStatic='true' isConst='true' defaultValue='9' >
</field>
<field name='REX_COMMENT' fullname='org.si.cml.core:CMLParser/private:REX_COMMENT' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='REX_ERROR' fullname='org.si.cml.core:CMLParser/private:REX_ERROR' type='uint' isStatic='true' isConst='true' defaultValue='19' >
</field>
<field name='REX_FORMULA' fullname='org.si.cml.core:CMLParser/private:REX_FORMULA' type='uint' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='REX_LABELDEF' fullname='org.si.cml.core:CMLParser/private:REX_LABELDEF' type='uint' isStatic='true' isConst='true' defaultValue='11' >
</field>
<field name='REX_NONLABELDEF' fullname='org.si.cml.core:CMLParser/private:REX_NONLABELDEF' type='uint' isStatic='true' isConst='true' defaultValue='12' >
</field>
<field name='REX_NORMAL' fullname='org.si.cml.core:CMLParser/private:REX_NORMAL' type='uint' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='REX_PREVREFER' fullname='org.si.cml.core:CMLParser/private:REX_PREVREFER' type='uint' isStatic='true' isConst='true' defaultValue='10' >
</field>
<field name='REX_STRING' fullname='org.si.cml.core:CMLParser/private:REX_STRING' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='REX_USERDEF' fullname='org.si.cml.core:CMLParser/private:REX_USERDEF' type='uint' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='_regexp' fullname='org.si.cml.core:CMLParser/private:_regexp' type='RegExp' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='childstac' fullname='org.si.cml.core:CMLParser/private:childstac' type='Array' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='cmdKey' fullname='org.si.cml.core:CMLParser/private:cmdKey' type='String' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='cmdTemp' fullname='org.si.cml.core:CMLParser/private:cmdTemp' type='org.si.cml.core:CMLState' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='fmlTemp' fullname='org.si.cml.core:CMLParser/private:fmlTemp' type='org.si.cml.core:CMLFormula' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='listState' fullname='org.si.cml.core:CMLParser/private:listState' type='org.si.cml.core:CMLList' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='loopstac' fullname='org.si.cml.core:CMLParser/private:loopstac' type='Array' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='mapUsrDefCmd' fullname='org.si.cml.core:CMLParser/private:mapUsrDefCmd' type='Object' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='mapUsrDefRef' fullname='org.si.cml.core:CMLParser/private:mapUsrDefRef' type='Object' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='newCMLState' fullname='org.si.cml.core:CMLParser/org.si.cml.core:newCMLState' type='Function' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<classRec name='CMLState' fullname='org.si.cml.core:CMLState' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLState.as' namespace='org.si.cml.core' access='public' baseclass='org.si.cml.core:CMLListElem' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLState' fullname='org.si.cml.core:CMLState/org.si.cml.core:CMLState' isStatic='false' isFinal='false' isOverride='false'  param_names='type_' param_types='uint' param_defaults='unknown' result_type='*'>
</method>
<method name='_a' fullname='org.si.cml.core:CMLState/private:_a' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_ad' fullname='org.si.cml.core:CMLState/private:_ad' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_at' fullname='org.si.cml.core:CMLState/private:_at' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_atko' fullname='org.si.cml.core:CMLState/private:_atko' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_ato' fullname='org.si.cml.core:CMLState/private:_ato' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_ax' fullname='org.si.cml.core:CMLState/private:_ax' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_ay' fullname='org.si.cml.core:CMLState/private:_ay' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_block_end' fullname='org.si.cml.core:CMLState/private:_block_end' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_bm' fullname='org.si.cml.core:CMLState/private:_bm' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_br' fullname='org.si.cml.core:CMLState/private:_br' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_bs' fullname='org.si.cml.core:CMLState/private:_bs' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_bv' fullname='org.si.cml.core:CMLState/private:_bv' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_cd' fullname='org.si.cml.core:CMLState/private:_cd' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_create_multi_bullet' fullname='org.si.cml.core:CMLState/private:_create_multi_bullet' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr;access_id;isParts;arg' param_types='org.si.cml:CMLFiber;int;Boolean;Array' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
</method>
<method name='_csa' fullname='org.si.cml.core:CMLState/private:_csa' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_csr' fullname='org.si.cml.core:CMLState/private:_csr' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_css' fullname='org.si.cml.core:CMLState/private:_css' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_else_start' fullname='org.si.cml.core:CMLState/private:_else_start' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_f0' fullname='org.si.cml.core:CMLState/private:_f0' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_f1' fullname='org.si.cml.core:CMLState/private:_f1' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_fat' fullname='org.si.cml.core:CMLState/private:_fat' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_fc0' fullname='org.si.cml.core:CMLState/private:_fc0' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_fc1' fullname='org.si.cml.core:CMLState/private:_fc1' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_ff0' fullname='org.si.cml.core:CMLState/private:_ff0' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_ff1' fullname='org.si.cml.core:CMLState/private:_ff1' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_fgosub' fullname='org.si.cml.core:CMLState/private:_fgosub' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_fiber' fullname='org.si.cml.core:CMLState/private:_fiber' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr;fiber_id' param_types='org.si.cml:CMLFiber;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='_fiber_child' fullname='org.si.cml.core:CMLState/private:_fiber_child' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr;obj;object_id' param_types='org.si.cml:CMLFiber;org.si.cml:CMLObject;Array' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='_fiber_destruction' fullname='org.si.cml.core:CMLState/private:_fiber_destruction' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr;destStatus' param_types='org.si.cml:CMLFiber;int' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='_fire' fullname='org.si.cml.core:CMLState/private:_fire' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr;access_id;isParts' param_types='org.si.cml:CMLFiber;int;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='_fix' fullname='org.si.cml.core:CMLState/private:_fix' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='void'>
</method>
<method name='_fn' fullname='org.si.cml.core:CMLState/private:_fn' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_gosub' fullname='org.si.cml.core:CMLState/private:_gosub' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_gp' fullname='org.si.cml.core:CMLState/private:_gp' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_ha' fullname='org.si.cml.core:CMLState/private:_ha' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_ho' fullname='org.si.cml.core:CMLState/private:_ho' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_hox' fullname='org.si.cml.core:CMLState/private:_hox' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_hp' fullname='org.si.cml.core:CMLState/private:_hp' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_hpx' fullname='org.si.cml.core:CMLState/private:_hpx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_hs' fullname='org.si.cml.core:CMLState/private:_hs' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_ht' fullname='org.si.cml.core:CMLState/private:_ht' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_htx' fullname='org.si.cml.core:CMLState/private:_htx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_hv' fullname='org.si.cml.core:CMLState/private:_hv' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_hvx' fullname='org.si.cml.core:CMLState/private:_hvx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_i' fullname='org.si.cml.core:CMLState/private:_i' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_if_start' fullname='org.si.cml.core:CMLState/private:_if_start' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_initialize_barrage' fullname='org.si.cml.core:CMLState/private:_initialize_barrage' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_invertAngle' fullname='org.si.cml.core:CMLState/private:_invertAngle' isStatic='false' isFinal='false' isOverride='false'  param_names='ang' param_types='Number' param_defaults='undefined' result_type='Number'>
</method>
<method name='_invertRotation' fullname='org.si.cml.core:CMLState/private:_invertRotation' isStatic='false' isFinal='false' isOverride='false'  param_names='rot' param_types='Number' param_defaults='undefined' result_type='Number'>
</method>
<method name='_invertX' fullname='org.si.cml.core:CMLState/private:_invertX' isStatic='false' isFinal='false' isOverride='false'  param_names='x' param_types='Number' param_defaults='undefined' result_type='Number'>
</method>
<method name='_invertY' fullname='org.si.cml.core:CMLState/private:_invertY' isStatic='false' isFinal='false' isOverride='false'  param_names='y' param_types='Number' param_defaults='undefined' result_type='Number'>
</method>
<method name='_kf' fullname='org.si.cml.core:CMLState/private:_kf' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_ko' fullname='org.si.cml.core:CMLState/private:_ko' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_level_start' fullname='org.si.cml.core:CMLState/private:_level_start' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_loop_start' fullname='org.si.cml.core:CMLState/private:_loop_start' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_m' fullname='org.si.cml.core:CMLState/private:_m' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_n' fullname='org.si.cml.core:CMLState/private:_n' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_nc' fullname='org.si.cml.core:CMLState/private:_nc' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_new' fullname='org.si.cml.core:CMLState/private:_new' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr;access_id;isParts' param_types='org.si.cml:CMLFiber;int;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
</method>
<method name='_nop' fullname='org.si.cml.core:CMLState/protected:_nop' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_p' fullname='org.si.cml.core:CMLState/private:_p' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_pd' fullname='org.si.cml.core:CMLState/private:_pd' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_px' fullname='org.si.cml.core:CMLState/private:_px' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_py' fullname='org.si.cml.core:CMLState/private:_py' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_q' fullname='org.si.cml.core:CMLState/private:_q' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_qx' fullname='org.si.cml.core:CMLState/private:_qx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_qy' fullname='org.si.cml.core:CMLState/private:_qy' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_r' fullname='org.si.cml.core:CMLState/private:_r' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_rapid_fire' fullname='org.si.cml.core:CMLState/private:_rapid_fire' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_rc' fullname='org.si.cml.core:CMLState/private:_rc' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_resetParameters' fullname='org.si.cml.core:CMLState/protected:_resetParameters' isStatic='false' isFinal='false' isOverride='false'  param_names='argc' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='_ret' fullname='org.si.cml.core:CMLState/private:_ret' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_setCommand' fullname='org.si.cml.core:CMLState/protected:_setCommand' isStatic='false' isFinal='false' isOverride='false'  param_names='cmd' param_types='String' param_defaults='undefined' result_type='org.si.cml.core:CMLState'>
<description><![CDATA[ set command by key string ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_setInvertionFlag' fullname='org.si.cml.core:CMLState/_cml_internal:_setInvertionFlag' isStatic='true' isFinal='false' isOverride='false'  param_names='invt_' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='_td' fullname='org.si.cml.core:CMLState/private:_td' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_to' fullname='org.si.cml.core:CMLState/private:_to' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_tp' fullname='org.si.cml.core:CMLState/private:_tp' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_v' fullname='org.si.cml.core:CMLState/private:_v' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_vd' fullname='org.si.cml.core:CMLState/private:_vd' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_vx' fullname='org.si.cml.core:CMLState/private:_vx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_vy' fullname='org.si.cml.core:CMLState/private:_vy' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_w0' fullname='org.si.cml.core:CMLState/private:_w0' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_w1' fullname='org.si.cml.core:CMLState/private:_w1' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_wait4destruction' fullname='org.si.cml.core:CMLState/private:_wait4destruction' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_waitif' fullname='org.si.cml.core:CMLState/private:_waitif' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_wi' fullname='org.si.cml.core:CMLState/private:_wi' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='clear' fullname='org.si.cml.core:CMLState/clear' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
</method>
<method name='setCommand' fullname='org.si.cml.core:CMLState/_cml_internal:setCommand' isStatic='false' isFinal='false' isOverride='false'  param_names='cmd' param_types='String' param_defaults='undefined' result_type='org.si.cml.core:CMLState'>
</method>
<method name='speedRatio' fullname='org.si.cml.core:CMLState/_cml_internal:speedRatio/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<method name='speedRatio' fullname='org.si.cml.core:CMLState/_cml_internal:speedRatio/set' isStatic='true' isFinal='false' isOverride='false'  param_names='r' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='STF_CALLREF' fullname='org.si.cml.core:CMLState/STF_CALLREF' type='uint' isStatic='true' isConst='true' defaultValue='32' >
</field>
<field name='ST_BARRAGE' fullname='org.si.cml.core:CMLState/ST_BARRAGE' type='uint' isStatic='true' isConst='true' defaultValue='13' >
</field>
<field name='ST_BLOCKEND' fullname='org.si.cml.core:CMLState/ST_BLOCKEND' type='uint' isStatic='true' isConst='true' defaultValue='9' >
</field>
<field name='ST_ELSE' fullname='org.si.cml.core:CMLState/ST_ELSE' type='uint' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='ST_END' fullname='org.si.cml.core:CMLState/ST_END' type='uint' isStatic='true' isConst='true' defaultValue='12' >
</field>
<field name='ST_FORMULA' fullname='org.si.cml.core:CMLState/ST_FORMULA' type='uint' isStatic='true' isConst='true' defaultValue='10' >
</field>
<field name='ST_IF' fullname='org.si.cml.core:CMLState/ST_IF' type='uint' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='ST_LABEL' fullname='org.si.cml.core:CMLState/ST_LABEL' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='ST_LOOP' fullname='org.si.cml.core:CMLState/ST_LOOP' type='uint' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='ST_NORMAL' fullname='org.si.cml.core:CMLState/ST_NORMAL' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='ST_NO_LABEL' fullname='org.si.cml.core:CMLState/ST_NO_LABEL' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='ST_RAPID' fullname='org.si.cml.core:CMLState/ST_RAPID' type='uint' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='ST_REFER' fullname='org.si.cml.core:CMLState/ST_REFER' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='ST_RESTRICT' fullname='org.si.cml.core:CMLState/ST_RESTRICT' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='ST_SELECT' fullname='org.si.cml.core:CMLState/ST_SELECT' type='uint' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='ST_STRING' fullname='org.si.cml.core:CMLState/ST_STRING' type='uint' isStatic='true' isConst='true' defaultValue='11' >
</field>
<field name='ST_W4D' fullname='org.si.cml.core:CMLState/ST_W4D' type='uint' isStatic='true' isConst='true' defaultValue='14' >
</field>
<field name='_args' fullname='org.si.cml.core:CMLState/_cml_fiber_internal:_args' type='Array' isStatic='false' isConst='false' >
</field>
<field name='_invert_flag' fullname='org.si.cml.core:CMLState/protected:_invert_flag' type='uint' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='_speed_ratio' fullname='org.si.cml.core:CMLState/protected:_speed_ratio' type='Number' isStatic='true' isConst='false' defaultValue='1' >
</field>
<field name='command_rex' fullname='org.si.cml.core:CMLState/_cml_internal:command_rex' type='String' isStatic='true' isConst='false' defaultValue='(\[s\?|\[\?|\[|\]|\}|:|\^&amp;|&amp;|w\?|w|~|pd|px|py|p|vd|vx|vy|v|ad|ax|ay|a|gp|gt|rc|r|ko|i|m|cd|csa|csr|css|\^@|@ko|@o|@|\^n|nc|n|\^f|fc|f|qx|qy|q|bm|bs|br|bv|hax|ha|hox|ho|hpx|hp|htx|ht|hvx|hv|hs|td|tp|to|kf)' >
</field>
<field name='func' fullname='org.si.cml.core:CMLState/_cml_fiber_internal:func' type='Function' isStatic='false' isConst='false' >
</field>
<field name='jump' fullname='org.si.cml.core:CMLState/_cml_fiber_internal:jump' type='org.si.cml.core:CMLState' isStatic='false' isConst='false' >
</field>
<field name='type' fullname='org.si.cml.core:CMLState/_cml_fiber_internal:type' type='uint' isStatic='false' isConst='false' >
</field>
<classRec name='CMLBarrage' fullname='org.si.cml.core:CMLBarrage' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLBarrage.as' namespace='org.si.cml.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ The implement of bm/bs/br commands.
      <p>
      USAGE<br/>
      1) Get the barrage setting of fiber by CMLFiber.barrage.<br/>
      2) CMLBarrage.clear(); sets the parameter "bm1,0,0,0".<br/>
      3) CMLBarrage.append[Multiple|Sequence|Random](); multiply new barrage shape.
      </p>
     ]]></description>
<see><![CDATA[CMLFiber#barrage
     ]]></see>
<see><![CDATA[CMLBarrage#clear();
     ]]></see>
<see><![CDATA[CMLBarrage#appendMultiple()
     ]]></see>
<see><![CDATA[CMLBarrage#appendSequence()
     ]]></see>
<see><![CDATA[CMLBarrage#appendRandom()
     ]]></see>
</classRec>
<method name='CMLBarrage' fullname='org.si.cml.core:CMLBarrage/org.si.cml.core:CMLBarrage' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor.
          Usually you get CMLBarrage instance by CMLFiber.barrage.
          ]]></description>
<default><![CDATA[bm1,0,0,0
          ]]></default>
<see><![CDATA[CMLFiber#barrage
         ]]></see>
</method>
<method name='_appendElementCopyOf' fullname='org.si.cml.core:CMLBarrage/org.si.cml.core:_appendElementCopyOf' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='org.si.cml.core:CMLBarrageElem' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='alloc' fullname='org.si.cml.core:CMLBarrage/private:alloc' isStatic='true' isFinal='false' isOverride='false'  result_type='org.si.cml.core:CMLBarrageElem'>
</method>
<method name='appendCopyOf' fullname='org.si.cml.core:CMLBarrage/appendCopyOf' isStatic='false' isFinal='false' isOverride='false'  param_names='src' param_types='org.si.cml.core:CMLBarrage' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Append copy of other CLMBarrage.
          ]]></description>
<param><![CDATA[copy source.
         ]]></param>
</method>
<method name='appendMultiple' fullname='org.si.cml.core:CMLBarrage/appendMultiple' isStatic='false' isFinal='false' isOverride='false'  param_names='count_;angle_;speed_;interval_' param_types='int;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ Append append new element "bm"
          ]]></description>
<param><![CDATA[count_ bullet count.
          ]]></param>
<param><![CDATA[angle_ center angle of fan-shaped barrage.
          ]]></param>
<param><![CDATA[speed_ speed difference of barrage.
          ]]></param>
<param><![CDATA[interval_ rapid interval frame.
         ]]></param>
</method>
<method name='appendRandom' fullname='org.si.cml.core:CMLBarrage/appendRandom' isStatic='false' isFinal='false' isOverride='false'  param_names='count_;angle_;speed_;interval_' param_types='int;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ Append append new element "br"
          ]]></description>
<param><![CDATA[count_ bullet count.
          ]]></param>
<param><![CDATA[angle_ center angle of fan-shaped barrage.
          ]]></param>
<param><![CDATA[speed_ speed difference of barrage.
          ]]></param>
<param><![CDATA[interval_ rapid interval frame.
         ]]></param>
</method>
<method name='appendSequence' fullname='org.si.cml.core:CMLBarrage/appendSequence' isStatic='false' isFinal='false' isOverride='false'  param_names='count_;angle_;speed_;interval_' param_types='int;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ Append append new element "bs"
          ]]></description>
<param><![CDATA[count_ bullet count.
          ]]></param>
<param><![CDATA[angle_ center angle of fan-shaped barrage.
          ]]></param>
<param><![CDATA[speed_ speed difference of barrage.
          ]]></param>
<param><![CDATA[interval_ rapid interval frame.
         ]]></param>
</method>
<method name='clear' fullname='org.si.cml.core:CMLBarrage/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Clear all barrage setting. 
          Reset to "bm1,0,0,0".
         ]]></description>
</method>
<field name='freeList' fullname='org.si.cml.core:CMLBarrage/private:freeList' type='org.si.cml.core:CMLList' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='qrtList' fullname='org.si.cml.core:CMLBarrage/org.si.cml.core:qrtList' type='org.si.cml.core:CMLList' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='CMLFormulaElem' fullname='org.si.cml.core:CMLFormulaElem' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLFormulaElem.as' namespace='org.si.cml.core' access='internal' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLFormulaElem' fullname='org.si.cml.core:CMLFormulaElem/CMLFormulaElem' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='calc' fullname='org.si.cml.core:CMLFormulaElem/org.si.cml.core:calc' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<classRec name='BMLParser' fullname='org.si.cml.core:BMLParser' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\BMLParser.as' namespace='org.si.cml.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ You can use the XML object of BulletML in CMLSequence constructor directly, So this class is only for a translation purpose.
      ]]></description>
<example><![CDATA[<listing version="3.0">
    // Create CMLSequence from bulletML directly.
    var seq:CMLSequence = new CMLSequence(bulletML as XML);
    
    // You can refer the translation result of bulletML if you need.
    trace(BMLParser.cmlString);
    
     ...
    
    // "enemy" is an instance of CMLObject. You can execute bulletML from CMLObject.execute().
    enemy.execute(seq);
</listing>
      ]]></example>
<see><![CDATA[CMLSequence#CMLSequence()
      ]]></see>
<see><![CDATA[BMLParser#cmlString
     ]]></see>
</classRec>
<method name='BMLParser' fullname='org.si.cml.core:BMLParser/org.si.cml.core:BMLParser' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_cmlArgument' fullname='org.si.cml.core:BMLParser/private:_cmlArgument' isStatic='true' isFinal='false' isOverride='false'  param_names='arg' param_types='XML' param_defaults='undefined' result_type='String'>
</method>
<method name='_cmlArgumentProp' fullname='org.si.cml.core:BMLParser/private:_cmlArgumentProp' isStatic='true' isFinal='false' isOverride='false'  param_names='cmlString' param_types='String' param_defaults='undefined' result_type='String'>
</method>
<method name='_cmlLabel' fullname='org.si.cml.core:BMLParser/private:_cmlLabel' isStatic='true' isFinal='false' isOverride='false'  param_names='label;reference' param_types='String;Boolean' param_defaults='undefined;undefined' result_type='String'>
</method>
<method name='_errorAttribute' fullname='org.si.cml.core:BMLParser/private:_errorAttribute' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;attr;err' param_types='XML;String;String' param_defaults='undefined;undefined;undefined' result_type='Error'>
</method>
<method name='_errorElement' fullname='org.si.cml.core:BMLParser/private:_errorElement' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;elem' param_types='XML;String' param_defaults='undefined;undefined' result_type='Error'>
</method>
<method name='_errorHasOnlyOne' fullname='org.si.cml.core:BMLParser/private:_errorHasOnlyOne' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;only' param_types='XML;String' param_defaults='undefined;undefined' result_type='Error'>
</method>
<method name='_errorNoAttribute' fullname='org.si.cml.core:BMLParser/private:_errorNoAttribute' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;attr' param_types='XML;String' param_defaults='undefined;undefined' result_type='Error'>
</method>
<method name='_errorNoElement' fullname='org.si.cml.core:BMLParser/private:_errorNoElement' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;elem' param_types='XML;String' param_defaults='undefined;undefined' result_type='Error'>
</method>
<method name='_errorSimpleOnly' fullname='org.si.cml.core:BMLParser/private:_errorSimpleOnly' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Error'>
</method>
<method name='_flush' fullname='org.si.cml.core:BMLParser/private:_flush' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='_getDirection' fullname='org.si.cml.core:BMLParser/private:_getDirection' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='String'>
</method>
<method name='_getLabel' fullname='org.si.cml.core:BMLParser/private:_getLabel' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;reference' param_types='XML;Boolean' param_defaults='undefined;undefined' result_type='String'>
</method>
<method name='_getParam' fullname='org.si.cml.core:BMLParser/private:_getParam' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='String'>
</method>
<method name='_getSpeed' fullname='org.si.cml.core:BMLParser/private:_getSpeed' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='String'>
</method>
<method name='_getTerm' fullname='org.si.cml.core:BMLParser/private:_getTerm' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='String'>
</method>
<method name='_getTimes' fullname='org.si.cml.core:BMLParser/private:_getTimes' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='String'>
</method>
<method name='_getType' fullname='org.si.cml.core:BMLParser/private:_getType' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;defaultAtt' param_types='XML;int' param_defaults='undefined;undefined' result_type='int'>
</method>
<method name='_parse' fullname='org.si.cml.core:BMLParser/_cml_internal:_parse' isStatic='true' isFinal='false' isOverride='false'  param_names='seq;bulletML' param_types='org.si.cml:CMLSequence;XML' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_parseContentsSequencial' fullname='org.si.cml.core:BMLParser/private:_parseContentsSequencial' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;elements' param_types='XML;restParam' param_defaults='undefined;undefined' result_type='void'>
</method>
<method name='_popStac' fullname='org.si.cml.core:BMLParser/private:_popStac' isStatic='true' isFinal='false' isOverride='false'  result_type='String'>
</method>
<method name='_pushStac' fullname='org.si.cml.core:BMLParser/private:_pushStac' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='_write' fullname='org.si.cml.core:BMLParser/private:_write' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='_write_ns' fullname='org.si.cml.core:BMLParser/private:_write_ns' isStatic='true' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='void'>
</method>
<method name='accel' fullname='org.si.cml.core:BMLParser/private:accel' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='action' fullname='org.si.cml.core:BMLParser/private:action' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;reference' param_types='XML;Boolean' param_defaults='undefined;true' result_type='Boolean'>
</method>
<method name='actionRef' fullname='org.si.cml.core:BMLParser/private:actionRef' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='bullet' fullname='org.si.cml.core:BMLParser/private:bullet' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;reference' param_types='XML;Boolean' param_defaults='undefined;true' result_type='Boolean'>
</method>
<method name='bulletRef' fullname='org.si.cml.core:BMLParser/private:bulletRef' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='bulletml' fullname='org.si.cml.core:BMLParser/private:bulletml' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;defaultFunc' param_types='XML;Function' param_defaults='undefined;null' result_type='Boolean'>
</method>
<method name='changeDirection' fullname='org.si.cml.core:BMLParser/private:changeDirection' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='changeSpeed' fullname='org.si.cml.core:BMLParser/private:changeSpeed' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='fire' fullname='org.si.cml.core:BMLParser/private:fire' isStatic='true' isFinal='false' isOverride='false'  param_names='xml;reference' param_types='XML;Boolean' param_defaults='undefined;true' result_type='Boolean'>
</method>
<method name='fireRef' fullname='org.si.cml.core:BMLParser/private:fireRef' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='repeat' fullname='org.si.cml.core:BMLParser/private:repeat' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='skipDirSpd' fullname='org.si.cml.core:BMLParser/private:skipDirSpd' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='translate' fullname='org.si.cml.core:BMLParser/translate' isStatic='true' isFinal='false' isOverride='false'  param_names='bulletML' param_types='XML' param_defaults='undefined' result_type='String'>
<description><![CDATA[ Translate BulletML to CannonML. 
        ]]></description>
<param><![CDATA[ bulletML XML of BulletML
        ]]></param>
<return><![CDATA[cannonML string. Returns "" when there are no <bulletml>s in XML.
        ]]></return>
</method>
<method name='vanish' fullname='org.si.cml.core:BMLParser/private:vanish' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='wait' fullname='org.si.cml.core:BMLParser/private:wait' isStatic='true' isFinal='false' isOverride='false'  param_names='xml' param_types='XML' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='cmlString' fullname='org.si.cml.core:BMLParser/cmlString/get' isStatic='true' isFinal='false' isOverride='false'  result_type='String'>
<description><![CDATA[ CannonML string after translate() and constructor of CMLSequence. 
          You can pick up the cml string after "new CMLSequence(bulletML as XML)".
         ]]></description>
</method>
<method name='erroredXML' fullname='org.si.cml.core:BMLParser/erroredXML/get' isStatic='true' isFinal='false' isOverride='false'  result_type='XML'>
<description><![CDATA[ Errored XML. Returns null when there are no error. ]]></description>
</method>
<field name='TYPE_ABSOLUTE' fullname='org.si.cml.core:BMLParser/private:TYPE_ABSOLUTE' type='int' isStatic='true' isConst='false' defaultValue='1' >
</field>
<field name='TYPE_AIM' fullname='org.si.cml.core:BMLParser/private:TYPE_AIM' type='int' isStatic='true' isConst='false' defaultValue='0' >
</field>
<field name='TYPE_RELATIVE' fullname='org.si.cml.core:BMLParser/private:TYPE_RELATIVE' type='int' isStatic='true' isConst='false' defaultValue='2' >
</field>
<field name='TYPE_SEQUENCE' fullname='org.si.cml.core:BMLParser/private:TYPE_SEQUENCE' type='int' isStatic='true' isConst='false' defaultValue='3' >
</field>
<field name='TYPE_UNDEFINED' fullname='org.si.cml.core:BMLParser/private:TYPE_UNDEFINED' type='int' isStatic='true' isConst='false' defaultValue='-1' >
</field>
<field name='_cml' fullname='org.si.cml.core:BMLParser/private:_cml' type='String' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_cmlStac' fullname='org.si.cml.core:BMLParser/private:_cmlStac' type='Array' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_dictLabel' fullname='org.si.cml.core:BMLParser/private:_dictLabel' type='Object' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_erroredXML' fullname='org.si.cml.core:BMLParser/private:_erroredXML' type='XML' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='_label' fullname='org.si.cml.core:BMLParser/private:_label' type='Array' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_seqStac' fullname='org.si.cml.core:BMLParser/private:_seqStac' type='Array' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_typeString' fullname='org.si.cml.core:BMLParser/private:_typeString' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_typeStringCS' fullname='org.si.cml.core:BMLParser/private:_typeStringCS' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='_typeStringH' fullname='org.si.cml.core:BMLParser/private:_typeStringH' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='bulletMLNameSpace' fullname='org.si.cml.core:BMLParser/bulletMLNameSpace' type='Namespace' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[ The namespace of bulletML, xmlnx='http://www.asahi-net.or.jp/~cs8k-cyu/bulletml'. ]]></description>
</field>
<classRec name='CMLAssign' fullname='org.si.cml.core:CMLAssign' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLAssign.as' namespace='org.si.cml.core' access='internal' baseclass='org.si.cml.core:CMLState' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLAssign' fullname='org.si.cml.core:CMLAssign/org.si.cml.core:CMLAssign' isStatic='false' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='*'>
</method>
<method name='_add' fullname='org.si.cml.core:CMLAssign/private:_add' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_addr' fullname='org.si.cml.core:CMLAssign/private:_addr' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_addrg' fullname='org.si.cml.core:CMLAssign/private:_addrg' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_asg' fullname='org.si.cml.core:CMLAssign/private:_asg' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_asgr' fullname='org.si.cml.core:CMLAssign/private:_asgr' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_asgrg' fullname='org.si.cml.core:CMLAssign/private:_asgrg' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_div' fullname='org.si.cml.core:CMLAssign/private:_div' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_divr' fullname='org.si.cml.core:CMLAssign/private:_divr' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_divrg' fullname='org.si.cml.core:CMLAssign/private:_divrg' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_mul' fullname='org.si.cml.core:CMLAssign/private:_mul' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_mulr' fullname='org.si.cml.core:CMLAssign/private:_mulr' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_mulrg' fullname='org.si.cml.core:CMLAssign/private:_mulrg' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_setCommand' fullname='org.si.cml.core:CMLAssign/protected:_setCommand' isStatic='false' isFinal='false' isOverride='true'  param_names='cmd' param_types='String' param_defaults='undefined' result_type='org.si.cml.core:CMLState'>
</method>
<method name='_sub' fullname='org.si.cml.core:CMLAssign/private:_sub' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_subr' fullname='org.si.cml.core:CMLAssign/private:_subr' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_subrg' fullname='org.si.cml.core:CMLAssign/private:_subrg' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<field name='_index' fullname='org.si.cml.core:CMLAssign/private:_index' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='assign_rex' fullname='org.si.cml.core:CMLAssign/org.si.cml.core:assign_rex' type='String' isStatic='true' isConst='false' defaultValue='l\$([1-9r][+\-*/]?)=' >
</field>
<field name='max_reference' fullname='org.si.cml.core:CMLAssign/org.si.cml.core:max_reference' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='CMLFormulaLiteral' fullname='org.si.cml.core:CMLFormulaLiteral' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLFormulaLiteral.as' namespace='org.si.cml.core' access='internal' baseclass='org.si.cml.core:CMLFormulaElem' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLFormulaLiteral' fullname='org.si.cml.core:CMLFormulaLiteral/org.si.cml.core:CMLFormulaLiteral' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='calc' fullname='org.si.cml.core:CMLFormulaLiteral/org.si.cml.core:calc' isStatic='false' isFinal='false' isOverride='true'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='cnta' fullname='org.si.cml.core:CMLFormulaLiteral/private:cnta' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='cntc' fullname='org.si.cml.core:CMLFormulaLiteral/private:cntc' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='dist' fullname='org.si.cml.core:CMLFormulaLiteral/private:dist' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='loop' fullname='org.si.cml.core:CMLFormulaLiteral/private:loop' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='ltrl' fullname='org.si.cml.core:CMLFormulaLiteral/private:ltrl' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='objh' fullname='org.si.cml.core:CMLFormulaLiteral/private:objh' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='parseLiteral' fullname='org.si.cml.core:CMLFormulaLiteral/org.si.cml.core:parseLiteral' isStatic='false' isFinal='false' isOverride='false'  param_names='opr' param_types='String' param_defaults='' result_type='int'>
</method>
<method name='posx' fullname='org.si.cml.core:CMLFormulaLiteral/private:posx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='posy' fullname='org.si.cml.core:CMLFormulaLiteral/private:posy' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_cnta' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_cnta' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_cntc' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_cntc' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_dist' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_dist' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_objh' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_objh' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_posx' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_posx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_posy' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_posy' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_sgnx' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_sgnx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_sgny' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_sgny' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_vell' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_vell' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_velx' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_velx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='prt_vely' fullname='org.si.cml.core:CMLFormulaLiteral/private:prt_vely' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='rand' fullname='org.si.cml.core:CMLFormulaLiteral/private:rand' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='rands' fullname='org.si.cml.core:CMLFormulaLiteral/private:rands' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='rank' fullname='org.si.cml.core:CMLFormulaLiteral/private:rank' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='rankg' fullname='org.si.cml.core:CMLFormulaLiteral/private:rankg' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='refer_i' fullname='org.si.cml.core:CMLFormulaLiteral/private:refer_i' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='sgnx' fullname='org.si.cml.core:CMLFormulaLiteral/private:sgnx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='sgny' fullname='org.si.cml.core:CMLFormulaLiteral/private:sgny' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='tgt_cnta' fullname='org.si.cml.core:CMLFormulaLiteral/private:tgt_cnta' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='tgt_cntc' fullname='org.si.cml.core:CMLFormulaLiteral/private:tgt_cntc' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='tgt_objh' fullname='org.si.cml.core:CMLFormulaLiteral/private:tgt_objh' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='tgt_posx' fullname='org.si.cml.core:CMLFormulaLiteral/private:tgt_posx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='tgt_posy' fullname='org.si.cml.core:CMLFormulaLiteral/private:tgt_posy' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='tgt_sgnx' fullname='org.si.cml.core:CMLFormulaLiteral/private:tgt_sgnx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='tgt_sgny' fullname='org.si.cml.core:CMLFormulaLiteral/private:tgt_sgny' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='tgt_vell' fullname='org.si.cml.core:CMLFormulaLiteral/private:tgt_vell' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='tgt_velx' fullname='org.si.cml.core:CMLFormulaLiteral/private:tgt_velx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='tgt_vely' fullname='org.si.cml.core:CMLFormulaLiteral/private:tgt_vely' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='vars' fullname='org.si.cml.core:CMLFormulaLiteral/private:vars' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='vell' fullname='org.si.cml.core:CMLFormulaLiteral/private:vell' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='velx' fullname='org.si.cml.core:CMLFormulaLiteral/private:velx' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='vely' fullname='org.si.cml.core:CMLFormulaLiteral/private:vely' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='literal_rex' fullname='org.si.cml.core:CMLFormulaLiteral/org.si.cml.core:literal_rex/get' isStatic='true' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='_literal_rex' fullname='org.si.cml.core:CMLFormulaLiteral/private:_literal_rex' type='String' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='defaultReferences' fullname='org.si.cml.core:CMLFormulaLiteral/org.si.cml.core:defaultReferences' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
</field>
<field name='func' fullname='org.si.cml.core:CMLFormulaLiteral/org.si.cml.core:func' type='Function' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='name' fullname='org.si.cml.core:CMLFormulaLiteral/org.si.cml.core:name' type='String' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='num' fullname='org.si.cml.core:CMLFormulaLiteral/org.si.cml.core:num' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<classRec name='CMLRefer' fullname='org.si.cml.core:CMLRefer' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLRefer.as' namespace='org.si.cml.core' access='public' baseclass='org.si.cml.core:CMLState' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLRefer' fullname='org.si.cml.core:CMLRefer/org.si.cml.core:CMLRefer' isStatic='false' isFinal='false' isOverride='false'  param_names='pointer;label_' param_types='org.si.cml.core:CMLState;String' param_defaults='null;null' result_type='*'>
</method>
<method name='_setCommand' fullname='org.si.cml.core:CMLRefer/protected:_setCommand' isStatic='false' isFinal='false' isOverride='true'  param_names='cmd' param_types='String' param_defaults='undefined' result_type='org.si.cml.core:CMLState'>
</method>
<method name='isLabelUnsolved' fullname='org.si.cml.core:CMLRefer/_cml_fiber_internal:isLabelUnsolved' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<field name='_label' fullname='org.si.cml.core:CMLRefer/_cml_fiber_internal:_label' type='String' isStatic='false' isConst='false' defaultValue='null' >
</field>
<classRec name='CMLFormula' fullname='org.si.cml.core:CMLFormula' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLFormula.as' namespace='org.si.cml.core' access='internal' baseclass='org.si.cml.core:CMLState' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLFormula' fullname='org.si.cml.core:CMLFormula/org.si.cml.core:CMLFormula' isStatic='false' isFinal='false' isOverride='false'  param_names='state;pnfa' param_types='org.si.cml.core:CMLState;Boolean' param_defaults='undefined;undefined' result_type='*'>
</method>
<method name='_calc' fullname='org.si.cml.core:CMLFormula/private:_calc' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_parse_and_push' fullname='org.si.cml.core:CMLFormula/private:_parse_and_push' isStatic='false' isFinal='false' isOverride='false'  param_names='rex;str;isSingle' param_types='RegExp;String;Boolean' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
</method>
<method name='_setCommand' fullname='org.si.cml.core:CMLFormula/protected:_setCommand' isStatic='false' isFinal='false' isOverride='true'  param_names='cmd' param_types='String' param_defaults='undefined' result_type='org.si.cml.core:CMLState'>
</method>
<method name='construct' fullname='org.si.cml.core:CMLFormula/org.si.cml.core:construct' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
</method>
<method name='pushLiteral' fullname='org.si.cml.core:CMLFormula/org.si.cml.core:pushLiteral' isStatic='false' isFinal='false' isOverride='false'  param_names='literal' param_types='' param_defaults='undefined' result_type='void'>
</method>
<method name='pushOperator' fullname='org.si.cml.core:CMLFormula/org.si.cml.core:pushOperator' isStatic='false' isFinal='false' isOverride='false'  param_names='oprator;isSingle' param_types=';Boolean' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='pushPostfix' fullname='org.si.cml.core:CMLFormula/org.si.cml.core:pushPostfix' isStatic='false' isFinal='false' isOverride='false'  param_names='postfix;isSingle' param_types=';Boolean' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='pushPrefix' fullname='org.si.cml.core:CMLFormula/org.si.cml.core:pushPrefix' isStatic='false' isFinal='false' isOverride='false'  param_names='prefix;isSingle' param_types=';Boolean' param_defaults='undefined;undefined' result_type='Boolean'>
</method>
<method name='operand_rex' fullname='org.si.cml.core:CMLFormula/org.si.cml.core:operand_rex/get' isStatic='true' isFinal='false' isOverride='false'  result_type='String'>
</method>
<field name='_arg_index' fullname='org.si.cml.core:CMLFormula/private:_arg_index' type='uint' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_form' fullname='org.si.cml.core:CMLFormula/private:_form' type='org.si.cml.core:CMLFormulaElem' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_operand_rex' fullname='org.si.cml.core:CMLFormula/private:_operand_rex' type='String' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='_postfixRegExp' fullname='org.si.cml.core:CMLFormula/private:_postfixRegExp' type='RegExp' isStatic='true' isConst='false' >
</field>
<field name='_prefixRegExp' fullname='org.si.cml.core:CMLFormula/private:_prefixRegExp' type='RegExp' isStatic='true' isConst='false' >
</field>
<field name='max_reference' fullname='org.si.cml.core:CMLFormula/org.si.cml.core:max_reference' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='stacOperand' fullname='org.si.cml.core:CMLFormula/private:stacOperand' type='Array' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='stacOperator' fullname='org.si.cml.core:CMLFormula/private:stacOperator' type='Array' isStatic='true' isConst='false' defaultValue='' >
</field>
<classRec name='CMLString' fullname='org.si.cml.core:CMLString' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLString.as' namespace='org.si.cml.core' access='public' baseclass='org.si.cml.core:CMLState' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLString' fullname='org.si.cml.core:CMLString/CMLString' isStatic='false' isFinal='false' isOverride='false'  param_names='str' param_types='String' param_defaults='undefined' result_type='*'>
</method>
<method name='_setCommand' fullname='org.si.cml.core:CMLString/protected:_setCommand' isStatic='false' isFinal='false' isOverride='true'  param_names='cmd' param_types='String' param_defaults='undefined' result_type='org.si.cml.core:CMLState'>
</method>
<field name='_string' fullname='org.si.cml.core:CMLString/_cml_internal:_string' type='String' isStatic='false' isConst='false' >
</field>
<classRec name='CMLUserDefine' fullname='org.si.cml.core:CMLUserDefine' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLUserDefine.as' namespace='org.si.cml.core' access='internal' baseclass='org.si.cml.core:CMLState' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLUserDefine' fullname='org.si.cml.core:CMLUserDefine/org.si.cml.core:CMLUserDefine' isStatic='false' isFinal='false' isOverride='false'  param_names='obj' param_types='' param_defaults='undefined' result_type='*'>
</method>
<method name='_call' fullname='org.si.cml.core:CMLUserDefine/private:_call' isStatic='false' isFinal='false' isOverride='false'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Boolean'>
</method>
<method name='_setCommand' fullname='org.si.cml.core:CMLUserDefine/protected:_setCommand' isStatic='false' isFinal='false' isOverride='true'  param_names='cmd' param_types='String' param_defaults='undefined' result_type='org.si.cml.core:CMLState'>
</method>
<field name='_argumentCount' fullname='org.si.cml.core:CMLUserDefine/private:_argumentCount' type='int' isStatic='false' isConst='false' >
</field>
<field name='_funcUserDefine' fullname='org.si.cml.core:CMLUserDefine/private:_funcUserDefine' type='Function' isStatic='false' isConst='false' >
</field>
<field name='_requireSequence' fullname='org.si.cml.core:CMLUserDefine/private:_requireSequence' type='Boolean' isStatic='false' isConst='false' >
</field>
<classRec name='CMLFormulaOperator' fullname='org.si.cml.core:CMLFormulaOperator' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLFormulaOperator.as' namespace='org.si.cml.core' access='internal' baseclass='org.si.cml.core:CMLFormulaElem' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLFormulaOperator' fullname='org.si.cml.core:CMLFormulaOperator/org.si.cml.core:CMLFormulaOperator' isStatic='false' isFinal='false' isOverride='false'  param_names='opr;isSingle' param_types='String;Boolean' param_defaults=';false' result_type='*'>
</method>
<method name='abs' fullname='org.si.cml.core:CMLFormulaOperator/private:abs' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='acs' fullname='org.si.cml.core:CMLFormulaOperator/private:acs' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='add' fullname='org.si.cml.core:CMLFormulaOperator/private:add' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='asn' fullname='org.si.cml.core:CMLFormulaOperator/private:asn' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='atn' fullname='org.si.cml.core:CMLFormulaOperator/private:atn' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='calc' fullname='org.si.cml.core:CMLFormulaOperator/org.si.cml.core:calc' isStatic='false' isFinal='false' isOverride='true'  param_names='fbr' param_types='org.si.cml:CMLFiber' param_defaults='undefined' result_type='Number'>
</method>
<method name='csd' fullname='org.si.cml.core:CMLFormulaOperator/private:csd' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='div' fullname='org.si.cml.core:CMLFormulaOperator/private:div' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='eqr' fullname='org.si.cml.core:CMLFormulaOperator/private:eqr' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='geq' fullname='org.si.cml.core:CMLFormulaOperator/private:geq' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='grt' fullname='org.si.cml.core:CMLFormulaOperator/private:grt' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='ind' fullname='org.si.cml.core:CMLFormulaOperator/private:ind' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='ird' fullname='org.si.cml.core:CMLFormulaOperator/private:ird' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='leq' fullname='org.si.cml.core:CMLFormulaOperator/private:leq' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='les' fullname='org.si.cml.core:CMLFormulaOperator/private:les' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='mul' fullname='org.si.cml.core:CMLFormulaOperator/private:mul' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='neg' fullname='org.si.cml.core:CMLFormulaOperator/private:neg' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='neq' fullname='org.si.cml.core:CMLFormulaOperator/private:neq' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='not' fullname='org.si.cml.core:CMLFormulaOperator/private:not' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='snd' fullname='org.si.cml.core:CMLFormulaOperator/private:snd' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='sqr' fullname='org.si.cml.core:CMLFormulaOperator/private:sqr' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='srd' fullname='org.si.cml.core:CMLFormulaOperator/private:srd' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='sub' fullname='org.si.cml.core:CMLFormulaOperator/private:sub' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='sup' fullname='org.si.cml.core:CMLFormulaOperator/private:sup' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<method name='tnd' fullname='org.si.cml.core:CMLFormulaOperator/private:tnd' isStatic='true' isFinal='false' isOverride='false'  param_names='r0;r1' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
</method>
<field name='func' fullname='org.si.cml.core:CMLFormulaOperator/private:func' type='Function' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='opr0' fullname='org.si.cml.core:CMLFormulaOperator/org.si.cml.core:opr0' type='org.si.cml.core:CMLFormulaElem' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='opr1' fullname='org.si.cml.core:CMLFormulaOperator/org.si.cml.core:opr1' type='org.si.cml.core:CMLFormulaElem' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='oprcnt' fullname='org.si.cml.core:CMLFormulaOperator/org.si.cml.core:oprcnt' type='int' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='postfix_rex' fullname='org.si.cml.core:CMLFormulaOperator/org.si.cml.core:postfix_rex' type='String' isStatic='true' isConst='false' defaultValue='(\))' >
</field>
<field name='prefix_rex' fullname='org.si.cml.core:CMLFormulaOperator/org.si.cml.core:prefix_rex' type='String' isStatic='true' isConst='false' defaultValue='([-!(]|\$sin|\$cos|\$tan|\$asn|\$acs|\$atn|\$sqr|\$i\?|\$i\?\?|\$int|\$abs)' >
</field>
<field name='priorL' fullname='org.si.cml.core:CMLFormulaOperator/org.si.cml.core:priorL' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='priorR' fullname='org.si.cml.core:CMLFormulaOperator/org.si.cml.core:priorR' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='sin' fullname='org.si.cml.core:CMLFormulaOperator/private:sin' type='org.si.cml.core:CMLSinTable' isStatic='true' isConst='false' defaultValue='' >
</field>
<classRec name='CMLRoot' fullname='org.si.cml.core:CMLRoot' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\core\CMLRoot.as' namespace='org.si.cml.core' access='public' baseclass='org.si.cml:CMLObject' isFinal='false' isDynamic='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</classRec>
<method name='CMLRoot' fullname='org.si.cml.core:CMLRoot/org.si.cml.core:CMLRoot' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ constructor ]]></description>
</method>
<field name='_scrollAngle' fullname='org.si.cml.core:CMLRoot/_cml_internal:_scrollAngle' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ scroll angle ]]></description>
</field>
<classRec name='ActorFactory' fullname='org.si.cml.extensions:ActorFactory' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\extensions\ActorFactory.as' namespace='org.si.cml.extensions' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ Factory class of Actors.
]]></description>
<example><![CDATA[basic usage.
<listing version="3.0">
public class Bullet extends Actor {
}
    ...
    
var bulletFactory:ActorFactory = new ActorFactory(Bullet);

    ...
    
var newBullet:Bullet = bulletFactory.newInstance();
</listing>
     ]]></example>
</classRec>
<method name='ActorFactory' fullname='org.si.cml.extensions:ActorFactory/org.si.cml.extensions:ActorFactory' isStatic='false' isFinal='false' isOverride='false'  param_names='actorClass;countMaxLimit;evalIDNumber;drawPriority' param_types='Class;int;int;int' param_defaults='null;0;-1;-1' result_type='*'>
<description><![CDATA[ create new Actor factory. 
          ]]></description>
<param><![CDATA[actorClass class to create new instance
          ]]></param>
<param><![CDATA[countMaxLimit maximum limit of instance count
          ]]></param>
<param><![CDATA[evalIDNumber id nubmer for hitting evaluation. Must be >= 0. Negative value to apply number automatically.
          ]]></param>
<param><![CDATA[drawPriority drawing priority number, young number drawing first. Must be >= 0. Negative value to apply number automatically.
         ]]></param>
</method>
<method name='newInstance' fullname='org.si.cml.extensions:ActorFactory/newInstance' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ <b>Get new instance from free list. You CANNOT create the new instance of registered class by "new" operator. </b> 
          ]]></description>
<return><![CDATA[new instance
         ]]></return>
</method>
<method name='drawPriority' fullname='org.si.cml.extensions:ActorFactory/drawPriority/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ drawing priority, young number drawing first. ]]></description>
</method>
<method name='evalIDNumber' fullname='org.si.cml.extensions:ActorFactory/evalIDNumber/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ id number for hitting evaluation. ]]></description>
</method>
<field name='_actorClass' fullname='org.si.cml.extensions:ActorFactory/org.si.cml.extensions:_actorClass' type='Class' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_countMaxLimit' fullname='org.si.cml.extensions:ActorFactory/org.si.cml.extensions:_countMaxLimit' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_defaultDrawPriority' fullname='org.si.cml.extensions:ActorFactory/org.si.cml.extensions:_defaultDrawPriority' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_defaultEvalIDNumber' fullname='org.si.cml.extensions:ActorFactory/org.si.cml.extensions:_defaultEvalIDNumber' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_freeList' fullname='org.si.cml.extensions:ActorFactory/org.si.cml.extensions:_freeList' type='org.si.cml.extensions:Actor' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_instanceCount' fullname='org.si.cml.extensions:ActorFactory/org.si.cml.extensions:_instanceCount' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<classRec name='ScopeLimitObject' fullname='org.si.cml.extensions:ScopeLimitObject' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\extensions\ScopeLimitObject.as' namespace='org.si.cml.extensions' access='public' baseclass='org.si.cml:CMLObject' isFinal='false' isDynamic='false' >
<description><![CDATA[ Extension of CMLObject that implements scope limitation. <br/>
      You have to call ScopeLimitObject.initialize() first, and you have to call CMLObject.update() for each frame.<br/>
      ScopeLimitObject.initialize() registers some user define commands as below,
      <ul>
      <li>&scon; Enables the available scope.</li>
      <li>&scoff; Disables the available scope.</li>
      </ul>
     ]]></description>
</classRec>
<method name='ScopeLimitObject' fullname='org.si.cml.extensions:ScopeLimitObject/ScopeLimitObject' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor ]]></description>
</method>
<method name='_initialize' fullname='org.si.cml.extensions:ScopeLimitObject/_initialize' isStatic='false' isFinal='false' isOverride='true'  param_names='parent_;isParts_;access_id_;x_;y_;vx_;vy_;head_' param_types='org.si.cml:CMLObject;Boolean;int;Number;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='checkScope' fullname='org.si.cml.extensions:ScopeLimitObject/checkScope' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Check scope and call destroy(0) when escaped. 
          ]]></description>
<return><![CDATA[flag escaped
         ]]></return>
</method>
<method name='expandScope' fullname='org.si.cml.extensions:ScopeLimitObject/expandScope' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ Expand scope size from defaultScope. ]]></description>
</method>
<method name='initialize' fullname='org.si.cml.extensions:ScopeLimitObject/initialize' isStatic='true' isFinal='false' isOverride='false'  param_names='vertical_' param_types='Boolean' param_defaults='true' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ <b>Call this function first of all</b> instead of CMLObject.initialize(). 
          ]]></description>
<param><![CDATA[vertical_ Flag of scrolling direction
          ]]></param>
<return><![CDATA[The root object.
          ]]></return>
<see><![CDATA[Actor#onPreCreate()
         ]]></see>
</method>
<method name='limitScope' fullname='org.si.cml.extensions:ScopeLimitObject/limitScope' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Check scope and stay inside of scope.
          ]]></description>
<return><![CDATA[flag limited
         ]]></return>
</method>
<method name='onUpdate' fullname='org.si.cml.extensions:ScopeLimitObject/onUpdate' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[  Callback function from CMLObject.update(). This function is called after updating position. Override this to update own parameters.]]></description>
</method>
<method name='setDefaultScope' fullname='org.si.cml.extensions:ScopeLimitObject/setDefaultScope' isStatic='true' isFinal='false' isOverride='false'  param_names='x;y;width;height' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ set default scope rectangle. ]]></description>
<default><![CDATA[Rectangle(-160, -240, 320, 480)  ]]></default>
</method>
<method name='defaultScopeHeight' fullname='org.si.cml.extensions:ScopeLimitObject/defaultScopeHeight/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ default scope height. ]]></description>
<default><![CDATA[480  ]]></default>
</method>
<method name='defaultScopeWidth' fullname='org.si.cml.extensions:ScopeLimitObject/defaultScopeWidth/get' isStatic='true' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ default scope width. ]]></description>
<default><![CDATA[320 ]]></default>
</method>
<method name='isEscaped' fullname='org.si.cml.extensions:ScopeLimitObject/isEscaped/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Did this object escape from the scope ? ]]></description>
</method>
<method name='scopeHeight' fullname='org.si.cml.extensions:ScopeLimitObject/scopeHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Scope height ]]></description>
<default><![CDATA[Actor.defaultScopeHeight ]]></default>
</method>
<method name='scopeWidth' fullname='org.si.cml.extensions:ScopeLimitObject/scopeWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ Scope width ]]></description>
<default><![CDATA[ScopeLimitObject.defaultScopeWidth ]]></default>
</method>
<method name='defaultScopeHeight' fullname='org.si.cml.extensions:ScopeLimitObject/defaultScopeHeight/set' isStatic='true' isFinal='false' isOverride='false'  param_names='h' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='defaultScopeWidth' fullname='org.si.cml.extensions:ScopeLimitObject/defaultScopeWidth/set' isStatic='true' isFinal='false' isOverride='false'  param_names='w' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scopeHeight' fullname='org.si.cml.extensions:ScopeLimitObject/scopeHeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='h' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scopeWidth' fullname='org.si.cml.extensions:ScopeLimitObject/scopeWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='w' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='defaultScopeXmax' fullname='org.si.cml.extensions:ScopeLimitObject/defaultScopeXmax' type='Number' isStatic='true' isConst='false' defaultValue='160' >
<description><![CDATA[ default value of the available scopes range ]]></description>
</field>
<field name='defaultScopeXmin' fullname='org.si.cml.extensions:ScopeLimitObject/defaultScopeXmin' type='Number' isStatic='true' isConst='false' defaultValue='-160' >
<description><![CDATA[ default value of the available scopes range ]]></description>
</field>
<field name='defaultScopeYmax' fullname='org.si.cml.extensions:ScopeLimitObject/defaultScopeYmax' type='Number' isStatic='true' isConst='false' defaultValue='240' >
<description><![CDATA[ default value of the available scopes range ]]></description>
</field>
<field name='defaultScopeYmin' fullname='org.si.cml.extensions:ScopeLimitObject/defaultScopeYmin' type='Number' isStatic='true' isConst='false' defaultValue='-240' >
<description><![CDATA[ default value of the available scopes range ]]></description>
</field>
<field name='scopeEnabled' fullname='org.si.cml.extensions:ScopeLimitObject/scopeEnabled' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[ The availabirity of scope check ]]></description>
</field>
<field name='scopeXmax' fullname='org.si.cml.extensions:ScopeLimitObject/scopeXmax' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ Maxmum x value of the available scope. ]]></description>
<default><![CDATA[Actor.defaultScopeXmax ]]></default>
</field>
<field name='scopeXmin' fullname='org.si.cml.extensions:ScopeLimitObject/scopeXmin' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ Minimum x value of the available scope. ]]></description>
<default><![CDATA[Actor.defaultScopeXmin ]]></default>
</field>
<field name='scopeYmax' fullname='org.si.cml.extensions:ScopeLimitObject/scopeYmax' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ Maximum y value of the available scope. ]]></description>
<default><![CDATA[Actor.defaultScopeYmax ]]></default>
</field>
<field name='scopeYmin' fullname='org.si.cml.extensions:ScopeLimitObject/scopeYmin' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ Minimum y value of the available scope. ]]></description>
<default><![CDATA[Actor.defaultScopeYmin ]]></default>
</field>
<classRec name='Actor' fullname='org.si.cml.extensions:Actor' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\extensions\Actor.as' namespace='org.si.cml.extensions' access='public' baseclass='org.si.cml.extensions:ScopeLimitObject' isFinal='false' isDynamic='false' >
<description><![CDATA[ Extension of CMLObject that implements scope, life, hit test, drawing priority and management of instances. <br/>
      You have to call Actor.initialize() first, and you have to call CMLObject.update() and Actor.draw() for each frame.<br/>
      Actor.initialize() registers some user define commands as below,
      <ul>
      <li>$life; Refers the value of Actor.life.</li>
      <li>&scon; Enables the available scope.</li>
      <li>&scoff; Disables the available scope.</li>
      <li>&prior; Changes the drawing priority. Specify the priority (posi/nega value) in argument.</li>
      </ul>
     ]]></description>
</classRec>
<method name='Actor' fullname='org.si.cml.extensions:Actor/Actor' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ Constructor ]]></description>
</method>
<method name='_finalize' fullname='org.si.cml.extensions:Actor/_finalize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_initialize' fullname='org.si.cml.extensions:Actor/_initialize' isStatic='false' isFinal='false' isOverride='true'  param_names='parent_;isParts_;access_id_;x_;y_;vx_;vy_;head_' param_types='org.si.cml:CMLObject;Boolean;int;Number;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_register' fullname='org.si.cml.extensions:Actor/protected:_register' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Register this object on the actor list. ]]></description>
</method>
<method name='_unregister' fullname='org.si.cml.extensions:Actor/protected:_unregister' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Unregister this object from the actor list. ]]></description>
</method>
<method name='draw' fullname='org.si.cml.extensions:Actor/draw' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ <b>Call this function for each frame</b> to call all onDraw()s. ]]></description>
</method>
<method name='initialize' fullname='org.si.cml.extensions:Actor/initialize' isStatic='true' isFinal='false' isOverride='false'  param_names='vertical_' param_types='Boolean' param_defaults='true' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ <b>Call this function first of all</b> instead of CMLObject.initialize(). 
          ]]></description>
<param><![CDATA[vertical_ Flag of scrolling direction
          ]]></param>
<return><![CDATA[The root object.
          ]]></return>
<see><![CDATA[Actor#onPreCreate()
         ]]></see>
</method>
<method name='onCreate' fullname='org.si.cml.extensions:Actor/onCreate' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[  Callback function on create. Override this to initialize.]]></description>
</method>
<method name='onDestroy' fullname='org.si.cml.extensions:Actor/onDestroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[  Callback function on destroy. Override this to finalize.
          ]]></description>
</method>
<method name='onDraw' fullname='org.si.cml.extensions:Actor/onDraw' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ Callback function to draw. This function is called in the order of the property drawPriority. ]]></description>
</method>
<method name='onFireObject' fullname='org.si.cml.extensions:Actor/onFireObject' isStatic='false' isFinal='false' isOverride='true'  param_names='args' param_types='Array' param_defaults='undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[  Statement "f" calls this when it needs. Override this to define the new CMLObject created by "f" command.
          ]]></description>
<param><![CDATA[args The arguments of sequence.
          ]]></param>
<return><![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]></return>
</method>
<method name='onHit' fullname='org.si.cml.extensions:Actor/onHit' isStatic='false' isFinal='false' isOverride='false'  param_names='act' param_types='org.si.cml.extensions:Actor' param_defaults='undefined' result_type='void'>
<description><![CDATA[ Callback function from Actor.test() when the hit test is true. ]]></description>
</method>
<method name='onNewObject' fullname='org.si.cml.extensions:Actor/onNewObject' isStatic='false' isFinal='false' isOverride='true'  param_names='args' param_types='Array' param_defaults='undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[  Statement "n" calls this when it needs. Override this to define the new CMLObject created by "n" command.
          ]]></description>
<param><![CDATA[args The arguments of sequence.
         ]]></param>
<return><![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]></return>
</method>
<method name='onUpdate' fullname='org.si.cml.extensions:Actor/onUpdate' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[   Callback function from CMLObject.update(). This function is called after updating position. Override this to update own parameters.]]></description>
</method>
<method name='test' fullname='org.si.cml.extensions:Actor/test' isStatic='true' isFinal='false' isOverride='false'  param_names='evalID0;evalID1' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ Hit test of 2 instances. Each Actor.onHit() is called when hit test is success.
          ]]></description>
<param><![CDATA[evalID0 evaluation ID number of 1st target ActorFactory. Optimum for slower actor.
          ]]></param>
<param><![CDATA[evalID1 evaluation ID number of 2nd target ActorFactory. Optimum for faster actor.
          ]]></param>
<see><![CDATA[ActorFactory#evalIDNumber
         ]]></see>
</method>
<method name='testf' fullname='org.si.cml.extensions:Actor/testf' isStatic='true' isFinal='false' isOverride='false'  param_names='evalID0;evalID1' param_types='int;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ Hit test of 2 instances, lazyer and faster. Each Actor.onHit() is called when hit test is success.
          ]]></description>
<param><![CDATA[evalID0 evaluation ID number of 1st target ActorFactory. 
          ]]></param>
<param><![CDATA[evalID1 evaluation ID number of 2nd target ActorFactory. 
          ]]></param>
<see><![CDATA[ActorFactory#evalIDNumber
         ]]></see>
</method>
<method name='actorFactory' fullname='org.si.cml.extensions:Actor/actorFactory/get' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.cml.extensions:ActorFactory'>
<description><![CDATA[ Factory class ]]></description>
</method>
<method name='drawPriority' fullname='org.si.cml.extensions:Actor/drawPriority/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Set the drawing priority. -1 to reset as default priority ]]></description>
</method>
<method name='evalEnabled' fullname='org.si.cml.extensions:Actor/evalEnabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Enable/disable the hit test. ]]></description>
<default><![CDATA[true ]]></default>
</method>
<method name='evalIDNumber' fullname='org.si.cml.extensions:Actor/evalIDNumber/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ Set the devaluation ID number. -1 to reset as default priority ]]></description>
</method>
<method name='drawPriority' fullname='org.si.cml.extensions:Actor/drawPriority/set' isStatic='false' isFinal='false' isOverride='false'  param_names='prior' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<method name='evalEnabled' fullname='org.si.cml.extensions:Actor/evalEnabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='enable' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='evalIDNumber' fullname='org.si.cml.extensions:Actor/evalIDNumber/set' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='int' param_defaults='undefined' result_type='void'>
</method>
<field name='_drawLayers' fullname='org.si.cml.extensions:Actor/_cml_internal:_drawLayers' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_drawPriority' fullname='org.si.cml.extensions:Actor/_cml_internal:_drawPriority' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_evalIDNumber' fullname='org.si.cml.extensions:Actor/_cml_internal:_evalIDNumber' type='int' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_evalLayers' fullname='org.si.cml.extensions:Actor/_cml_internal:_evalLayers' type='Array' isStatic='true' isConst='false' defaultValue='unknown' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_factory' fullname='org.si.cml.extensions:Actor/_cml_internal:_factory' type='org.si.cml.extensions:ActorFactory' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_nextDraw' fullname='org.si.cml.extensions:Actor/_cml_internal:_nextDraw' type='org.si.cml.extensions:Actor' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_nextEval' fullname='org.si.cml.extensions:Actor/_cml_internal:_nextEval' type='org.si.cml.extensions:Actor' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_prevDraw' fullname='org.si.cml.extensions:Actor/_cml_internal:_prevDraw' type='org.si.cml.extensions:Actor' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_prevEval' fullname='org.si.cml.extensions:Actor/_cml_internal:_prevEval' type='org.si.cml.extensions:Actor' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='life' fullname='org.si.cml.extensions:Actor/life' type='Number' isStatic='false' isConst='false' defaultValue='1' >
<description><![CDATA[ Life, you can use this as you like. ]]></description>
</field>
<field name='size' fullname='org.si.cml.extensions:Actor/size' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ Size to use in hit test ]]></description>
</field>
<classRec name='BulletRunner' fullname='org.si.cml.extensions:BulletRunner' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\cml\extensions\BulletRunner.as' namespace='org.si.cml.extensions' access='public' baseclass='org.si.cml.extensions:ScopeLimitObject' isFinal='false' isDynamic='false' >
<description><![CDATA[ The BulletRunner is simple class to apply CannonML. 
]]></description>
<example><![CDATA[basic usage.
<listing version="3.0">
// apply bullet runner to your own instance with callback functions
var br:BulletRunner = BulletRunner.apply(yourInstance, {"onCreate":onCreate...})
// and run sequence on bullet runner
br.runSequence("cml text", bml_xml or CMLSequence);
</listing>
     ]]></example>
</classRec>
<method name='BulletRunner' fullname='org.si.cml.extensions:BulletRunner/org.si.cml.extensions:BulletRunner' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_delete' fullname='org.si.cml.extensions:BulletRunner/private:_delete' isStatic='true' isFinal='false' isOverride='false'  param_names='br' param_types='org.si.cml.extensions:BulletRunner' param_defaults='undefined' result_type='void'>
</method>
<method name='_finalize' fullname='org.si.cml.extensions:BulletRunner/_finalize' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='_new_BulletRunner' fullname='org.si.cml.extensions:BulletRunner/private:_new_BulletRunner' isStatic='true' isFinal='false' isOverride='false'  param_names='actor;callbacks;propertyNames' param_types='' param_defaults='undefined;null;null' result_type='org.si.cml.extensions:BulletRunner'>
<description><![CDATA[ create new instance ]]></description>
</method>
<method name='_onTick' fullname='org.si.cml.extensions:BulletRunner/private:_onTick' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='_startTicker' fullname='org.si.cml.extensions:BulletRunner/private:_startTicker' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='_stopTicker' fullname='org.si.cml.extensions:BulletRunner/private:_stopTicker' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='apply' fullname='org.si.cml.extensions:BulletRunner/apply' isStatic='true' isFinal='false' isOverride='false'  param_names='actor;callbacks;propertyNames' param_types='' param_defaults='undefined;null;null' result_type='org.si.cml.extensions:BulletRunner'>
<description><![CDATA[ apply BulletRunner to the object
          ]]></description>
<param><![CDATA[actor The object controlled by BulletRunner.
          ]]></param>
<param><![CDATA[callbacks set Callback functions by object. The key of "onCreate", "onUpdate", "onDestroy", "onNew" and "onFire" are available.
          ]]></param>
<param><![CDATA[propertyNames target property name to control. The key of "x", "y" and "angle" are available.
          ]]></param>
<return><![CDATA[BulletRunner instance
         ]]></return>
</method>
<method name='isPaused' fullname='org.si.cml.extensions:BulletRunner/isPaused' isStatic='true' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ Is paused ? ]]></description>
</method>
<method name='onCreate' fullname='org.si.cml.extensions:BulletRunner/onCreate' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onDestroy' fullname='org.si.cml.extensions:BulletRunner/onDestroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onFireObject' fullname='org.si.cml.extensions:BulletRunner/onFireObject' isStatic='false' isFinal='false' isOverride='true'  param_names='args' param_types='Array' param_defaults='undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onNewObject' fullname='org.si.cml.extensions:BulletRunner/onNewObject' isStatic='false' isFinal='false' isOverride='true'  param_names='args' param_types='Array' param_defaults='undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='onUpdate' fullname='org.si.cml.extensions:BulletRunner/onUpdate' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='pause' fullname='org.si.cml.extensions:BulletRunner/pause' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ pause all bullet runner runnings ]]></description>
</method>
<method name='resume' fullname='org.si.cml.extensions:BulletRunner/resume' isStatic='true' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ resume all bullet runner runnings pause ]]></description>
</method>
<method name='runSequence' fullname='org.si.cml.extensions:BulletRunner/runSequence' isStatic='false' isFinal='false' isOverride='false'  param_names='seq;args;invertFlag' param_types=';Array;uint' param_defaults='undefined;null;0' result_type='org.si.cml:CMLFiber'>
<description><![CDATA[ run sequence. call CMLObject::create and CMLObject::execute inside.
          ]]></description>
<param><![CDATA[seq sequence. CMLSequence instance, String in CannonML or XML in BulletML is available.
          ]]></param>
<param><![CDATA[args The array of arguments to execute sequence.
          ]]></param>
<param><![CDATA[invertFlag The flag to invert execution, same as 'm' command.
          ]]></param>
<return><![CDATA[Instance of fiber that execute the sequence.
         ]]></return>
</method>
<method name='setDefaultScope' fullname='org.si.cml.extensions:BulletRunner/setDefaultScope' isStatic='true' isFinal='false' isOverride='false'  param_names='x;y;width;height' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[ default scope rectangle. ]]></description>
<default><![CDATA[Rectangle(-160, -240, 320, 480)  ]]></default>
</method>
<method name='updateTargetPosition' fullname='org.si.cml.extensions:BulletRunner/updateTargetPosition' isStatic='true' isFinal='false' isOverride='false'  param_names='xpos;ypos' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ update position that all bullets target to. 
          ]]></description>
<param><![CDATA[xpos x number.
          ]]></param>
<param><![CDATA[ypos y number.
         ]]></param>
</method>
<method name='callbacks' fullname='org.si.cml.extensions:BulletRunner/callbacks/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ set callback functions. The key of "onCreate", "onUpdate", "onDestroy", "onNew" and "onFire" are available.<br/>
          The function format of onCreate, onUpdate and onDestroy are function(br:BulletRunner) : Boolean. <br/>
          The function format of onNew and onFire are function(args:Array) : BulletRunner. You have to return your new actor by "n" or "f" command. The sequrence parameters are passed by arguments.<br/>
         ]]></description>
</method>
<method name='defaultPropertyNames' fullname='org.si.cml.extensions:BulletRunner/defaultPropertyNames/get' isStatic='true' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ default actor property name to control. "x", "y" and "angle" is available. ]]></description>
</method>
<method name='parentActor' fullname='org.si.cml.extensions:BulletRunner/parentActor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ parent object, returns null when this BulletRunner is created by aplly() or the parent is destructed. ]]></description>
</method>
<method name='propertyNames' fullname='org.si.cml.extensions:BulletRunner/propertyNames/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ actor property name to control. "x", "y" and "angle" is available. ]]></description>
</method>
<method name='callbacks' fullname='org.si.cml.extensions:BulletRunner/callbacks/set' isStatic='false' isFinal='false' isOverride='false'  param_names='functions' param_types='' param_defaults='undefined' result_type='void'>
</method>
<method name='defaultPropertyNames' fullname='org.si.cml.extensions:BulletRunner/defaultPropertyNames/set' isStatic='true' isFinal='false' isOverride='false'  param_names='names' param_types='' param_defaults='undefined' result_type='void'>
</method>
<method name='propertyNames' fullname='org.si.cml.extensions:BulletRunner/propertyNames/set' isStatic='false' isFinal='false' isOverride='false'  param_names='names' param_types='' param_defaults='undefined' result_type='void'>
</method>
<field name='_brunnerDict' fullname='org.si.cml.extensions:BulletRunner/private:_brunnerDict' type='flash.utils:Dictionary' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_bulletRunnerDefaultTarget' fullname='org.si.cml.extensions:BulletRunner/private:_bulletRunnerDefaultTarget' type='org.si.cml:CMLObject' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_freeList' fullname='org.si.cml.extensions:BulletRunner/private:_freeList' type='org.si.cml.core:CMLList' isStatic='true' isConst='false' defaultValue='' >
</field>
<field name='_ticker' fullname='org.si.cml.extensions:BulletRunner/private:_ticker' type='flash.display:Shape' isStatic='true' isConst='false' defaultValue='null' >
</field>
<field name='_tickerAvailable' fullname='org.si.cml.extensions:BulletRunner/private:_tickerAvailable' type='Boolean' isStatic='true' isConst='false' defaultValue='false' >
</field>
<field name='_tickerPaused' fullname='org.si.cml.extensions:BulletRunner/private:_tickerPaused' type='Boolean' isStatic='true' isConst='false' defaultValue='false' >
</field>
<field name='anglePropertyName' fullname='org.si.cml.extensions:BulletRunner/anglePropertyName' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ target property name of angle ]]></description>
</field>
<field name='atCreate' fullname='org.si.cml.extensions:BulletRunner/atCreate' type='Function' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ callback when the CML object is created on CML stage ]]></description>
</field>
<field name='atDestroy' fullname='org.si.cml.extensions:BulletRunner/atDestroy' type='Function' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ callback when the CML object is destroyed on CML stage ]]></description>
</field>
<field name='atFireObject' fullname='org.si.cml.extensions:BulletRunner/atFireObject' type='Function' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ callback when the CML object is required by "f commands  ]]></description>
</field>
<field name='atNewObject' fullname='org.si.cml.extensions:BulletRunner/atNewObject' type='Function' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ callback when the CML object is required by "n commands ]]></description>
</field>
<field name='atUpdate' fullname='org.si.cml.extensions:BulletRunner/atUpdate' type='Function' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ callback when the CML object is updated ]]></description>
</field>
<field name='defaultAnglePropertyName' fullname='org.si.cml.extensions:BulletRunner/defaultAnglePropertyName' type='String' isStatic='true' isConst='false' defaultValue='rotation' >
<description><![CDATA[ target property name of angle ]]></description>
</field>
<field name='defaultXPropertyName' fullname='org.si.cml.extensions:BulletRunner/defaultXPropertyName' type='String' isStatic='true' isConst='false' defaultValue='x' >
<description><![CDATA[ target property name of x ]]></description>
</field>
<field name='defaultYPropertyName' fullname='org.si.cml.extensions:BulletRunner/defaultYPropertyName' type='String' isStatic='true' isConst='false' defaultValue='y' >
<description><![CDATA[ target property name of y ]]></description>
</field>
<field name='xPropertyName' fullname='org.si.cml.extensions:BulletRunner/xPropertyName' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ target property name of x ]]></description>
</field>
<field name='yPropertyName' fullname='org.si.cml.extensions:BulletRunner/yPropertyName' type='String' isStatic='false' isConst='false' >
<description><![CDATA[ target property name of y ]]></description>
</field>
<classRec name='CMLMovieClipSprite' fullname='org.si.b3:CMLMovieClipSprite' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\b3\CMLMovieClipSprite.as' namespace='org.si.b3' access='public' baseclass='org.si.cml.extensions:Actor' isFinal='false' isDynamic='false' >
<description><![CDATA[ CMLMovieClipSprite is a sprite class on CMLMovieClip. ]]></description>
</classRec>
<method name='CMLMovieClipSprite' fullname='org.si.b3:CMLMovieClipSprite/org.si.b3:CMLMovieClipSprite' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[ constructor ]]></description>
</method>
<method name='onCreate' fullname='org.si.b3:CMLMovieClipSprite/onCreate' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[   Callback function on create. Override this to initialize.]]></description>
</method>
<method name='onDestroy' fullname='org.si.b3:CMLMovieClipSprite/onDestroy' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[   Callback function on destroy. Override this to finalize.
          ]]></description>
</method>
<method name='onFireObject' fullname='org.si.b3:CMLMovieClipSprite/onFireObject' isStatic='false' isFinal='false' isOverride='true'  param_names='args' param_types='Array' param_defaults='undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[   Statement "f" calls this when it needs. Override this to define the new CMLObject created by "f" command.
          ]]></description>
<param><![CDATA[args The arguments of sequence.
          ]]></param>
<return><![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]></return>
</method>
<method name='onNewObject' fullname='org.si.b3:CMLMovieClipSprite/onNewObject' isStatic='false' isFinal='false' isOverride='true'  param_names='args' param_types='Array' param_defaults='undefined' result_type='org.si.cml:CMLObject'>
<description><![CDATA[   Statement "n" calls this when it needs. Override this to define the new CMLObject created by "n" command.
          ]]></description>
<param><![CDATA[args The arguments of sequence.
         ]]></param>
<return><![CDATA[The new CMLObject created by "n" command. You must not activate(call create()) returning CMLObject.
         ]]></return>
</method>
<method name='onUpdate' fullname='org.si.b3:CMLMovieClipSprite/onUpdate' isStatic='false' isFinal='false' isOverride='true'  result_type='void'>
<description><![CDATA[    Callback function from CMLObject.update(). This function is called after updating position. Override this to update own parameters.]]></description>
</method>
<classRec name='CMLMovieClipTexture' fullname='org.si.b3:CMLMovieClipTexture' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\b3\CMLMovieClipTexture.as' namespace='org.si.b3' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[ CMLMovieClipTexture provides BitmapData for CMLMovieClip. ]]></description>
</classRec>
<method name='CMLMovieClipTexture' fullname='org.si.b3:CMLMovieClipTexture/org.si.b3:CMLMovieClipTexture' isStatic='false' isFinal='false' isOverride='false'  param_names='bitmapData;texX;texY;texWidth;texHeight;drawable;animationCount;areaWidth;areaHeight;columnPriority' param_types='flash.display:BitmapData;int;int;int;int;Boolean;int;int;int;Boolean' param_defaults='undefined;0;0;0;0;false;1;0;0;true' result_type='*'>
<description><![CDATA[ constructor 
          ]]></description>
<param><![CDATA[bitmapData source texture
          ]]></param>
<param><![CDATA[texX x coordinate of left edge on source texture
          ]]></param>
<param><![CDATA[texY y coordinate of top edge on source texture
          ]]></param>
<param><![CDATA[texWidth texture width
          ]]></param>
<param><![CDATA[texHeight texture height
          ]]></param>
<param><![CDATA[drawable true to use CMLMovieClip.drawTexture()
          ]]></param>
<param><![CDATA[animationCount animation count
          ]]></param>
<param><![CDATA[areaWidth area width of animation sequence
          ]]></param>
<param><![CDATA[areaHeight area height of animation sequence
          ]]></param>
<param><![CDATA[columnPriority scanning direction of animation sequence, true for horizontal
         ]]></param>
</method>
<method name='_cutout' fullname='org.si.b3:CMLMovieClipTexture/private:_cutout' isStatic='false' isFinal='false' isOverride='false'  param_names='sx;sy;rot;colt;bg;margin' param_types='Number;Number;Number;flash.geom:ColorTransform;uint;int' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='org.si.b3:CMLMovieClipTexture'>
</method>
<method name='_max4' fullname='org.si.b3:CMLMovieClipTexture/private:_max4' isStatic='false' isFinal='false' isOverride='false'  param_names='a;b;c;d' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
</method>
<method name='_min4' fullname='org.si.b3:CMLMovieClipTexture/private:_min4' isStatic='false' isFinal='false' isOverride='false'  param_names='a;b;c;d' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
</method>
<method name='clone' fullname='org.si.b3:CMLMovieClipTexture/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.b3:CMLMovieClipTexture'>
<description><![CDATA[ cloning ]]></description>
</method>
<method name='createAlphaMap' fullname='org.si.b3:CMLMovieClipTexture/createAlphaMap' isStatic='false' isFinal='false' isOverride='false'  param_names='fillColor' param_types='uint' param_defaults='0xffffffff' result_type='org.si.b3:CMLMovieClipTexture'>
<description><![CDATA[ create alpha map 
          ]]></description>
<param><![CDATA[fillColor filling color
         ]]></param>
</method>
<method name='createRotateAnimation' fullname='org.si.b3:CMLMovieClipTexture/createRotateAnimation' isStatic='false' isFinal='false' isOverride='false'  param_names='scaleX;scaleY;minAngle;maxAngle;animationCount;colorTransform;backgroundColor;margin' param_types='Number;Number;Number;Number;int;flash.geom:ColorTransform;uint;int' param_defaults='1;1;-180;180;32;null;0;0' result_type='org.si.b3:CMLMovieClipTexture'>
<description><![CDATA[ create rotate animation
          ]]></description>
<param><![CDATA[scaleX horizontal scaling factor
          ]]></param>
<param><![CDATA[scaleY vertical scaling factor
          ]]></param>
<param><![CDATA[minAngle start angle in degree
          ]]></param>
<param><![CDATA[maxAngle end angle in degree
          ]]></param>
<param><![CDATA[animationCount animation count 
          ]]></param>
<param><![CDATA[colorTransform color transform
          ]]></param>
<param><![CDATA[backgroundColor bacground color
          ]]></param>
<param><![CDATA[margin margin around the result texture
          ]]></param>
<return><![CDATA[animation sequence of cut out textures. property "drawable" is true.
         ]]></return>
</method>
<method name='cutout' fullname='org.si.b3:CMLMovieClipTexture/cutout' isStatic='false' isFinal='false' isOverride='false'  param_names='scaleX;scaleY;angle;colorTransform;backgroundColor;margin' param_types='Number;Number;Number;flash.geom:ColorTransform;uint;int' param_defaults='1;1;0;null;0;0' result_type='org.si.b3:CMLMovieClipTexture'>
<description><![CDATA[ cut out texture with scaling and rotation
          ]]></description>
<param><![CDATA[scaleX horizontal scaling factor
          ]]></param>
<param><![CDATA[scaleY vertical scaling factor
          ]]></param>
<param><![CDATA[angle rotation angle in degree
          ]]></param>
<param><![CDATA[colorTransform color transform
          ]]></param>
<param><![CDATA[backgroundColor bacground color
          ]]></param>
<param><![CDATA[margin margin around the result texture
          ]]></param>
<return><![CDATA[cut out texture. property "drawable" is true.
         ]]></return>
</method>
<method name='animationCount' fullname='org.si.b3:CMLMovieClipTexture/animationCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ animation count ]]></description>
</method>
<method name='drawable' fullname='org.si.b3:CMLMovieClipTexture/drawable/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ true if you want to use CMLMovieClip.draw() ]]></description>
</method>
<method name='height' fullname='org.si.b3:CMLMovieClipTexture/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ texture height ]]></description>
</method>
<method name='width' fullname='org.si.b3:CMLMovieClipTexture/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='int'>
<description><![CDATA[ texture width ]]></description>
</method>
<method name='drawable' fullname='org.si.b3:CMLMovieClipTexture/drawable/set' isStatic='false' isFinal='false' isOverride='false'  param_names='b' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<field name='alphaMap' fullname='org.si.b3:CMLMovieClipTexture/alphaMap' type='org.si.b3:CMLMovieClipTexture' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ alpha map ]]></description>
</field>
<field name='animationPattern' fullname='org.si.b3:CMLMovieClipTexture/animationPattern' type='Vector' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ animation pattern ]]></description>
</field>
<field name='bitmapData' fullname='org.si.b3:CMLMovieClipTexture/bitmapData' type='flash.display:BitmapData' isStatic='false' isConst='false' >
<description><![CDATA[ source bitmap data ]]></description>
</field>
<field name='center' fullname='org.si.b3:CMLMovieClipTexture/center' type='flash.geom:Point' isStatic='false' isConst='false' >
<description><![CDATA[ texture center ]]></description>
</field>
<field name='cutoutBitmapData' fullname='org.si.b3:CMLMovieClipTexture/cutoutBitmapData' type='flash.display:BitmapData' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ cutout bitmap data ]]></description>
</field>
<field name='rect' fullname='org.si.b3:CMLMovieClipTexture/rect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
<description><![CDATA[ cutout rectangle ]]></description>
</field>
<classRec name='CMLMovieClip' fullname='org.si.b3:CMLMovieClip' sourcefile='C:\usr\development\flex\_lib\spark\CannonML\trunk\src\org\si\b3\CMLMovieClip.as' namespace='org.si.b3' access='public' baseclass='flash.display:Bitmap' isFinal='false' isDynamic='false' >
<description><![CDATA[ CMLMovieClip is a very simple framework for shmups ! <br/> 
      This class manages scenes, controler, fps, screen and basic cannonML operations.
     ]]></description>
</classRec>
<method name='CMLMovieClip' fullname='org.si.b3:CMLMovieClip/org.si.b3:CMLMovieClip' isStatic='false' isFinal='false' isOverride='false'  param_names='parent;xpos;ypos;width;height;clearColor;addEnterFrameListener;onFirstEnterFrame;scopeMargin;scrollDirecition' param_types='flash.display:DisplayObjectContainer;int;int;int;int;int;Boolean;Function;Number;String' param_defaults='undefined;undefined;undefined;undefined;undefined;0x000000;true;null;32;vertical' result_type='void'>
<description><![CDATA[ constructor.
          ]]></description>
<param><![CDATA[parent parent DisplayObjectContainer
          ]]></param>
<param><![CDATA[xpos position x
          ]]></param>
<param><![CDATA[ypos position y
          ]]></param>
<param><![CDATA[width screen width
          ]]></param>
<param><![CDATA[height screen height
          ]]></param>
<param><![CDATA[clearColor clear color
          ]]></param>
<param><![CDATA[addEnterFrameListener add Event.ENTER_FRAME event listener.
          ]]></param>
<param><![CDATA[scopeMargin margin of object's moving range.
          ]]></param>
<param><![CDATA[scrollDirecition scrolling direction CMLMovieClip.VERTICAL or CMLMovieClip.HORIZONTAL is available.
         ]]></param>
</method>
<method name='_onFirstUpdate' fullname='org.si.b3:CMLMovieClip/private:_onFirstUpdate' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
</method>
<method name='clearScreen' fullname='org.si.b3:CMLMovieClip/clearScreen' isStatic='false' isFinal='false' isOverride='false'  result_type='org.si.b3:CMLMovieClip'>
<description><![CDATA[ clear screen. fill all of screen by clearColor ]]></description>
</method>
<method name='copyPixels' fullname='org.si.b3:CMLMovieClip/copyPixels' isStatic='false' isFinal='false' isOverride='false'  param_names='src;srcX;srcY;srcWidth;srcHeight;dstX;dstY' param_types='flash.display:BitmapData;int;int;int;int;int;int' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='org.si.b3:CMLMovieClip'>
<description><![CDATA[ call screen.copyPixels without Rectangle instance. 
          ]]></description>
<param><![CDATA[src source BitmapData
          ]]></param>
<param><![CDATA[srcX x of copying area's left edge
          ]]></param>
<param><![CDATA[srcY y of copying area's top edge
          ]]></param>
<param><![CDATA[srcWidth width of copying area
          ]]></param>
<param><![CDATA[srcHeight height of copying area
          ]]></param>
<param><![CDATA[dstX paste x
          ]]></param>
<param><![CDATA[dstY paste y
         ]]></param>
</method>
<method name='copyTexture' fullname='org.si.b3:CMLMovieClip/copyTexture' isStatic='false' isFinal='false' isOverride='false'  param_names='texture;x;y;animIndex' param_types='org.si.b3:CMLMovieClipTexture;int;int;int' param_defaults='undefined;undefined;undefined;0' result_type='org.si.b3:CMLMovieClip'>
<description><![CDATA[ copy CMLMovieClipTexture to the screen
          ]]></description>
<param><![CDATA[texture CMLMovieClipTexture instance
          ]]></param>
<param><![CDATA[x x of texture center
          ]]></param>
<param><![CDATA[y y of texture center
          ]]></param>
<param><![CDATA[animIndex animation index
         ]]></param>
</method>
<method name='draw' fullname='org.si.b3:CMLMovieClip/draw' isStatic='false' isFinal='false' isOverride='false'  param_names='src;xpos;ypos;scaleX;scaleY;angle;blendMode;colorTransform' param_types='flash.display:IBitmapDrawable;Number;Number;Number;Number;Number;String;flash.geom:ColorTransform' param_defaults='undefined;undefined;undefined;1;1;0;null;null' result_type='org.si.b3:CMLMovieClip'>
<description><![CDATA[ call screen.draw without Matrix
          ]]></description>
<param><![CDATA[src source IBitmapDrawable
          ]]></param>
<param><![CDATA[xpos left position x of source
          ]]></param>
<param><![CDATA[ypos top position y of source
          ]]></param>
<param><![CDATA[scaleX horizontal scaling factor
          ]]></param>
<param><![CDATA[scaleY vertical scaling factor
          ]]></param>
<param><![CDATA[angle rotating angle in degree
          ]]></param>
<param><![CDATA[blendMode blend mode
          ]]></param>
<param><![CDATA[colorTransform color transform
         ]]></param>
</method>
<method name='drawTexture' fullname='org.si.b3:CMLMovieClip/drawTexture' isStatic='false' isFinal='false' isOverride='false'  param_names='texture;xpos;ypos;scaleX;scaleY;angle;blendMode;colorTransform;animIndex' param_types='org.si.b3:CMLMovieClipTexture;Number;Number;Number;Number;Number;String;flash.geom:ColorTransform;int' param_defaults='undefined;undefined;undefined;1;1;0;null;null;0' result_type='org.si.b3:CMLMovieClip'>
<description><![CDATA[ draw CMLMovieClipTexture to the screen, you have to set CMLMovieClipTexture.drawable = true.
          ]]></description>
<param><![CDATA[src source IBitmapDrawable
          ]]></param>
<param><![CDATA[xpos center position x of source
          ]]></param>
<param><![CDATA[ypos center position y of source
          ]]></param>
<param><![CDATA[scaleX horizontal scaling factor
          ]]></param>
<param><![CDATA[scaleY vertical scaling factor
          ]]></param>
<param><![CDATA[angle rotating angle in degree
          ]]></param>
<param><![CDATA[blendMode blend mode
          ]]></param>
<param><![CDATA[colorTransform color transform
          ]]></param>
<param><![CDATA[animIndex animation index
         ]]></param>
</method>
<method name='fillRect' fullname='org.si.b3:CMLMovieClip/fillRect' isStatic='false' isFinal='false' isOverride='false'  param_names='color;x;y;width;height' param_types='uint;int;int;int;int' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='org.si.b3:CMLMovieClip'>
<description><![CDATA[ call screen.fillRect without Rectangle instance. 
          ]]></description>
<param><![CDATA[color fill color
          ]]></param>
<param><![CDATA[x x of left edge
          ]]></param>
<param><![CDATA[y y of top edge
          ]]></param>
<param><![CDATA[width rectangle width
          ]]></param>
<param><![CDATA[height rectangle height
         ]]></param>
</method>
<method name='setSize' fullname='org.si.b3:CMLMovieClip/setSize' isStatic='false' isFinal='false' isOverride='false'  param_names='width;height;clearColor;scopeMargin' param_types='int;int;int;Number' param_defaults='undefined;undefined;0x000000;32' result_type='org.si.b3:CMLMovieClip'>
<description><![CDATA[ Set screen size
          ]]></description>
<param><![CDATA[width screen width
          ]]></param>
<param><![CDATA[height screen height
          ]]></param>
<param><![CDATA[clearColor clear color
          ]]></param>
<param><![CDATA[scopeMargin margin of object's moving range.
          ]]></param>
<return><![CDATA[this instance
         ]]></return>
</method>
<method name='update' fullname='org.si.b3:CMLMovieClip/update' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
<description><![CDATA[ update for one frame ]]></description>
</method>
<method name='clearColor' fullname='org.si.b3:CMLMovieClip/clearColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[ clear color ]]></description>
</method>
<method name='scopeMargin' fullname='org.si.b3:CMLMovieClip/scopeMargin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[ margin of object's moving range. ]]></description>
</method>
<method name='clearColor' fullname='org.si.b3:CMLMovieClip/clearColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='col' param_types='uint' param_defaults='undefined' result_type='void'>
</method>
<method name='scopeMargin' fullname='org.si.b3:CMLMovieClip/scopeMargin/set' isStatic='false' isFinal='false' isOverride='false'  param_names='margin' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='HORIZONTAL' fullname='org.si.b3:CMLMovieClip/HORIZONTAL' type='String' isStatic='true' isConst='true' defaultValue='horizontal' >
</field>
<field name='KEY_BUTTON0' fullname='org.si.b3:CMLMovieClip/KEY_BUTTON0' type='uint' isStatic='true' isConst='true' defaultValue='4' >
</field>
<field name='KEY_BUTTON1' fullname='org.si.b3:CMLMovieClip/KEY_BUTTON1' type='uint' isStatic='true' isConst='true' defaultValue='5' >
</field>
<field name='KEY_BUTTON2' fullname='org.si.b3:CMLMovieClip/KEY_BUTTON2' type='uint' isStatic='true' isConst='true' defaultValue='6' >
</field>
<field name='KEY_BUTTON3' fullname='org.si.b3:CMLMovieClip/KEY_BUTTON3' type='uint' isStatic='true' isConst='true' defaultValue='7' >
</field>
<field name='KEY_BUTTON4' fullname='org.si.b3:CMLMovieClip/KEY_BUTTON4' type='uint' isStatic='true' isConst='true' defaultValue='8' >
</field>
<field name='KEY_BUTTON5' fullname='org.si.b3:CMLMovieClip/KEY_BUTTON5' type='uint' isStatic='true' isConst='true' defaultValue='9' >
</field>
<field name='KEY_BUTTON6' fullname='org.si.b3:CMLMovieClip/KEY_BUTTON6' type='uint' isStatic='true' isConst='true' defaultValue='10' >
</field>
<field name='KEY_BUTTON7' fullname='org.si.b3:CMLMovieClip/KEY_BUTTON7' type='uint' isStatic='true' isConst='true' defaultValue='11' >
</field>
<field name='KEY_DOWN' fullname='org.si.b3:CMLMovieClip/KEY_DOWN' type='uint' isStatic='true' isConst='true' defaultValue='1' >
</field>
<field name='KEY_ESCAPE' fullname='org.si.b3:CMLMovieClip/KEY_ESCAPE' type='uint' isStatic='true' isConst='true' defaultValue='14' >
</field>
<field name='KEY_LEFT' fullname='org.si.b3:CMLMovieClip/KEY_LEFT' type='uint' isStatic='true' isConst='true' defaultValue='2' >
</field>
<field name='KEY_RESET' fullname='org.si.b3:CMLMovieClip/KEY_RESET' type='uint' isStatic='true' isConst='true' defaultValue='13' >
</field>
<field name='KEY_RIGHT' fullname='org.si.b3:CMLMovieClip/KEY_RIGHT' type='uint' isStatic='true' isConst='true' defaultValue='3' >
</field>
<field name='KEY_START' fullname='org.si.b3:CMLMovieClip/KEY_START' type='uint' isStatic='true' isConst='true' defaultValue='12' >
</field>
<field name='KEY_SYSTEM' fullname='org.si.b3:CMLMovieClip/KEY_SYSTEM' type='uint' isStatic='true' isConst='true' defaultValue='15' >
</field>
<field name='KEY_UP' fullname='org.si.b3:CMLMovieClip/KEY_UP' type='uint' isStatic='true' isConst='true' defaultValue='0' >
</field>
<field name='VERTICAL' fullname='org.si.b3:CMLMovieClip/VERTICAL' type='String' isStatic='true' isConst='true' defaultValue='vertical' >
</field>
<field name='_addEnterFrameListener' fullname='org.si.b3:CMLMovieClip/private:_addEnterFrameListener' type='Boolean' isStatic='false' isConst='false' >
</field>
<field name='_clearColor' fullname='org.si.b3:CMLMovieClip/private:_clearColor' type='uint' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_mat' fullname='org.si.b3:CMLMovieClip/private:_mat' type='flash.geom:Matrix' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_offsetX' fullname='org.si.b3:CMLMovieClip/private:_offsetX' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_offsetY' fullname='org.si.b3:CMLMovieClip/private:_offsetY' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='_onFirstEnterFrame' fullname='org.si.b3:CMLMovieClip/private:_onFirstEnterFrame' type='Function' isStatic='false' isConst='false' defaultValue='null' >
</field>
<field name='_pt' fullname='org.si.b3:CMLMovieClip/private:_pt' type='flash.geom:Point' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_rc' fullname='org.si.b3:CMLMovieClip/private:_rc' type='flash.geom:Rectangle' isStatic='false' isConst='false' defaultValue='' >
</field>
<field name='_scopeMargin' fullname='org.si.b3:CMLMovieClip/private:_scopeMargin' type='Number' isStatic='false' isConst='false' defaultValue='32' >
</field>
<field name='_vscrollFlag' fullname='org.si.b3:CMLMovieClip/private:_vscrollFlag' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
</field>
<field name='control' fullname='org.si.b3:CMLMovieClip/control' type='org.si.b3.modules:CMLMovieClipControl' isStatic='false' isConst='false' >
<description><![CDATA[ Controler management module ]]></description>
</field>
<field name='fps' fullname='org.si.b3:CMLMovieClip/fps' type='org.si.b3.modules:CMLMovieClipFPS' isStatic='false' isConst='false' >
<description><![CDATA[ FPS management module ]]></description>
</field>
<field name='pause' fullname='org.si.b3:CMLMovieClip/pause' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ Pause flag ]]></description>
</field>
<field name='scene' fullname='org.si.b3:CMLMovieClip/scene' type='org.si.b3.modules:CMLMovieClipScene' isStatic='false' isConst='false' >
<description><![CDATA[ Scene management module ]]></description>
</field>
<field name='screen' fullname='org.si.b3:CMLMovieClip/screen' type='flash.display:BitmapData' isStatic='false' isConst='false' defaultValue='null' >
<description><![CDATA[ Screen ]]></description>
</field>
</asdoc>
